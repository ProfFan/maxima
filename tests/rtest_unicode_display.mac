/* tests adapted from tests/rtest3.mac */

declare_index_properties
 (E, [postsubscript, postsuperscript, presuperscript, presubscript],
  G, [postsubscript, postsuperscript, presuperscript, presubscript,
      postsuperscript, presubscript]);
done;

block ([maxima_unicode_display: true], with_default_2d_display ([S: make_string_output_stream ()],
  with_stdout (S, ?terpri (), print ((1 - G[a, b, c, d, w, x])/E[1, 1/2, 2/3, 17/29])),
  get_output_stream_string (S)));
"
       c b, w
1 -     G
    d, x a
───────────── 
    2/3 1/2
       E
  17/29 1
";

(print_string_2d (e) := with_default_2d_display (printf (false, "~m", e)), 0);
0;

block ([maxima_unicode_display: true], print_string_2d (lsum(1/f(g(x)/h(x)), x, LOOOOOOOOONG_EXPR)));
"____
╲                         1
 >                     ───────
╱                        g(x)
‾‾‾‾                   f(────)
x in LOOOOOOOOONG_EXPR   h(x)
"$

/* other examples which call DSUMPROD in test suite */

block ([maxima_unicode_display: true], print_string_2d ('sum(x^k / k,k,1,inf)));
"inf
____   k
╲     x
 >    ──
╱     k
‾‾‾‾
k = 1
"$

block ([maxima_unicode_display: true], print_string_2d (subst (k = \*index, 'sum(x^k / k,k,1,inf))));
"inf
____        *index
╲          x
 >         ───────
╱          *index
‾‾‾‾
*index = 1
"$

block ([maxima_unicode_display: true], print_string_2d ('sum(i!,i,1,4)));
" 4
____
╲
 >    i!
╱
‾‾‾‾
i = 1
"$

block ([maxima_unicode_display: true], print_string_2d ('sum(g(i),i,0,n)));
" n
____
╲
 >    g(i)
╱
‾‾‾‾
i = 0
"$

block ([maxima_unicode_display: true], print_string_2d ('sum(g(i),i,0,n) + 1));
" n
____
╲
 >    g(i) + 1
╱
‾‾‾‾
i = 0
"$

block ([maxima_unicode_display: true], print_string_2d (foo: unsum(product(i^2,i,1,n),n)));
" n - 1
 /───\\
  │ │   2
( │ │  i ) (n - 1) (n + 1)
  │ │
 i = 1
"$

block ([maxima_unicode_display: true], print_string_2d (nusum(foo,n,1,n)));
"  n
/───\\
 │ │   2
 │ │  i  - 1
 │ │
i = 1
"$

block ([maxima_unicode_display: true], print_string_2d (niceindices (powerseries(log(sin(x)/x),x,0))));
"inf
____       i  2 i - 1            2 i
╲     (- 1)  2        bern(2 i) x
 >    ──────────────────────────────
╱                i (2 i)!
‾‾‾‾
i = 1
"$

block ([maxima_unicode_display: true], print_string_2d (product((x^i+1)^2.5,i,1,inf)/(x^2+1)));
" inf
/───\\
 │ │    i     2.5
 │ │  (x  + 1)
 │ │
i = 1
─────────────────
      2
     x  + 1
"$

/* additional DSUMPROD examples */

block ([maxima_unicode_display: true], print_string_2d ('lsum(1/(1+f(x)/2), kskdsksdkkdksdksd, w999393293923939losl)));
"____
╲                                            1
 >                                        ────────
╱                                         f(x)
‾‾‾‾                                      ──── + 1
kskdsksdkkdksdksd in w999393293923939losl  2
"$

block ([maxima_unicode_display: true], print_string_2d ('lsum(1/(1+f(x)/2), kskdsksdkkdksdksd, w999393293923939losl^2)));
"____
╲                                             1
 >                                         ────────
╱                                          f(x)
‾‾‾‾                                       ──── + 1
                                         2  2
kskdsksdkkdksdksd in w999393293923939losl
"$

block ([maxima_unicode_display: true], print_string_2d ('lsum(1/(1+f(x)/2), kskdsksdkkdksdksd, w999393293923939losl^skdkskdsk)));
"____
╲                                                     1
 >                                                 ────────
╱                                                  f(x)
‾‾‾‾                                               ──── + 1
                                         skdkskdsk  2
kskdsksdkkdksdksd in w999393293923939losl
"$

block ([maxima_unicode_display: true], print_string_2d (' ?rat(a, b)));
"a
─
b
";

block ([maxima_unicode_display: true], print_string_2d (' "/"(a, b)));
"a
─
b
";

block ([maxima_unicode_display: true], print_string_2d ('matrix([a, b, c])));
"┌         ┐
│ a  b  c │
└         ┘
";

block ([maxima_unicode_display: true], print_string_2d ('?mbox(a)));
"╔═╗
║a║
╚═╝
";

block ([maxima_unicode_display: true], print_string_2d ('?mlabox (a, b)));
"b═╗
║a║
╚═╝
";

/* tests adapted from tests/rtest9a.mac */

(verify_display_2d (expr, expected_output) :=
  block ([S, output],
    with_default_2d_display
     (S : make_string_output_stream (),
      with_stdout (S, print (expr)),
      output : get_output_stream_string (S),
      close (S),
      if is (output = expected_output) then true else [expected_output, output])),
 verify_display_1d (expr, expected_output) :=
   block ([output : string (expr)], if is (output = expected_output) then true else [expected_output, output]),
 0);
0;

block ([powerdisp : false, maxima_unicode_display: true],
  verify_display_2d ((x+1)/(x+2),
"x + 1
───── 
x + 2
"));
true;

block ([powerdisp : true, maxima_unicode_display: true],
  verify_display_2d ((x+1)/(x+2),
"1 + x
───── 
2 + x
"));
true;

(H : ( n2 * s^2 + n1 * s + n0 ) / ( d2 * s^2 + d1 * s + d0 ), 0);
0;

block ([powerdisp : false, maxima_unicode_display: true], verify_display_2d (H,
"    2
n2 s  + n1 s + n0
───────────────── 
    2
d2 s  + d1 s + d0
"));
true;

block ([powerdisp : true, maxima_unicode_display: true], verify_display_2d (H,
"                2
n0 + n1 s + n2 s
───────────────── 
                2
d0 + d1 s + d2 s
"));
true;

/* copied print_string_2d from rtest3.mac */
(print_string_2d (e) := with_default_2d_display (printf (false, "~m", e)), 0);
0;

block ([maxima_unicode_display: true], print_string_2d (-a/b));
"  a
- ─
  b
";

string (-a/b);
"-(a/b)";

block ([maxima_unicode_display: true], print_string_2d (-(a/b)));
"  a
- ─
  b
";

string (-(a/b));
"-(a/b)";

block ([maxima_unicode_display: true], print_string_2d ((-a)/b));
"  a
- ─
  b
";

block ([maxima_unicode_display: true], print_string_2d (-(a + b)/c));
"- b - a
───────
   c
";

string (-(a + b)/c);
"(-b-a)/c";

block ([maxima_unicode_display: true], print_string_2d ((-(a + b))/c));
"- b - a
───────
   c
";

string ((-(a + b))/c);
"(-b-a)/c";

block ([maxima_unicode_display: true], print_string_2d (-((a + b)/c)));
"  b + a
- ─────
    c
";

/* tests adapted from share/stringproc/rtestprintf.mac */

block ([maxima_unicode_display: true],
       with_default_2d_display(printf (false, "~m~%", 1/2)));
"1
─
2
";

block ([maxima_unicode_display: true],
       with_default_2d_display(block ([s: make_string_output_stream ()],
                                      printf (s, "~m~%", 1/2),
                                      get_output_stream_string (s))));
"1
─
2
";

block ([maxima_unicode_display: true],
       with_default_2d_display(printf (false, "~m, ~a, ~:m, ~@m, ~d~%", (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), 1234)));
"x + 1                            x + 1
─────, (x+1)/(1-x), (x+1)/(1-x), ─────, 1234
1 - x                            1 - x
";

block ([maxima_unicode_display: true],
       with_default_2d_display(block ([s: make_string_output_stream ()],
                                      printf (s, "~m, ~a, ~:m, ~@m, ~d~%", (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), 1234),
                                      get_output_stream_string (s))));
"x + 1                            x + 1
─────, (x+1)/(1-x), (x+1)/(1-x), ─────, 1234
1 - x                            1 - x
";

block ([maxima_unicode_display: true],
       with_default_2d_display(printf (false, "~~m ~~:m ~~~~@m ~m, ~a, ~:m, ~@m, ~d ~~z ~~~~z ~~~~~~y~%", (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), 1234)));
"            x + 1                            x + 1
~m ~:m ~~@m ─────, (x+1)/(1-x), (x+1)/(1-x), ─────, 1234 ~z ~~z ~~~y
            1 - x                            1 - x
";

block ([maxima_unicode_display: true],
       with_default_2d_display(block ([s: make_string_output_stream ()],
                                      printf (s, "~~m ~~:m ~~~~@m ~m, ~a, ~:m, ~@m, ~d ~~z ~~~~z ~~~~~~y~%", (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), (1 + x)/(1 - x), 1234),
                                      get_output_stream_string (s))));
"            x + 1                            x + 1
~m ~:m ~~@m ─────, (x+1)/(1-x), (x+1)/(1-x), ─────, 1234 ~z ~~z ~~~y
            1 - x                            1 - x
";
