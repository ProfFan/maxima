/* test functions in share/draw/picture.lisp */

(data_list: makelist (floor (255*k/12), k, 1, 12),
 aa: make_array (fixnum, 3*4),
 fillarray (aa, data_list),
 0);
0;

foo: make_level_picture (data_list, 4, 3);
picture (level, 4, 3, ''aa);

bar: make_level_picture (genmatrix (lambda ([i, j], data_list[(i - 1)*4 + j]), 3, 4));
picture (level, 4, 3, ''aa);

picturep (foo);
true;

picturep (aa);
false;

picture_equalp (foo, bar);
true;

(aa_rgb: make_array (fixnum, 3*12),
 fillarray (aa_rgb, makelist (floor (255*k/36), k, 1, 36)),
 ll_red:   makelist (aa_rgb[k - 1], k, 1, 36, 3),
 ll_green: makelist (aa_rgb[k - 1], k, 2, 36, 3),
 ll_blue:  makelist (aa_rgb[k - 1], k, 3, 36, 3),
 aa_red:   make_array (fixnum, 12),
 fillarray (aa_red, ll_red),
 aa_green: make_array (fixnum, 12),
 fillarray (aa_green, ll_green),
 aa_blue:  make_array (fixnum, 12),
 fillarray (aa_blue, ll_blue),
 0);
0;

red_level:   make_level_picture (ll_red, 4, 3);
picture (level, 4, 3, ''aa_red);

green_level: make_level_picture (ll_green, 4, 3);
picture (level, 4, 3, ''aa_green);

blue_level:  make_level_picture (ll_blue, 4, 3);
picture (level, 4, 3, ''aa_blue);

rgb_pic: make_rgb_picture (red_level, green_level, blue_level);
picture (rgb, 4, 3, ''aa_rgb);

take_channel (rgb_pic, 'red);
''red_level;

take_channel (rgb_pic, 'green);
''green_level;

take_channel (rgb_pic, 'blue);
''blue_level;

(aa_red_negated: make_array (fixnum, 12),
 for k:0 thru 11 do aa_red_negated[k]: 255 - aa_red[k],
 aa_green_negated: make_array (fixnum, 12),
 for k:0 thru 11 do aa_green_negated[k]: 255 - aa_green[k],
 aa_blue_negated: make_array (fixnum, 12),
 for k:0 thru 11 do aa_blue_negated[k]: 255 - aa_blue[k]);
done;

red_level_negated: negative_picture (red_level);
picture (level, 4, 3, ''aa_red_negated);

green_level_negated: negative_picture (green_level);
picture (level, 4, 3, ''aa_green_negated);

blue_level_negated: negative_picture (blue_level);
picture (level, 4, 3, ''aa_blue_negated);

rgb_pic_negated: negative_picture (rgb_pic);
''(make_rgb_picture (red_level_negated, green_level_negated, blue_level_negated));

(aa_mean_rgb: fillarray (make_array (fixnum, 12), round ((ll_red + ll_green + ll_blue)/3)),
 aa_mean_rgb_negated: fillarray (make_array (fixnum, 12), round (255 - (ll_red + ll_green + ll_blue)/3)),
 0);
0;

rgb2level (rgb_pic);
picture (level, 4, 3, ''aa_mean_rgb);

rgb2level (rgb_pic_negated);
picture (level, 4, 3, ''aa_mean_rgb_negated);

(by_n (l, n) := makelist (makelist (l[k + j - 1], j, 1, n), k, 1, length (l), n), 0);
0;

makelist (makelist (get_pixel (rgb_pic, i - 1, j - 1), i, 1, 4), j, 1, 3);
''(by_n (by_n (listarray (aa_rgb), 3), 4));

/* read_xpm (f) */
