# SOME DESCRIPTIVE TITLE.">
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-06 22:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF8\n"
"Content-Transfer-Encoding: 8bit\n"
 
# Plotting.texi
msgid ""
"@menu\n"
"* Introduction to Plotting::\n"
"* Plotting Formats::\n"
"* Functions and Variables for Plotting::\n"
"* Plotting Options::\n"
"* Gnuplot Options::\n"
"* Gnuplot_pipes Format Functions::\n"
"@end menu\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Introduction to Plotting, Plotting Formats, Plotting, Plotting\n"
"@section Introduction to Plotting\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# Plotting.texi
msgid ""
"Maxima uses an external plotting package to make the plots (see the\n"
"section on @mref{Plotting Formats}).  The plotting functions calculate a\n"
"set of points and pass them to the plotting package together with a set\n"
"of commands.  That information can be passed to the external program\n"
"either through a pipe or by calling the program with the name of a file\n"
"where the data has been saved.  The data file is given the name\n"
"@code{maxout_xxx.format}, where @code{xxx} is a number that is unique\n"
"to every concurrently-running instance of Maxima and @code{format} is\n"
"the name of the plotting format being used (@code{gnuplot},\n"
"@code{xmaxima}, @code{mgnuplot}, @code{gnuplot_pipes} or @code{geomview}).\n"
msgstr ""

# Plotting.texi
msgid ""
"There are to save the plot in a graphic format file. In those cases, the\n"
"file @code{maxout_xxx.format} created by Maxima includes commands that will\n"
"make the external plotting program save the result in a graphic\n"
"file. The default name for that graphic file is\n"
"@code{maxplot.extension}, where @code{extension} is the extension\n"
"normally used for the kind of graphic file selected.\n"
msgstr ""

# Plotting.texi
msgid ""
"The @code{maxout_xxx.format} and @code{maxplot.extension} files are created\n"
"in the directory specified by the system variable\n"
"@mrefdot{maxima_tempdir} That location can be changed by assigning to\n"
"that variable (or to the environment variable MAXIMA_TEMPDIR) a string\n"
"that represents a valid directory where Maxima can create new files. The\n"
"output of the Maxima plotting command will be a list with the names of\n"
"the file(s) created, including their complete path.\n"
msgstr ""

# Plotting.texi
msgid ""
"If the format used is either @code{gnuplot} or @code{xmaxima}, the\n"
"external programs @code{gnuplot} or @code{xmaxima} can be run, giving it\n"
"the file @code{maxout_xxx.format} as argument, in order to view again a plot\n"
"previously created in Maxima. Thus, when a Maxima plotting command\n"
"fails, the format can be set to @code{gnuplot} or @code{xmaxima} and the\n"
"plain-text file @code{maxout_xxx.gnuplot} (or @code{maxout_xxx.xmaxima}) can be\n"
"inspected to look for the source of the problem.\n"
msgstr ""

# Plotting.texi
msgid ""
"The additional package @ref{draw} provides functions similar to the ones\n"
"described in this section with some extra features. Note that some\n"
"plotting options have the same name in both plotting packages, but their\n"
"syntax and behavior is different. To view the documentation for a\n"
"graphic option @code{opt}, type @code{?? opt} in order to choose the\n"
"information for either of those two packages.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Plotting Formats, Functions and Variables for Plotting, Introduction to Plotting, Plotting\n"
"@section Plotting Formats\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# Plotting.texi
msgid ""
"Maxima can use either Gnuplot, Xmaxima or Geomview as graphics program. Gnuplot and Geomview are\n"
"external programs which must be installed separately, while Xmaxima\n"
"is distributed with Maxima. There are various different formats for\n"
"those programs, which can be selected with the option @mref{plot_format}\n"
"(see also the @mref{Plotting Options} section).\n"
msgstr ""

# Plotting.texi
msgid ""
"The plotting formats are the following:\n"
msgstr ""

# Plotting.texi
msgid ""
"@itemize @bullet\n"
"@item\n"
"@strong{gnuplot} (default on Windows)\n"
msgstr ""

# Plotting.texi
msgid ""
"Used to launch the external program gnuplot, which must be installed in\n"
"your system.  All plotting commands and data are saved into the file\n"
"@code{maxout_xxx.gnuplot}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@item\n"
"@strong{gnuplot_pipes} (default on non-Windows platforms)\n"
msgstr ""

# Plotting.texi
msgid ""
"This format is not available in Windows platforms.\n"
"It is similar to the @code{gnuplot} format except that the commands are sent\n"
"to gnuplot through a pipe, while the data are saved into the file\n"
"@code{maxout_xxx.gnuplot_pipes}.  A single gnuplot process is kept open\n"
"and subsequent plot commands will be sent to the same process, replacing\n"
"previous plots, unless the gnuplot pipe is closed with the function\n"
"@mrefdot{gnuplot_close}  When this format is used, the function\n"
"@mref{gnuplot_replot} can be used to modify a plot that has already\n"
"displayed on the screen.\n"
msgstr ""

# Plotting.texi
msgid ""
"This format is only used to plot to the screen; whenever graphic files are\n"
"created, the format is silently switched to @code{gnuplot} and\n"
"the commands needed to create the graphic file are saved with the data\n"
"in file @code{maxout_xxx.gnuplot}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@item\n"
"@strong{mgnuplot}\n"
msgstr ""

# Plotting.texi
msgid ""
"Mgnuplot is a Tk-based wrapper around gnuplot.  It is included in the\n"
"Maxima distribution.  Mgnuplot offers a rudimentary GUI for gnuplot,\n"
"but has fewer overall features than the plain gnuplot\n"
"interface.  Mgnuplot requires an external gnuplot installation and, in\n"
"Unix systems, the Tcl/Tk system.\n"
msgstr ""

# Plotting.texi
msgid ""
"@item\n"
"@strong{xmaxima}\n"
msgstr ""

# Plotting.texi
msgid ""
"Xmaxima is a Tcl/Tk graphical interface for Maxima that can also be used\n"
"to display plots created when Maxima is run from the console or from\n"
"other graphical interfaces.  To use this format, the xmaxima program,\n"
"which is distributed together with Maxima, must be installed.  If\n"
"Maxima is being run from the Xmaxima console, the data and commands are\n"
"passed to xmaxima through the same socket used for the communication\n"
"between Maxima and the Xmaxima console. When used from a terminal or\n"
"from graphical interfaces different from Xmaxima, the commands and data\n"
"are saved in the file @code{maxout_xxx.xmaxima} and xmaxima is run with the\n"
"name of that file as argument.\n"
msgstr ""

# Plotting.texi
msgid ""
"In previous versions this format used to be called @code{openmath}; that\n"
"old name still works as a synonym for @code{xmaxima}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@item\n"
"@strong{geomview}\n"
msgstr ""

# Plotting.texi
msgid ""
"Geomview, a Motif based interactive 3D viewing program for Unix, can\n"
"also be used to display plots created by Maxima.  To use this format,\n"
"the geomview program must be installed.\n"
msgstr ""

# Plotting.texi
msgid ""
"@end itemize\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Functions and Variables for Plotting, Plotting Options, Plotting Formats, Plotting\n"
"@section Functions and Variables for Plotting\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{contour_plot}\n"
"@deffn {Function} contour_plot (@var{expr}, @var{x_range}, @var{y_range}, @var{options}, @dots{})\n"
msgstr ""

# Plotting.texi
msgid ""
"It plots the contours (curves of equal value) of @var{expr}\n"
"over the region @var{x_range} by @var{y_range}.\n"
"Any additional arguments are treated the same as in @mrefdot{plot3d}\n"
msgstr ""

# Plotting.texi
msgid ""
"This function only works when the plot format is either @code{gnuplot}\n"
"or @code{gnuplot_pipes}.  The additional package\n"
"@mrefcomma{implicit_plot} which works in any graphic format, can also be\n"
"used to plot contours but a separate expression must be given for each\n"
"contour.\n"
"Examples:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c contour_plot (x^2 + y^2, [x, -4, 4], [y, -4, 4])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) contour_plot (x^2 + y^2, [x, -4, 4], [y, -4, 4])$\n"
"@end example\n"
"@ifnotinfo\n"
"@image{figures/plotting1,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"You can add any options accepted by @code{plot3d}; for instance, the\n"
"option @mref{legend} with a value of false, to remove the\n"
"legend. By default, Gnuplot chooses and displays 3 contours. To increase the\n"
"number of contours, it is necessary to use a custom\n"
"@mrefcomma{gnuplot_preamble}  as in the next example:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c contour_plot (u^3 + v^2, [u, -4, 4], [v, -4, 4], \n"
"@c               [legend,false],\n"
"@c               [gnuplot_preamble, \"set cntrparam levels 12\"])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) contour_plot (u^3 + v^2, [u, -4, 4], [v, -4, 4],\n"
"              [legend,false],\n"
"              [gnuplot_preamble, \"set cntrparam levels 12\"])$\n"
"@end group\n"
"@end example\n"
"@ifnotinfo\n"
"@image{figures/plotting2,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{geomview_command}\n"
"@defvr {System variable} geomview_command\n"
msgstr ""

# Plotting.texi
msgid ""
"This variable stores the name of the command used to run the geomview\n"
"program when the plot format is @code{geomview}. Its default value is\n"
"\"geomview\".  If the geomview program is not found unless you give\n"
"its complete path or if you want to try a different version of it,\n"
"you may change the value of this variable. For instance,\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c geomview_command: \"/usr/local/bin/my_geomview\"$\n"
"@c ===end===\n"
"@example\n"
"(%i1) geomview_command: \"/usr/local/bin/my_geomview\"$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{get_plot_option}\n"
"@deffn {Function} get_plot_option (@var{keyword}, @var{index})\n"
msgstr ""

# Plotting.texi
msgid ""
"Returns the current default value of the option named @var{keyword},\n"
"which is a list. The optional argument @var{index} must be a positive\n"
"integer which can be used to extract only one element from the list\n"
"(element 1 is the name of the option).\n"
msgstr ""

# Plotting.texi
msgid ""
"See also @mrefcomma{set_plot_option} @mref{remove_plot_option} and the\n"
"section on Plotting Options.\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_command}\n"
"@defvr {System variable} gnuplot_command\n"
msgstr ""

# Plotting.texi
msgid ""
"This variable stores the name of the command used to run the gnuplot\n"
"program when the plot format is @code{gnuplot}. Its default value is\n"
"\"gnuplot\". If the gnuplot program is not found unless you give its\n"
"complete path or if you want to try a different version of it, you\n"
"may change the value of this variable. For instance,\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c gnuplot_command: \"/usr/local/bin/my_gnuplot\"$\n"
"@c ===end===\n"
"@example\n"
"(%i1) gnuplot_command: \"/usr/local/bin/my_gnuplot\"$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_file_args}\n"
"@defvr {System variable} gnuplot_file_args\n"
msgstr ""

# Plotting.texi
msgid ""
"When a graphic file is going to be created using @code{gnuplot}, this\n"
"variable is used to specify the way the file name should be passed to\n"
"gnuplot. Its default value is \"~s\", which means that the name of the\n"
"file will be passed directly. The contents of this variable can be\n"
"changed in order to add options for the gnuplot program, adding those\n"
"options before the format directive \"~s\".\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_view_args}\n"
"@defvr {System variable} gnuplot_view_args\n"
msgstr ""

# Plotting.texi
msgid ""
"This variable is used to parse the argument that will be passed to the\n"
"gnuplot program when the plot format is @code{gnuplot}. Its default\n"
"value is \"-persist ~s\", where \"~s\" will be replaced with the name of the\n"
"file where the gnuplot commands have been written (usually\n"
"\"maxout_xxx.gnuplot\"). The option @code{-persist} tells gnuplot to exit\n"
"after the commands in the file have been executed, without closing the\n"
"window that displays the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"Those familiar with gnuplot, might want to change the value of this\n"
"variable. For example, by changing it to:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c gnuplot_view_args: \"~s -\"$\n"
"@c ===end===\n"
"@example\n"
"(%i1) gnuplot_view_args: \"~s -\"$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"gnuplot will not be closed after the commands in the file have been\n"
"executed; thus, the window with the plot will remain, as well as the\n"
"gnuplot interactive shell where other commands can be issued in order to\n"
"modify the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"In Windows versions of Gnuplot older than 4.6.3 the behavior of \"~s -\"\n"
"and \"-persist ~s\" were the opposite; namely, \"-persist ~s\" made the plot\n"
"window and the gnuplot interactive shell remain, while \"~s -\" closed the\n"
"gnuplot shell keeping the plot window. Therefore, when older gnuplot\n"
"versions are used in Windows, it might be necessary to adjust the value\n"
"of @code{gnuplot_view_args}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{implicit_plot}\n"
"@deffn  {Function} implicit_plot @\n"
"@fname{implicit_plot} (@var{expr}, @var{x_range}, @var{y_range}) @\n"
"@fname{implicit_plot} ([@var{expr_1}, @dots{}, @var{expr_n}], @var{x_range}, @var{y_range})\n"
msgstr ""

# Plotting.texi
msgid ""
"Displays a plot of a function on the real plane, defined implicitly by\n"
"the expression @var{expr}. The domain in the plane is defined by\n"
"@var{x_range} and @var{y_range}. Several functions can be represented on\n"
"the same plot, giving a list [@var{expr_1}, @dots{}, @var{expr_n}] of\n"
"expressions that define them. This function uses the global format\n"
"options set up with the @mrefdot{set_plot_option} Additional options can\n"
"also be given as extra arguments for the @code{implicit_plot} command.\n"
msgstr ""

# Plotting.texi
msgid ""
"The method used by @code{implicit_plot} consists of tracking sign\n"
"changes on the domain given and it can fail for complicated expressions.\n"
msgstr ""

# Plotting.texi
msgid ""
"@code{load(implicit_plot)} loads this function.\n"
msgstr ""

# Plotting.texi
msgid ""
"Example:\n"
"@c ===beg===\n"
"@c load(implicit_plot)$\n"
"@c implicit_plot (x^2 = y^3 - 3*y + 1, [x, -4, 4], [y, -4, 4])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) load(implicit_plot)$\n"
"(%i2) implicit_plot (x^2 = y^3 - 3*y + 1, [x, -4, 4], [y, -4, 4])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting3,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting} @category{Share packages} @category{Package implicit_plot}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{julia}\n"
"@deffn {Function} julia (@var{x}, @var{y}, ...@var{options}...)\n"
msgstr ""

# Plotting.texi
msgid ""
"Creates a graphic representation of the Julia set for the complex number\n"
"(@var{x} + i @var{y}). The two mandatory parameters @var{x} and @var{y}\n"
"must be real. This program is part of the additional package\n"
"@code{dynamics}, but that package does not have to be loaded; the first\n"
"time julia is used, it will be loaded automatically.\n"
msgstr ""

# Plotting.texi
msgid ""
"Each pixel in the grid is given a color corresponding to the number of\n"
"iterations it takes the sequence that starts at that point to move out\n"
"of the convergence circle of radius 2 centered at the origin. The number\n"
"of pixels in the grid is controlled by the @mref{grid} plot option\n"
"(default 30 by 30). The maximum number of iterations is set with the\n"
"option @mrefdot{iterations} The program uses its own default palette:\n"
"magenta,violet, blue, cyan, green, yellow, orange, red, brown and black,\n"
"but it can be changed by adding an explicit @mref{palette} option in the\n"
"command.\n"
msgstr ""

# Plotting.texi
msgid ""
"The default domain used goes from -2 to 2 in both axes and can be\n"
"changed with the @code{x} and @code{y} options. By default, the two axes\n"
"are shown with the same scale, unless the option @mref{yx_ratio} is used\n"
"or the option @mref{same_xy} is disabled. Other general plot options are\n"
"also accepted.\n"
msgstr ""

# Plotting.texi
msgid ""
"The following example shows a region of the Julia set for the number\n"
"-0.55 + i0.6. The option @mref{color_bar_tics} is used to prevent\n"
"Gnuplot from adjusting the color box up to 40, in which case the points\n"
"corresponding the maximum 36 iterations would not be black.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c julia (-0.55, 0.6, [iterations, 36], [x, -0.3, 0.2],\n"
"@c   [y, 0.3, 0.9], [grid, 400, 400], [color_bar_tics, 0, 6, 36])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) julia (-0.55, 0.6, [iterations, 36], [x, -0.3, 0.2],\n"
"      [y, 0.3, 0.9], [grid, 400, 400], [color_bar_tics, 0, 6, 36])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting4,8cm}\n"
"@end ifnotinfo\n"
"@opencatbox\n"
"@category{Package dynamics} @category{Plotting}\n"
"@closecatbox\n"
msgstr ""

# Plotting.texi
msgid ""
"@end deffn\n"
"@c -----------------------------------------------------------------------------\n"
"@anchor{make_transform}\n"
"@deffn {Function} make_transform ([@var{var1}, @var{var2}, @var{var3}], @var{fx}, @var{fy}, @var{fz})\n"
msgstr ""

# Plotting.texi
msgid ""
"Returns a function suitable to be used in the option @mref{transform_xy}@w{}\n"
"of plot3d.  The three variables @var{var1}, @var{var2}, @var{var3} are\n"
"three dummy variable names, which represent the 3 variables given by the\n"
"plot3d command (first the two independent variables and then the\n"
"function that depends on those two variables).  The three functions\n"
"@var{fx}, @var{fy}, @var{fz} must depend only on those 3 variables, and\n"
"will give the corresponding x, y and z coordinates that should be\n"
"plotted.  There are two transformations defined by default:\n"
"@mref{polar_to_xy} and @mrefdot{spherical_to_xyz} See the documentation\n"
"for those two transformations.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{mandelbrot}\n"
"@deffn {Function} mandelbrot (@var{options})\n"
msgstr ""

# Plotting.texi
msgid ""
"Creates a graphic representation of the Mandelbrot set. This program is\n"
"part of the additional package @code{dynamics}, but that package does\n"
"not have to be loaded; the first time mandelbrot is used, the package\n"
"will be loaded automatically.\n"
msgstr ""

# Plotting.texi
msgid ""
"This program can be called without any arguments, in which case it will\n"
"use a default value of 9 iterations per point, a grid with dimensions\n"
"set by the @mref{grid} plot option (default 30 by 30) and a region\n"
"that extends from -2 to 2 in both axes. The options are all the same\n"
"that plot2d accepts, plus an option @mref{iterations} to change the\n"
"number of iterations.\n"
msgstr ""

# Plotting.texi
msgid ""
"Each pixel in the grid is given a color corresponding to the number of\n"
"iterations it takes the sequence starting at zero to move out\n"
"of the convergence circle of radius 2, centered at the origin. The\n"
"maximum number of iterations is set by the option @mrefdot{iterations}\n"
"The program uses its own default palette: magenta,violet, blue, cyan,\n"
"green, yellow, orange, red, brown and black, but it can be changed by\n"
"adding an explicit @mref{palette} option in the command. By default, the\n"
"two axes are shown with the same scale, unless the option @mref{yx_ratio}\n"
"is used or the option @mref{same_xy} is disabled.\n"
msgstr ""

# Plotting.texi
msgid ""
"Example:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c mandelbrot ([iterations, 30], [x, -2, 1], [y, -1.2, 1.2],\n"
"            [grid,400,400])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) mandelbrot ([iterations, 30], [x, -2, 1], [y, -1.2, 1.2],\n"
"            [grid,400,400])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting5,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Package dynamics} @category{Plotting}\n"
"@closecatbox\n"
msgstr ""

# Plotting.texi
msgid ""
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{polar_to_xy}\n"
"@deffn {System function} polar_to_xy\n"
msgstr ""

# Plotting.texi
msgid ""
"It can be given as value for the @mref{transform_xy} option of\n"
"plot3d.  Its effect will be to interpret the two independent variables in\n"
"plot3d as the distance from the z axis and the azimuthal angle (polar\n"
"coordinates), and transform them into x and y coordinates.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{plot2d}\n"
"@deffn  {Function} plot2d @\n"
"@fname{plot2d} (@var{plot}, @var{x_range}, @dots{}, @var{options}, @dots{}) @\n"
"@fname{plot2d} ([@var{plot_1}, @dots{}, @var{plot_n}], @dots{}, @var{options}, @dots{}) @\n"
"@fname{plot2d} ([@var{plot_1}, @dots{}, @var{plot_n}], @var{x_range}, @dots{}, @var{options}, @dots{})\n"
msgstr ""

# Plotting.texi
msgid ""
"Where @var{plot}, @var{plot_1}, @dots{}, @var{plot_n} can be either\n"
"expressions, function names or a list with\n"
"the any of the forms: @code{[discrete, [@var{x1}, ..., @var{xn}],\n"
"[@var{y1}, ..., @var{yn}]]}, @code{[discrete, [[@var{x1}, @var{y1}],\n"
"..., [@var{xn}, ..., @var{yn}]]]} or @code{[parametric, @var{x_expr},\n"
"@var{y_expr}, @var{t_range}]}.\n"
msgstr ""

# Plotting.texi
msgid ""
"Displays a plot of one or more expressions as a function of one\n"
"variable or parameter.\n"
msgstr ""

# Plotting.texi
msgid ""
"@code{plot2d} displays one or several plots in two dimensions.  When\n"
"expressions or function name are used to define the plots,\n"
"they should all depend on only one variable @var{var} and the use of\n"
"@var{x_range} will be mandatory, to provide the name of the variable and\n"
"its minimum and maximum values; the syntax for @var{x_range} is:\n"
"@code{[@var{variable}, @var{min}, @var{max}]}.\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot can also be defined in the discrete or parametric forms.  The\n"
"discrete form is used to plot a set of points with given coordinates.  A\n"
"discrete plot is defined by a list starting with the keyword\n"
"@var{discrete}, followed by one or two lists of values.  If two lists are\n"
"given, they must have the same length; the first list will be\n"
"interpreted as the x coordinates of the points to be plotted and the\n"
"second list as the y coordinates.  If only one list is given after the\n"
"@var{discrete} keyword, each element on the list could also be a list\n"
"with two values that correspond to the x and y coordinates of a point,\n"
"or it could be a sequence of numerical values which will be plotted\n"
"at consecutive integer values (1,2,3,...) on the x axis.\n"
msgstr ""

# Plotting.texi
msgid ""
"A parametric plot is defined by a list starting with the keyword\n"
"@var{parametric}, followed by two expressions or function names and a\n"
"range for the parameter.  The range for the parameter must be a list with\n"
"the name of the parameter followed by its minimum and maximum values:\n"
"@code{[@var{param}, @var{min}, @var{max}]}.  The plot will show the path\n"
"traced out by the point with coordinates given by the two expressions or\n"
"functions, as @var{param} increases from @var{min} to @var{max}.\n"
msgstr ""

# Plotting.texi
msgid ""
"A range for the vertical axis is an optional argument with the form:\n"
"@code{[y, @var{min}, @var{max}]} (the keyword @var{y} is always used for\n"
"the vertical axis).  If that option is used, the plot will show that\n"
"exact vertical range, independently of the values reached by the plot.\n"
"If the vertical range is not specified, it will be set up according to\n"
"the minimum and maximum values of the second coordinate of the plot\n"
"points.\n"
msgstr ""

# Plotting.texi
msgid ""
"All other options should also be lists, starting with a keyword and\n"
"followed by one or more values.  See @mrefdot{plot_options}\n"
msgstr ""

# Plotting.texi
msgid ""
"If there are several plots to be plotted, a legend will be\n"
"written to identity each of the expressions.  The labels that should be\n"
"used in that legend can be given with the option @mrefdot{legend}  If that\n"
"option is not used, Maxima will create labels from the expressions or\n"
"function names.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c PUT EXAMPLES FOR PRECEDING SIMPLE FORMS OF plot2d HERE\n"
"@strong{Examples:}\n"
msgstr ""

# Plotting.texi
msgid ""
"Plot of a common function:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot2d (sin(x), [x, -%pi, %pi])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) plot2d (sin(x), [x, -%pi, %pi])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting6,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"If the function grows too fast, it might be necessary to limit the\n"
"values in the vertical axis using the @mref{y} option:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot2d (sec(x), [x, -2, 2], [y, -20, 20])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) plot2d (sec(x), [x, -2, 2], [y, -20, 20])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting7,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"When the plot box is disabled, no labels are created for the axes. In\n"
"that case, instead of using @mref{xlabel} and @mref{ylabel} to set the\n"
"names of the axes, it is better to use option @mrefcomma{label} which\n"
"allows more flexibility. Option @mref{yx_ratio} is used to change the\n"
"default rectangular shape of the plot; in this example the plot will\n"
"fill a square.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot2d ( x^2 - 1, [x, -3, 3], [box, false], grid2d,\n"
"@c      [yx_ratio, 1], [axes, solid], [xtics, -2, 4, 2],\n"
"@c      [ytics, 2, 2, 6], [label, [\"x\", 2.9, -0.3],\n"
"@c      [\"x^2-1\", 0.1, 8]], [title, \"A parabola\"])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) plot2d ( x^2 - 1, [x, -3, 3], [box, false], grid2d,\n"
"      [yx_ratio, 1], [axes, solid], [xtics, -2, 4, 2],\n"
"      [ytics, 2, 2, 6], [label, [\"x\", 2.9, -0.3],\n"
"      [\"x^2-1\", 0.1, 8]], [title, \"A parabola\"])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting8,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot with a logarithmic scale in the vertical axis:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot2d (exp(3*s), [s, -2, 2], logy)$\n"
"@c ===end===\n"
"@example\n"
"(%i1) plot2d (exp(3*s), [s, -2, 2], logy)$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting9,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Plotting functions by name:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c F(x) := x^2 $\n"
"@c :lisp (defun |$g| (x) (m* x x x))\n"
"@c H(x) := if x < 0 then x^4 - 1 else 1 - x^5 $\n"
"@c plot2d ([F, G, H], [u, -1, 1], [y, -1.5, 1.5])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) F(x) := x^2 $\n"
"@group\n"
"(%i2) :lisp (defun |$g| (x) (m* x x x))\n"
"$g\n"
"@end group\n"
"(%i2) H(x) := if x < 0 then x^4 - 1 else 1 - x^5 $\n"
"(%i3) plot2d ([F, G, H], [u, -1, 1], [y, -1.5, 1.5])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting10,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot of the butterfly curve, defined parametrically:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c r: (exp(cos(t))-2*cos(4*t)-sin(t/12)^5)$\n"
"@c plot2d([parametric, r*sin(t), r*cos(t), [t, -8*%pi, 8*%pi]])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) r: (exp(cos(t))-2*cos(4*t)-sin(t/12)^5)$\n"
"(%i2) plot2d([parametric, r*sin(t), r*cos(t), [t, -8*%pi, 8*%pi]])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting11,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Plot of a circle, using its parametric representation, together with the\n"
"function -|x|. The circle will only look like a circle if the scale in the\n"
"two axes is the same, which is done with the option @mrefdot{same_xy}\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot2d([[parametric, cos(t), sin(t), [t,0,2*%pi]], -abs(x)],\n"
"@c          [x, -sqrt(2), sqrt(2)], same_xy)$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot2d([[parametric, cos(t), sin(t), [t,0,2*%pi]], -abs(x)],\n"
"         [x, -sqrt(2), sqrt(2)], same_xy)$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting12,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot of 200 random numbers between 0 and 9:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot2d ([discrete, makelist ( random(10), 200)])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot2d ([discrete, makelist ( random(10), 200)])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting13,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot of a discrete set of points, defining x and y coordinates separately:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot2d ([discrete, makelist(i*%pi, i, 1, 5),\n"
"@c                            [0.6, 0.9, 0.2, 1.3, 1]])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) plot2d ([discrete, makelist(i*%pi, i, 1, 5),\n"
"                            [0.6, 0.9, 0.2, 1.3, 1]])$\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting14,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"In the next example a table with three columns is saved in a file\n"
"``data.txt'' which is then read and the second and third column are\n"
"plotted on the two axes:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c with_stdout (\"data.txt\", for x:0 thru 10 do\n"
"@c                              print (x, x^2, x^3))$\n"
"@c data: read_matrix (\"data.txt\")$\n"
"@c plot2d ([discrete, transpose(data)[2], transpose(data)[3]],\n"
"@c   [style,points], [point_type,diamond], [color,red])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) with_stdout (\"data.txt\", for x:0 thru 10 do\n"
"                             print (x, x^2, x^3))$\n"
"@end group\n"
"(%i2) data: read_matrix (\"data.txt\")$\n"
"@group\n"
"(%i3) plot2d ([discrete, transpose(data)[2], transpose(data)[3]],\n"
"  [style,points], [point_type,diamond], [color,red])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting15,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot of discrete data points together with a continuous function:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c xy: [[10, .6], [20, .9], [30, 1.1], [40, 1.3], [50, 1.4]]$\n"
"@c plot2d([[discrete, xy], 2*%pi*sqrt(l/980)], [l,0,50],\n"
"@c         [style, points, lines], [color, red, blue],\n"
"@c         [point_type, asterisk],\n"
"@c         [legend, \"experiment\", \"theory\"],\n"
"@c         [xlabel, \"pendulum's length (cm)\"],\n"
"@c         [ylabel, \"period (s)\"])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) xy: [[10, .6], [20, .9], [30, 1.1], [40, 1.3], [50, 1.4]]$\n"
"@group\n"
"(%i2) plot2d([[discrete, xy], 2*%pi*sqrt(l/980)], [l,0,50],\n"
"        [style, points, lines], [color, red, blue],\n"
"        [point_type, asterisk],\n"
"        [legend, \"experiment\", \"theory\"],\n"
"        [xlabel, \"pendulum's length (cm)\"],\n"
"        [ylabel, \"period (s)\"])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting16,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"See also the section about Plotting Options.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{plot3d}\n"
"@deffn {Function} plot3d @\n"
"@fname{plot3d} (@var{expr}, @var{x_range}, @var{y_range}, @dots{}, @var{options}, @dots{}) @\n"
"@fname{plot3d} ([@var{expr_1}, @dots{}, @var{expr_n}], @var{x_range}, @var{y_range}, @dots{}, @var{options}, @dots{})\n"
msgstr ""

# Plotting.texi
msgid ""
"Displays a plot of one or more surfaces defined as functions of two\n"
"variables or in parametric form.\n"
msgstr ""

# Plotting.texi
msgid ""
"The functions to be plotted may be specified as expressions or function names.\n"
"The mouse can be used to rotate the plot looking at the surface from different\n"
"sides.\n"
msgstr ""

# Plotting.texi
msgid ""
"@strong{Examples:}\n"
msgstr ""

# Plotting.texi
msgid ""
"Plot of a function of two variables:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d (u^2 - v^2, [u, -2, 2], [v, -3, 3], [grid, 100, 100],\n"
"@c         [mesh_lines_color,false])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d (u^2 - v^2, [u, -2, 2], [v, -3, 3], [grid, 100, 100],\n"
"        [mesh_lines_color,false])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting17,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Use of the @mref{z} option to limit a function that goes to infinity\n"
" (in this case the function is minus infinity on the x and y axes); this also\n"
"shows how to plot with only lines and no shading:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d ( log ( x^2*y^2 ), [x, -2, 2], [y, -2, 2], [z, -8, 4],\n"
"@c          [palette, false], [color, magenta])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d ( log ( x^2*y^2 ), [x, -2, 2], [y, -2, 2], [z, -8, 4],\n"
"         [palette, false], [color, magenta])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting18,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"The infinite values of z can also be avoided by choosing a grid that\n"
"does not fall on any points where the function is undefined, as in the\n"
"next example, which also shows how to change the palette and how to\n"
"include a color bar that relates colors to values of the z variable:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d (log (x^2*y^2), [x, -2, 2], [y, -2, 2],[grid, 29, 29],\n"
"@c       [palette, [gradient, red, orange, yellow, green]],\n"
"@c       color_bar, [xtics, 1], [ytics, 1], [ztics, 4],\n"
"@c       [color_bar_tics, 4])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d (log (x^2*y^2), [x, -2, 2], [y, -2, 2],[grid, 29, 29],\n"
"       [palette, [gradient, red, orange, yellow, green]],\n"
"       color_bar, [xtics, 1], [ytics, 1], [ztics, 4],\n"
"       [color_bar_tics, 4])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting19,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Two surfaces in the same plot. Ranges specific to one of the surfaces can\n"
"be given by placing each expression and its ranges in a separate list;\n"
"global ranges for the complete plot are also given after the functions\n"
"definitions.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d ([[-3*x - y, [x, -2, 2], [y, -2, 2]],\n"
"@c    4*sin(3*(x^2 + y^2))/(x^2 + y^2), [x, -3, 3], [y, -3, 3]],\n"
"@c    [x, -4, 4], [y, -4, 4])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d ([[-3*x - y, [x, -2, 2], [y, -2, 2]],\n"
"   4*sin(3*(x^2 + y^2))/(x^2 + y^2), [x, -3, 3], [y, -3, 3]],\n"
"   [x, -4, 4], [y, -4, 4])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting20,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Plot of a Klein bottle, defined parametrically:\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c expr_1: 5*cos(x)*(cos(x/2)*cos(y)+sin(x/2)*sin(2*y)+3)-10$\n"
"@c expr_2: -5*sin(x)*(cos(x/2)*cos(y)+sin(x/2)*sin(2*y)+3)$\n"
"@c expr_3: 5*(-sin(x/2)*cos(y)+cos(x/2)*sin(2*y))$\n"
"@c plot3d ([expr_1, expr_2, expr_3], [x, -%pi, %pi],\n"
"@c         [y, -%pi, %pi], [grid, 50, 50])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) expr_1: 5*cos(x)*(cos(x/2)*cos(y)+sin(x/2)*sin(2*y)+3)-10$\n"
"(%i2) expr_2: -5*sin(x)*(cos(x/2)*cos(y)+sin(x/2)*sin(2*y)+3)$\n"
"(%i3) expr_3: 5*(-sin(x/2)*cos(y)+cos(x/2)*sin(2*y))$\n"
"@group\n"
"(%i4) plot3d ([expr_1, expr_2, expr_3], [x, -%pi, %pi],\n"
"        [y, -%pi, %pi], [grid, 50, 50])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting21,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Plot of a ``spherical harmonic'' function, using the predefined\n"
"transformation, @code{spherical_to_xyz} to transform from spherical\n"
"coordinates to rectangular coordinates. See the documentation for\n"
"@mrefdot{spherical_to_xyz}\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d (sin(2*theta)*cos(phi), [theta, 0, %pi],\n"
"@c         [phi, 0, 2*%pi],\n"
"@c         [transform_xy, spherical_to_xyz], [grid,30,60],\n"
"@c    [legend,false])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d (sin(2*theta)*cos(phi), [theta, 0, %pi],\n"
"        [phi, 0, 2*%pi],\n"
"        [transform_xy, spherical_to_xyz], [grid,30,60],\n"
"   [legend,false])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting22,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Use of the pre-defined function @code{polar_to_xy} to transform from\n"
"cylindrical to rectangular coordinates.  See the documentation for\n"
"@mrefdot{polar_to_xy}\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d (r^.33*cos(th/3), [r,0,1], [th,0,6*%pi], [box, false],\n"
"@c    [grid, 12, 80], [transform_xy, polar_to_xy], [legend, false])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d (r^.33*cos(th/3), [r,0,1], [th,0,6*%pi], [box, false],\n"
"   [grid, 12, 80], [transform_xy, polar_to_xy], [legend, false])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting23,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Plot of a sphere using the transformation from spherical to rectangular\n"
"coordinates. Option @mref{same_xyz} is used to get the three axes\n"
"scaled in the same proportion. When transformations are used, it is not\n"
"convenient to eliminate the mesh lines, because Gnuplot will not show the\n"
"surface correctly.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d ( 5, [theta, 0, %pi], [phi, 0, 2*%pi], same_xyz,\n"
"@c   [transform_xy, spherical_to_xyz], [mesh_lines_color,blue],\n"
"@c   [palette,[gradient,\"#1b1b4e\", \"#8c8cf8\"]], [legend, false])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d ( 5, [theta, 0, %pi], [phi, 0, 2*%pi], same_xyz,\n"
"  [transform_xy, spherical_to_xyz], [mesh_lines_color,blue],\n"
"  [palette,[gradient,\"#1b1b4e\", \"#8c8cf8\"]], [legend, false])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting24,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"Definition of a function of two-variables using a matrix.  Notice the\n"
"single quote in the definition of the function, to prevent @code{plot3d}\n"
"from failing when it realizes that the matrix will require integer\n"
"indices.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c M: matrix([1,2,3,4], [1,2,3,2], [1,2,3,4], [1,2,3,3])$\n"
"@c f(x, y) := float('M [round(x), round(y)])$\n"
"@c plot3d (f(x,y), [x,1,4],[y,1,4],[grid,3,3],[legend,false])$\n"
"@c ===end===\n"
"@example\n"
"(%i1) M: matrix([1,2,3,4], [1,2,3,2], [1,2,3,4], [1,2,3,3])$\n"
"(%i2) f(x, y) := float('M [round(x), round(y)])$\n"
"@group\n"
"(%i3) plot3d (f(x,y), [x,1,4],[y,1,4],[grid,3,3],[legend,false])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting25,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"By setting the elevation equal to zero, a surface can be seen as a map\n"
"in which each color represents a different level.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c plot3d (cos (-x^2 + y^3/4), [x,-4,4], [y,-4,4], [zlabel,\"\"],\n"
"@c        [mesh_lines_color,false], [elevation,0], [azimuth,0],\n"
"@c        color_bar, [grid,80,80], [ztics,false], [color_bar_tics,1])$\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) plot3d (cos (-x^2 + y^3/4), [x,-4,4], [y,-4,4], [zlabel,\"\"],\n"
"       [mesh_lines_color,false], [elevation,0], [azimuth,0],\n"
"       color_bar, [grid,80,80], [ztics,false], [color_bar_tics,1])$\n"
"@end group\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@ifnotinfo\n"
"@image{figures/plotting26,8cm}\n"
"@end ifnotinfo\n"
msgstr ""

# Plotting.texi
msgid ""
"See also the section about Plotting Options.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{plot_options}\n"
"@defvr {System variable} plot_options\n"
msgstr ""

# Plotting.texi
msgid ""
"This option is being kept for compatibility with older versions, but its\n"
"use is deprecated. To set global plotting options, see their current\n"
"values or remove options, use @mrefcomma{set_plot_option}\n"
"@mref{get_plot_option} and @mrefdot{remove_plot_option}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{remove_plot_option}\n"
"@deffn {Function} remove_plot_option (@var{name})\n"
msgstr ""

# Plotting.texi
msgid ""
"Removes the default value of an option. The name of the option must be given.\n"
msgstr ""

# Plotting.texi
msgid ""
"See also @mrefcomma{set_plot_option} @mref{get_plot_option} and the section\n"
"on Plotting Options.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
"@c -----------------------------------------------------------------------------\n"
"@anchor{set_plot_option}\n"
"@deffn {Function} set_plot_option (@var{option})\n"
msgstr ""

# Plotting.texi
msgid ""
"Accepts any of the options listed in the section Plotting Options, and\n"
"saves them for use in plotting commands. The values of the options set\n"
"in each plotting command will have precedence, but if those options are\n"
"not given, the default values set with this function will be used.\n"
msgstr ""

# Plotting.texi
msgid ""
"@code{set_plot_option} evaluates its argument and returns the complete\n"
"list of options (after modifying the option given). If called without\n"
"any arguments, it will simply show the list of current default options.\n"
msgstr ""

# Plotting.texi
msgid ""
"See also @mrefcomma{remove_plot_option} @mref{get_plot_option} and the section\n"
"on Plotting Options.\n"
msgstr ""

# Plotting.texi
msgid ""
"Example:\n"
msgstr ""

# Plotting.texi
msgid ""
"Modification of the @mref{grid} values.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c ===beg===\n"
"@c set_plot_option ([grid, 30, 40]);\n"
"@c ===end===\n"
"@example\n"
"(%i1) set_plot_option ([grid, 30, 40]);\n"
"(%o1) [[plot_format, gnuplot_pipes], [grid, 30, 40], \n"
"[run_viewer, true], [axes, true], [nticks, 29], [adapt_depth, 5], \n"
"[color, blue, red, green, magenta, black, cyan], \n"
"[point_type, bullet, box, triangle, plus, times, asterisk], \n"
"[palette, [gradient, green, cyan, blue, violet], \n"
"[gradient, magenta, violet, blue, cyan, green, yellow, orange, \n"
"red, brown, black]], [gnuplot_preamble, ], [gnuplot_term, default]]\n"
"@end example\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{spherical_to_xyz}\n"
"@deffn {System function} spherical_to_xyz\n"
msgstr ""

# Plotting.texi
msgid ""
"It can be given as value for the @mref{transform_xy} option of\n"
"@mrefdot{plot3d} Its effect will be to interpret the two independent\n"
"variables and the function in @code{plot3d} as the spherical coordinates\n"
"of a point (first, the angle with the z axis, then the angle of the xy\n"
"projection with the x axis and finally the distance from the origin) and\n"
"transform them into x, y and z coordinates.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Plotting Options, Gnuplot Options, Functions and Variables for Plotting, Plotting\n"
"@section Plotting Options\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# Plotting.texi
msgid ""
"All options consist of a list starting with one of the keywords in this\n"
"section, followed by one or more values. Some of the options may have\n"
"different effects in different plotting commands as it will be pointed\n"
"out in the following list. The options that accept among their possible\n"
"values true or false, can also be set to true by simply writing their\n"
"names. For instance, typing logx as an option is equivalent to writing\n"
"[logx, true].\n"
"@c -----------------------------------------------------------------------------\n"
"@anchor{adapt_depth}\n"
"@defvr {Plot option} adapt_depth [adapt_depth, @var{integer}]\n"
"Default value: @code{5}\n"
msgstr ""

# Plotting.texi
msgid ""
"The maximum number of splittings used by the adaptive plotting routine.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{axes}\n"
"@defvr {Plot option} axes [axes, @var{symbol}] \n"
"Default value: @code{true}\n"
msgstr ""

# Plotting.texi
msgid ""
"Where @var{symbol} can be either @code{true}, @code{false}, @code{x},\n"
"@code{y} or @code{solid}. If @code{false}, no axes are shown; if equal\n"
"to @code{x} or @code{y} only the x or y axis will be shown; if it is\n"
"equal to @code{true}, both axes will be shown and @code{solid} will show\n"
"the two axes with a solid line, rather than the default broken\n"
"line. This option does not have any effect in the 3 dimensional plots.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{azimuth}\n"
"@defvr {Plot option} azimuth [azimuth, @var{number}]\n"
"Default value: @code{30}\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot3d plot can be thought of as starting with the x and y axis in the\n"
"horizontal and vertical axis, as in plot2d, and the z axis coming out of\n"
"the screen.  The z axis is then rotated around the x axis through an\n"
"angle equal to @mref{elevation} and then the new xy plane is rotated\n"
"around the new z axis through an angle @mrefdot{azimuth} This option sets\n"
"the value for the azimuth, in degrees.\n"
msgstr ""

# Plotting.texi
msgid ""
"See also @mrefdot{elevation}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{option_box}\n"
"@defvr {Plot option} box [box, @var{symbol}]\n"
"Default value: @code{true}\n"
msgstr ""

# Plotting.texi
msgid ""
"If set to @code{true}, a bounding box will be drawn for the plot; if set\n"
"to @code{false}, no box will be drawn.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{color}\n"
"@defvr {Plot option} color [color, @var{color_1}, @dots{}, @var{color_n}]\n"
msgstr ""

# Plotting.texi
msgid ""
"In 2d plots it defines the color (or colors) for the various curves.  In\n"
"@mrefcomma{plot3d} it defines the colors used for the mesh lines of the\n"
"surfaces, when no palette is being used.\n"
msgstr ""

# Plotting.texi
msgid ""
"If there are more curves or surfaces than colors, the colors will be\n"
"repeated in sequence. The valid colors are @code{red}, @code{green},\n"
"@code{blue}, @code{magenta}, @code{cyan}, @code{yellow}, @code{orange},\n"
"@code{violet}, @code{brown}, @code{gray}, @code{black}, @code{white}, or\n"
"a string starting with the character # and followed by six hexadecimal\n"
"digits: two for the red component, two for green component and two for\n"
"the blue component. If the name of a given color is unknown color, black\n"
"will be used instead.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{color_bar}\n"
"@defvr {Plot option} color_bar [color_bar, @var{symbol}]\n"
"Default value: @code{false} in plot3d, @code{true} in mandelbrot and julia\n"
msgstr ""

# Plotting.texi
msgid ""
"Where @var{symbol} can be either @code{true} or @code{false}.  If\n"
"@code{true}, whenever @mrefcomma{plot3d} @mref{mandelbrot} or\n"
"@mref{julia} use a palette to represent different values, a box will be\n"
"shown on the right, showing the corresponding between colors and values.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{color_bar_tics}\n"
"@defvr {Plot option} color_bar_tics [color_bar_tics, @var{x1}, @var{x2}, @var{x3}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Defines the values at which a mark and a number will be placed in the\n"
"color bar. The first number is the initial value, the second the\n"
"increments and the third is the last value where a mark is placed. The\n"
"second and third numbers can be omitted. When only one number is given,\n"
"it will be used as the increment from an initial value that will be\n"
"chosen automatically.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{elevation}\n"
"@defvr {Plot option} elevation [elevation, @var{number}]\n"
"Default value: @code{60}\n"
msgstr ""

# Plotting.texi
msgid ""
"A plot3d plot can be thought of as starting with the x and y axis in the\n"
"horizontal and vertical axis, as in plot2d, and the z axis coming out of\n"
"the screen.  The z axis is then rotated around the x axis through an\n"
"angle equal to @mref{elevation} and then the new xy plane is rotated\n"
"around the new z axis through an angle @mrefdot{azimuth} This option sets\n"
"the value for the azimuth, in degrees.\n"
msgstr ""

# Plotting.texi
msgid ""
"See also @mrefdot{azimuth}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{grid}\n"
"@defvr {Plot option} grid [grid, @var{integer}, @var{integer}]\n"
"Default value: @code{30}, @code{30}\n"
msgstr ""

# Plotting.texi
msgid ""
"Sets the number of grid points to use in the x- and y-directions for\n"
"three-dimensional plotting or for the @mref{julia} and @mref{mandelbrot}\n"
"programs.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{grid2d}\n"
"@defvr {Plot option} grid2d [grid, @var{value}]\n"
"Default value: @code{false}\n"
msgstr ""

# Plotting.texi
msgid ""
"Shows a grid of lines on the xy plane. The points where the grid lines\n"
"are placed are the same points where tics are marked in the x and y\n"
"axes, which can be controlled with the @mref{xtics} and @mref{ytics}\n"
"options.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{iterations}\n"
"@defvr {Plot option} iterations [grid, @var{value}]\n"
"Default value: @code{9}\n"
msgstr ""

# Plotting.texi
msgid ""
"Number of iterations made by the programs mandelbrot and julia.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{label}\n"
"@defvr  {Plot option} label [label, [@var{string}, @var{x}, @var{y}], @dots{}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Writes one or several labels in the points with @var{x}, @var{y}\n"
"coordinates indicated after each label.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{legend}\n"
"@defvr {Plot option} legend @\n"
"@fname{legend} [legend, @var{string_1}, @dots{}, @var{string_n}] @\n"
"@fname{legend} [legend, @var{false}]\n"
msgstr ""

# Plotting.texi
msgid ""
"It specifies the labels for the plots when various plots are shown.  If\n"
"there are more plots than the number of labels given, they will be\n"
"repeated.  If given the value @code{false}, no legends will be shown.  By\n"
"default, the names of the expressions or functions will be used, or the\n"
"words discrete1, discrete2, @dots{}, for discrete sets of points.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{logx}\n"
"@defvr {Plot option} logx [logx, @var{value}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Makes the horizontal axes to be scaled logarithmically. It can be either\n"
"true or false.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{logy}\n"
"@defvr {Plot option} logy [logy, @var{value}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Makes the vertical axes to be scaled logarithmically. It can be either\n"
"true or false.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{mesh_lines_color}\n"
"@defvr {Plot option} mesh_lines_color [mesh_lines_color, @var{color}]\n"
"Default value: @code{black}\n"
msgstr ""

# Plotting.texi
msgid ""
"It sets the color used by plot3d to draw the mesh lines, when a palette is\n"
"being used.  It accepts the same colors as for the option @mref{color}@w{}\n"
"(see the list of allowed colors in @mref{color}).  It can also be given a\n"
"value @code{false} to eliminate completely the mesh lines.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{nticks}\n"
"@defvr {Plot option} nticks [nticks, @var{integer}]\n"
"Default value: @code{29}\n"
msgstr ""

# Plotting.texi
msgid ""
"When plotting functions with @mrefcomma{plot2d} it is gives the initial\n"
"number of points used by the adaptive plotting routine for plotting\n"
"functions.  When plotting parametric functions with @mrefcomma{plot3d}\n"
"it sets the number of points that will be shown for the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{palette}\n"
"@defvr  {Plot option} palette @\n"
"@fname{palette} [palette, [@var{palette_1}], @dots{}, [@var{palette_n}]] @\n"
"@fname{palette} [palette, @var{false}]\n"
msgstr ""

# Plotting.texi
msgid ""
"It can consist of one palette or a list of several palettes.  Each\n"
"palette is a list with a keyword followed by values. If the keyword is\n"
"gradient, it should be followed by a list of valid colors.\n"
msgstr ""

# Plotting.texi
msgid ""
"If the keyword is hue, saturation or value, it must be followed by 4\n"
"numbers. The first three numbers, which must be between 0 and 1, define\n"
"the hue, saturation and value of a basic color to be assigned to the\n"
"minimum value of z. The keyword specifies which of the three attributes\n"
"(hue, saturation or value) will be increased according to the values of\n"
"z.  The last number indicates the increase corresponding to the maximum\n"
"value of z.  That last number can be bigger than 1 or negative; the\n"
"corresponding values of the modified attribute will be rounded modulo 1.\n"
msgstr ""

# Plotting.texi
msgid ""
"Gnuplot only uses the first palette in the list; xmaxima will use the\n"
"palettes in the list sequentially, when several surfaces are plotted\n"
"together; if the number of palettes is exhausted, they will be repeated\n"
"sequentially.\n"
msgstr ""

# Plotting.texi
msgid ""
"The color of the mesh lines will be given by the option\n"
"@mrefdot{mesh_lines_color}  If @code{palette} is given the value\n"
"@code{false}, the surfaces will not be shaded but represented with a\n"
"mesh of curves only.  In that case, the colors of the lines will be\n"
"determined by the option @mrefdot{color}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{plot_format}\n"
"@defvr {Plot option} plot_format [plot_format, @var{format}]\n"
"Default value: @code{gnuplot}, in Windows systems, or @code{gnuplot_pipes} in\n"
"other systems.\n"
msgstr ""

# Plotting.texi
msgid ""
"Where @var{format} is one of the following: gnuplot, xmaxima, mgnuplot,\n"
"gnuplot_pipes or geomview.\n"
msgstr ""

# Plotting.texi
msgid ""
"It sets the format to be used for plotting.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{plot_real_part}\n"
"@defvr {Plot option} plot_realpart [plot_realpart, @var{symbol}]\n"
"Default value: @code{false}\n"
msgstr ""

# Plotting.texi
msgid ""
"If set to @code{true}, the functions to be plotted will be considered\n"
"as complex functions whose real value should be plotted; this is\n"
"equivalent to plotting @code{realpart(@var{function})}.  If set to\n"
"@code{false}, nothing will be plotted when the function does not give a\n"
"real value.  For instance, when @code{x} is negative, @code{log(x)} gives\n"
"a complex value, with real value equal to @code{log(abs(x))}; if\n"
"@code{plot_realpart} were @code{true}, @code{log(-5)} would be plotted\n"
"as @code{log(5)}, while nothing would be plotted if\n"
"@code{plot_realpart} were @code{false}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{point_type}\n"
"@defvr {Plot option} point_type [point_type, @var{type_1}, @dots{}, @var{type_n}]\n"
msgstr ""

# Plotting.texi
msgid ""
"In gnuplot, each set of points to be plotted with the style ``points''\n"
"or ``linespoints'' will be represented with objects taken from this\n"
"list, in sequential order.  If there are more sets of points than objects\n"
"in this list, they will be repeated sequentially.\n"
"The possible objects that can be used are: @code{bullet}, @code{circle},\n"
"@code{plus}, @code{times}, @code{asterisk}, @code{box}, @code{square},\n"
"@code{triangle}, @code{delta}, @code{wedge}, @code{nabla}, @code{diamond},\n"
"@code{lozenge}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{pdf_file}\n"
"@defvr {Plot option} pdf_file [pdf_file, @var{file_name}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Saves the plot into a PDF file with name equal to @var{file_name},\n"
"rather than showing it in the screen.  By default, the file will be\n"
"created in the directory defined by the variable\n"
"@mrefcomma{maxima_tempdir} unless @var{file_name} contains the character\n"
"``/'', in which case it will be assumed to contain the complete path where\n"
"the file should be created. The value of @mref{maxima_tempdir} can be changed\n"
"to save the file in a different directory. When the option\n"
"@mref{gnuplot_pdf_term_command} is also given, it will be used to set up\n"
"Gnuplot's PDF terminal; otherwise, Gnuplot's pdfcairo terminal\n"
"will be used with solid colored lines of width 3, plot\n"
"size of 17.2 cm by 12.9 cm and font of 18 points.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{png_file}\n"
"@defvr {Plot option} png_file [png_file, @var{file_name}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Saves the plot into a PNG graphics file with name equal to @var{file_name},\n"
"rather than showing it in the screen. By default, the file will be\n"
"created in the directory defined by the variable\n"
"@mrefcomma{maxima_tempdir} unless @var{file_name} contains the character\n"
"``/'', in which case it will be assumed to contain the complete path where\n"
"the file should be created. The value of @mref{maxima_tempdir} can be changed\n"
"to save the file in a different directory. When the option\n"
"@mref{gnuplot_png_term_command} is also given, it will be used to set up\n"
"Gnuplot's PNG terminal; otherwise, Gnuplot's pngcairo terminal\n"
"will be used, with a font of size 12. \n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{ps_file}\n"
"@defvr {Plot option} ps_file [ps_file, @var{file_name}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Saves the plot into a Postscript file with name equal to @var{file_name},\n"
"rather than showing it in the screen.  By default, the file will be\n"
"created in the directory defined by the variable\n"
"@mrefcomma{maxima_tempdir} unless @var{file_name} contains the character\n"
"``/'', in which case it will be assumed to contain the complete path where\n"
"the file should be created. The value of @mref{maxima_tempdir} can be changed\n"
"to save the file in a different directory. When the option\n"
"@mref{gnuplot_ps_term_command} is also given, it will be used to set up\n"
"Gnuplot's Postscript terminal; otherwise, Gnuplot's postscript terminal\n"
"will be used with the EPS option, solid colored lines of width 2, plot\n"
"size of 16.4 cm by 12.3 cm and font of 24 points.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{run_viewer}\n"
"@defvr {Plot option} run_viewer [run_viewer, @var{symbol}]\n"
msgstr ""

# Plotting.texi
msgid ""
"This option is only used when the plot format is @code{gnuplot} and the\n"
"terminal is @code{default} or when the Gnuplot terminal is set to\n"
"@code{dumb} (see @mref{gnuplot_term}) and can have a true or false\n"
"value.\n"
msgstr ""

# Plotting.texi
msgid ""
"If the terminal is @code{default}, a file @code{maxout_xxx.gnuplot} (or\n"
"other name specified with @mref{gnuplot_out_file}) is created with the\n"
"gnuplot commands necessary to generate the plot. Option @code{run_viewer}\n"
"controls whether or not Gnuplot will be launched to execute those\n"
"commands and show the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"If the terminal is @code{default}, gnuplot is run to execute the\n"
"commands in @code{maxout_xxx.gnuplot}, producing another file\n"
"@code{maxplot.txt} (or other name specified with\n"
"@mref{gnuplot_out_file}). Option @code{run_viewer} controls whether or\n"
"not that file, with an ASCII representation of the plot, will be shown\n"
"in the Maxima or Xmaxima console.\n"
msgstr ""

# Plotting.texi
msgid ""
"The default value for this option is true, making the plots to be shown\n"
"in either the console or a separate graphics window.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{same_xy}\n"
"@defvr {Plot option} same_xy [same_xy , @var{value}]\n"
msgstr ""

# Plotting.texi
msgid ""
"It can be either true or false. If true, the scales used in the x and y\n"
"axes will be the same, in either 2d or 3d plots. See also @mrefdot{yx_ratio}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{same_xyz}\n"
"@defvr {Plot option} same_xyz [same_xyz , @var{value}]\n"
msgstr ""

# Plotting.texi
msgid ""
"It can be either true or false. If true, the scales used in the 3 axes of\n"
"a 3d plot will be the same.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{style}\n"
"@defvr  {Plot option} style @\n"
"@fname{style} [style, @var{type_1}, @dots{}, @var{type_n}] @\n"
"@fname{style} [style, [@var{style_1}], @dots{}, [@var{style_n}]]\n"
msgstr ""

# Plotting.texi
msgid ""
"The styles that will be used for the various functions or sets of data\n"
"in a 2d plot.  The word @var{style} must be followed by one or more\n"
"styles.  If there are more functions and data sets than the styles\n"
"given, the styles will be repeated.  Each style can be either\n"
"@var{lines} for line segments, @var{points} for isolated points,\n"
"@var{linespoints} for segments and points, or @var{dots} for small\n"
"isolated dots.  Gnuplot accepts also an @var{impulses} style.\n"
msgstr ""

# Plotting.texi
msgid ""
"Each of the styles can be enclosed inside a list with some additional\n"
"parameters.  @var{lines} accepts one or two numbers: the width of the\n"
"line and an integer that identifies a color.  The default color codes\n"
"are: 1: blue, 2: red, 3: magenta, 4: orange, 5: brown, 6: lime and 7:\n"
"aqua.  If you use Gnuplot with a terminal different than X11,\n"
"those colors might be different; for example, if you use the option\n"
"[@var{gnuplot_term}, @var{ps}], color index 4 will correspond to black,\n"
"instead of orange.\n"
msgstr ""

# Plotting.texi
msgid ""
"@var{points} accepts one two or three parameters; the first parameter\n"
"is the radius of the points, the second parameter is an integer that\n"
"selects the color, using the same code used for @var{lines} and the\n"
"third parameter is currently used only by Gnuplot and it corresponds\n"
"to several objects instead of points.  The default types of\n"
"objects are: 1: filled circles, 2: open circles, 3: plus signs, 4: x,\n"
"5: *, 6: filled squares, 7: open squares, 8: filled triangles, 9: open\n"
"triangles, 10: filled inverted triangles, 11: open inverted triangles,\n"
"12: filled lozenges and 13: open lozenges.\n"
msgstr ""

# Plotting.texi
msgid ""
"@var{linespoints} accepts up to four parameters: line width, points\n"
"radius, color and type of object to replace the points.\n"
msgstr ""

# Plotting.texi
msgid ""
"See also @mref{color} and @mrefdot{point_type}\n"
" \n"
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{svg_file}\n"
"@defvr {Plot option} svg_file [svg_file, @var{file_name}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Saves the plot into an SVG file with name equal to @var{file_name},\n"
"rather than showing it in the screen.  By default, the file will be\n"
"created in the directory defined by the variable\n"
"@mrefcomma{maxima_tempdir} unless @var{file_name} contains the character\n"
"``/'', in which case it will be assumed to contain the complete path where\n"
"the file should be created. The value of @mref{maxima_tempdir} can be changed\n"
"to save the file in a different directory. When the option\n"
"@mref{gnuplot_svg_term_command} is also given, it will be used to set up\n"
"Gnuplot's SVG terminal; otherwise, Gnuplot's svg terminal\n"
"will be used with font of 14 points.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{t}\n"
"@defvr {Plot option} t [t, @var{min}, @var{max}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Default range for parametric plots.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{title}\n"
"@defvr {Plot option} title [title, @var{text}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Defines a title that will be written at the top of the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{transform_xy}\n"
"@defvr {Plot option} transform_xy [transform_xy, @var{symbol}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Where @var{symbol} is either @code{false} or the result obtained by\n"
"using the function @code{transform_xy}.  If different from @code{false},\n"
"it will be used to transform the 3 coordinates in plot3d.\n"
msgstr ""

# Plotting.texi
msgid ""
"See @mrefcomma{make_transform} @mref{polar_to_xy} and\n"
"@mrefdot{spherical_to_xyz}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{x}\n"
"@defvr {Plot option} x [x, @var{min}, @var{max}]\n"
msgstr ""

# Plotting.texi
msgid ""
"When used as the first option in a @mref{plot2d} command (or any of the\n"
"first two in @mref{plot3d}), it indicates that the first independent variable\n"
"is x and it sets its range.  It can also be used again after the first\n"
"option (or after the second option in plot3d) to define the effective\n"
"horizontal domain that will be shown in the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{xlabel}\n"
"@defvr {Plot option} xlabel [xlabel, @var{string}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Specifies the @var{string} that will label the first axis; if this option is\n"
"not used, that label will be the name of the independent variable, when plotting\n"
"functions with @mref{plot2d} or @mrefcomma{implicit_plot} or the name of the\n"
"first variable, when plotting surfaces with @mref{plot3d} or contours with\n"
"@mrefcomma{contour_plot} or the first expression in the case of a parametric\n"
"plot.  It can not be used with @mrefdot{set_plot_option}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{xtics}\n"
"@defvr {Plot option} xtics [xtics, @var{x1}, @var{x2}, @var{x3}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Defines the values at which a mark and a number will be placed in the x\n"
"axis. The first number is the initial value, the second the increments\n"
"and the third is the last value where a mark is placed. The second and\n"
"third numbers can be omitted. When only one number is given, it will be\n"
"used as the increment from an initial value that will be chosen\n"
"automatically.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{xy_scale}\n"
"@defvr {Plot option} xy_scale [xy_scale, @var{sx}, @var{sy}]\n"
msgstr ""

# Plotting.texi
msgid ""
"In a 2d plot, it defines the ratio of the total size of the Window to\n"
"the size that will be used for the plot. The two numbers given as\n"
"arguments are the scale factors for the x and y axes. \n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{y}\n"
"@defvr {Plot option} y [y, @var{min}, @var{max}]\n"
msgstr ""

# Plotting.texi
msgid ""
"When used as one of the first two options in @mrefcomma{plot3d} it indicates\n"
"that one of the independent variables is y and it sets its range.  Otherwise,\n"
"it defines the effective domain of the second variable that will be\n"
"shown in the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{ylabel}\n"
"@defvr {Plot option} ylabel [ylabel, @var{string}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Specifies the @var{string} that will label the second axis; if this\n"
"option is not used, that label will be ``y'', when plotting functions\n"
"with @mref{plot2d} or @mrefcomma{implicit_plot} or the name of the second\n"
"variable, when plotting surfaces with @mref{plot3d} or contours with\n"
"@mrefcomma{contour_plot} or the second expression in the case of a parametric\n"
"plot.  It can not be used with @mrefdot{set_plot_option}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{ytics}\n"
"@defvr {Plot option} ytics [ytics, @var{y1}, @var{y2}, @var{y3}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Defines the values at which a mark and a number will be placed in the y\n"
"axis. The first number is the initial value, the second the increments\n"
"and the third is the last value where a mark is placed. The second and\n"
"third numbers can be omitted. When only one number is given, it will be\n"
"used as the increment from an initial value that will be chosen\n"
"automatically\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
"@c -----------------------------------------------------------------------------\n"
"@anchor{yx_ratio}\n"
"@defvr {Plot option} yx_ratio [yx_ratio, @var{r}]\n"
msgstr ""

# Plotting.texi
msgid ""
"In a 2d plot, the ratio between the vertical and the horizontal sides of\n"
"the rectangle used to make the plot. See also @mrefdot{same_xy}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{z}\n"
"@defvr {Plot option} z [z, @var{min}, @var{max}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Used in @mref{plot3d} to set the effective range of values of z that will be\n"
"shown in the plot.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{zlabel}\n"
"@defvr {Plot option} zlabel [zlabel, @var{string}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Specifies the @var{string} that will label the third axis, when using\n"
"@mrefdot{plot3d}  If this option is not used, that label will be ``z'', when\n"
"plotting surfaces, or the third expression in the case of a parametric\n"
"plot.  It can not be used with @mref{set_plot_option} and it will be\n"
"ignored by @mref{plot2d} and @mrefdot{implicit_plot}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{zmin}\n"
"@defvr {Plot option} zmin [zmin, @var{z}]\n"
msgstr ""

# Plotting.texi
msgid ""
"In 3d plots, the value of z that will be at the bottom of the plot box.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Gnuplot Options, Gnuplot_pipes Format Functions, Plotting Options, Plotting\n"
"@section Gnuplot Options\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# Plotting.texi
msgid ""
"There are several plot options specific to gnuplot.  All of them consist\n"
"of a keyword (the name of the option), followed by a string that should\n"
"be a valid gnuplot command, to be passed directly to gnuplot.  In most\n"
"cases, there exist a corresponding plotting option that will produce a\n"
"similar result and whose use is more recommended than the gnuplot\n"
"specific option.\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_term}\n"
"@defvr {Plot option} gnuplot_term [gnuplot_term, @var{terminal_name}]\n"
msgstr ""

# Plotting.texi
msgid ""
"Sets the output terminal type for gnuplot. The argument @var{terminal_name}\n"
"can be a string or one of the following 3 special symbols\n"
"@itemize @bullet\n"
"@item\n"
"@strong{default} (default value)\n"
msgstr ""

# Plotting.texi
msgid ""
"Gnuplot output is displayed in a separate graphical window and the\n"
"gnuplot terminal used will be specified by the value of the option\n"
"@mrefdot{gnuplot_default_term_command}\n"
msgstr ""

# Plotting.texi
msgid ""
"@item\n"
"@strong{dumb}\n"
msgstr ""

# Plotting.texi
msgid ""
"Gnuplot output is saved to a file @code{maxout_xxx.gnuplot} using \"ASCII\n"
"art\" approximation to graphics. If the option @mref{gnuplot_out_file} is\n"
"set to @var{filename}, the plot will be saved there, instead of the\n"
"default @code{maxout_xxx.gnuplot}. The settings for the ``dumb'' terminal of\n"
"Gnuplot are given by the value of option\n"
"@mrefdot{gnuplot_dumb_term_command} If option @mref{run_viewer} is set\n"
"to true and the plot_format is @code{gnuplot} that ASCII representation\n"
"will also be shown in the Maxima or Xmaxima console.\n"
msgstr ""

# Plotting.texi
msgid ""
"@item\n"
"@strong{ps}\n"
msgstr ""

# Plotting.texi
msgid ""
"Gnuplot generates commands in the PostScript page description language.\n"
"If the option @mref{gnuplot_out_file} is set to @var{filename}, gnuplot\n"
"writes the PostScript commands to @var{filename}.  Otherwise, it is\n"
"saved as @code{maxplot.ps} file. The settings for this terminal are given by the value of the option @mrefdot{gnuplot_dumb_term_command}\n"
msgstr ""

# Plotting.texi
msgid ""
"@item\n"
"A string representing any valid gnuplot term specification\n"
msgstr ""

# Plotting.texi
msgid ""
"Gnuplot can generate output in many other graphical formats such as png,\n"
"jpeg, svg etc. To use those formats, option @code{gnuplot_term} can be\n"
"set to any supported gnuplot term name (which must be a symbol) or even a\n"
"full gnuplot term specification with any valid options (which must be a string).  For\n"
"example @code{[gnuplot_term, png]} creates output in PNG (Portable\n"
"Network Graphics) format while @code{[gnuplot_term, \"png size\n"
"1000,1000\"]} creates PNG of 1000 x 1000 pixels size.  If the option\n"
"@mref{gnuplot_out_file} is set to @var{filename}, gnuplot writes the\n"
"output to @var{filename}.  Otherwise, it is saved as\n"
"@code{maxplot.@var{term}} file, where @var{term} is gnuplot terminal\n"
"name.\n"
"@end itemize\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_out_file}\n"
"@defvr {Plot option} gnuplot_out_file [gnuplot_out_file, @var{file_name}]\n"
msgstr ""

# Plotting.texi
msgid ""
"It can be used to replace the default name for the file that contains\n"
"the commands that will interpreted by gnuplot, when the terminal is set\n"
"to @code{default}, or to replace the default name of the graphic file\n"
"that gnuplot creates, when the terminal is different from\n"
"@code{default}. If it contains one or more slashes, ``/'', the name of\n"
"the file will be left as it is; otherwise, it will be appended to the\n"
"path of the temporary directory. The complete name of the files created\n"
"by the plotting commands is always sent as output of those commands so\n"
"they can be seen if the command is ended by semi-colon.\n"
msgstr ""

# Plotting.texi
msgid ""
"When used in conjunction with the @mref{gnuplot_term} option, it can be\n"
"used to save the plot in a file, in one of the graphic formats supported\n"
"by Gnuplot. To create PNG, PDF, Postscript or SVG, it is easier to use\n"
"options @mrefcomma{png_file} @mrefcomma{pdf_file} @mrefcomma{ps_file}\n"
"or @mrefdot{svg_file}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_pm3d}\n"
"@defvr {Plot option} gnuplot_pm3d [gnuplot_pm3d, @var{value}]\n"
msgstr ""

# Plotting.texi
msgid ""
"With a value of @code{false}, it can be used to disable the use of PM3D\n"
"mode, which is enabled by default.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_preamble}\n"
"@defvr {Plot option} gnuplot_preamble [gnuplot_preamble, @var{string}]\n"
msgstr ""

# Plotting.texi
msgid ""
"This option inserts gnuplot commands before any other commands sent to\n"
"Gnuplot. Any valid gnuplot commands may be used. Multiple commands should\n"
"be separated with a semi-colon. See also @mrefdot{gnuplot_postamble}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_postamble}\n"
"@defvr {Plot option} gnuplot_postamble [gnuplot_postamble, @var{string}]\n"
msgstr ""

# Plotting.texi
msgid ""
"This option inserts gnuplot commands after other commands sent to\n"
"Gnuplot and right before the plot command is sent. Any valid gnuplot\n"
"commands may be used. Multiple commands should be separated with a\n"
"semi-colon. See also @mrefdot{gnuplot_preamble}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_default_term_command}\n"
"@defvr {Plot option} gnuplot_default_term_command\n"
"[gnuplot_default_term_command, @var{command}]\n"
msgstr ""

# Plotting.texi
msgid ""
"The gnuplot command to set the terminal type for the default\n"
"terminal. It this option is not set, the command used will be: @code{\"set term wxt size 640,480 font \\",12\\"; set term pop\"}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_dumb_term_command}\n"
"@defvr {Plot option} gnuplot_dumb_term_command\n"
"[gnuplot_dumb_term_command, @var{command}]\n"
msgstr ""

# Plotting.texi
msgid ""
"The gnuplot command to set the terminal type for the dumb terminal.  It\n"
"this option is not set, the command used will be: @code{\"set term dumb\n"
"79 22\"}, which makes the text output 79 characters by 22 characters.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_pdf_term_command}\n"
"@defvr {Plot option} gnuplot_pdf_term_command [gnuplot_pdf_term_command, @var{command}]\n"
msgstr ""

# Plotting.texi
msgid ""
"The gnuplot command to set the terminal type for the PDF\n"
"terminal.  If this option is not set, the command used will be: @code{\"set term pdfcairo color solid lw 3 size 17.2 cm, 12.9 cm font \\",18\\"\"}. See the gnuplot documentation for more information.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_png_term_command}\n"
"@defvr {Plot option} gnuplot_png_term_command [gnuplot_png_term_command, @var{command}]\n"
msgstr ""

# Plotting.texi
msgid ""
"The gnuplot command to set the terminal type for the PNG terminal.  If\n"
"this option is not set, the command used will be:\n"
"@code{\"set term pngcairo font \\",12\\"\"}. See the gnuplot documentation\n"
"for more information.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_ps_term_command}\n"
"@defvr {Plot option} gnuplot_ps_term_command [gnuplot_ps_term_command, @var{command}]\n"
msgstr ""

# Plotting.texi
msgid ""
"The gnuplot command to set the terminal type for the PostScript\n"
"terminal.  If this option is not set, the command used will be: @code{\"set term postscript eps color solid lw 2 size 16.4 cm, 12.3 cm font \\",24\\"\"}. See the gnuplot documentation for @code{set term postscript} for\n"
"more information.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_svg_term_command}\n"
"@defvr {Plot option} gnuplot_svg_term_command [gnuplot_svg_term_command, @var{command}]\n"
msgstr ""

# Plotting.texi
msgid ""
"The gnuplot command to set the terminal type for the SVG\n"
"terminal.  If this option is not set, the command used will be:\n"
"@code{\"set term svg font \\",14\\"\"}. See the gnuplot documentation for\n"
"more information.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_curve_titles}\n"
"@defvr {Plot option} gnuplot_curve_titles\n"
msgstr ""

# Plotting.texi
msgid ""
"This is an obsolete option that has been replaced @mref{legend} described\n"
"above.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_curve_styles}\n"
"@defvr {Plot option} gnuplot_curve_styles\n"
msgstr ""

# Plotting.texi
msgid ""
"This is an obsolete option that has been replaced by @mrefdot{style}\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Gnuplot_pipes Format Functions,  , Gnuplot Options, Plotting\n"
"@section Gnuplot_pipes Format Functions\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_start}\n"
"@deffn {Function} gnuplot_start ()\n"
msgstr ""

# Plotting.texi
msgid ""
"Opens the pipe to gnuplot used for plotting with the @code{gnuplot_pipes}\n"
"format.  Is not necessary to manually open the pipe before plotting.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_close}\n"
"@deffn {Function} gnuplot_close ()\n"
msgstr ""

# Plotting.texi
msgid ""
"Closes the pipe to gnuplot which is used with the @code{gnuplot_pipes} format.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_restart}\n"
"@deffn {Function} gnuplot_restart ()\n"
msgstr ""

# Plotting.texi
msgid ""
"Closes the pipe to gnuplot which is used with the @code{gnuplot_pipes}\n"
"format and opens a new pipe.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_replot}\n"
"@deffn  {Function} gnuplot_replot @\n"
"@fname{gnuplot_replot} () @\n"
"@fname{gnuplot_replot} (@var{s})\n"
msgstr ""

# Plotting.texi
msgid ""
"Updates the gnuplot window.  If @code{gnuplot_replot} is called with a\n"
"gnuplot command in a string @var{s}, then @code{s} is sent to gnuplot\n"
"before reploting the window.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{gnuplot_reset}\n"
"@deffn {Function} gnuplot_reset ()\n"
msgstr ""

# Plotting.texi
msgid ""
"Resets the state of gnuplot used with the @code{gnuplot_pipes} format.  To\n"
"update the gnuplot window call @mref{gnuplot_replot} after @code{gnuplot_reset}.\n"
msgstr ""

# Plotting.texi
msgid ""
"@opencatbox\n"
"@category{Plotting}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Plotting.texi
msgid ""
msgstr ""
