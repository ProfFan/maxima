# This file contains all translatable strings from a .texi file.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL>, YEAR.
#
#, fuzzy
msgid ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-06 22:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL>\n"
"Language-Team: LANGUAGE <LL.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
msgstr ""

#: diag.texi:4
msgid ""
"@menu\n"
"* Functions and Variables for diag::\n"
"@end menu\n"
msgstr ""

#: diag.texi:7
msgid ""
"@node Functions and Variables for diag,  , diag-pkg, diag-pkg\n"
"@section Functions and Variables for diag\n"
msgstr ""

#: diag.texi:14
msgid ""
"@anchor{diag_function}\n"
"@deffn {Function} diag (@var{lm})\n"
"Constructs a matrix that is the block sum of the elements of\n"
"@var{lm}. The elements of @var{lm} are assumed to be matrices; if an\n"
"element is scalar, it treated as a 1 by 1 matrix.\n"
msgstr ""

#: diag.texi:17
msgid ""
"The resulting matrix will be square if each of the elements of\n"
"@var{lm} is square.\n"
msgstr ""

#: diag.texi:21
msgid ""
"Example:\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
msgstr ""

#: diag.texi:23
msgid ""
"(%i2) a1:matrix([1,2,3],[0,4,5],[0,0,6])$\n"
msgstr ""

#: diag.texi:25
msgid ""
"(%i3) a2:matrix([1,1],[1,0])$\n"
msgstr ""

#: diag.texi:43
msgid ""
"(%i4) diag([a1,x,a2]);\n"
"                   [ 1  2  3  0  0  0 ]\n"
"                   [                  ]\n"
"                   [ 0  4  5  0  0  0 ]\n"
"                   [                  ]\n"
"                   [ 0  0  6  0  0  0 ]\n"
"(%o4)              [                  ]\n"
"                   [ 0  0  0  x  0  0 ]\n"
"                   [                  ]\n"
"                   [ 0  0  0  0  1  1 ]\n"
"                   [                  ]\n"
"                   [ 0  0  0  0  1  0 ]\n"
"(%i5) diag ([matrix([1,2]), 3]);\n"
"                        [ 1  2  0 ]\n"
"(%o5)                   [         ]\n"
"                        [ 0  0  3 ]\n"
"@end example\n"
msgstr ""

#: diag.texi:45
msgid ""
"To use this function write first @code{load(\"diag\")}.\n"
msgstr ""

#: diag.texi:49
msgid ""
"@opencatbox\n"
"@category{Matrices} @category{Share packages} @category{Package diag}\n"
"@closecatbox\n"
msgstr ""

#: diag.texi:51
msgid ""
"@end deffn\n"
msgstr ""

#: diag.texi:56
msgid ""
"@anchor{JF}\n"
"@deffn {Function} JF (@var{lambda},@var{n})\n"
"Returns the Jordan cell of order @var{n} with eigenvalue @var{lambda}.\n"
msgstr ""

#: diag.texi:60
msgid ""
"Example:\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: diag.texi:76
msgid ""
"(%i2) JF(2,5);\n"
"                    [ 2  1  0  0  0 ]\n"
"                    [               ]\n"
"                    [ 0  2  1  0  0 ]\n"
"                    [               ]\n"
"(%o2)               [ 0  0  2  1  0 ]\n"
"                    [               ]\n"
"                    [ 0  0  0  2  1 ]\n"
"                    [               ]\n"
"                    [ 0  0  0  0  2 ]\n"
"(%i3) JF(3,2);\n"
"                         [ 3  1 ]\n"
"(%o3)                    [      ]\n"
"                         [ 0  3 ]\n"
"@end example\n"
msgstr ""

#: diag.texi:78
msgid ""
"To use this function write first @code{load(\"diag\")}.\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: diag.texi:82
msgid ""
"@opencatbox\n"
"@category{Package diag}\n"
"@closecatbox\n"
msgstr ""

#: diag.texi:84
msgid ""
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: diag.texi:91
msgid ""
"@anchor{jordan}\n"
"@deffn {Function} jordan (@var{mat})\n"
"Returns the Jordan form of matrix @var{mat}, encoded as a list in a\n"
"particular format. To get the corresponding matrix, call the function\n"
"@code{dispJordan} using the output of @code{jordan} as the argument.\n"
msgstr ""

#: diag.texi:97
msgid ""
"The elements of the returned list are themselves lists. The first\n"
"element of each is an eigenvalue of @var{mat}. The remaining elements\n"
"are positive integers which are the lengths of the Jordan blocks for\n"
"this eigenvalue. These integers are listed in decreasing\n"
"order. Eigenvalues are not repeated.\n"
msgstr ""

#: diag.texi:104
msgid ""
"The functions @code{dispJordan}, @code{minimalPoly} and\n"
"@code{ModeMatrix} expect the output of a call to @code{jordan} as an\n"
"argument. If you construct this argument by hand, rather than by\n"
"calling @code{jordan}, you must ensure that each eigenvalue only\n"
"appears once and that the block sizes are listed in decreasing order,\n"
"otherwise the functions might give incorrect answers.\n"
msgstr ""

#: diag.texi:152
msgid ""
"Example:\n"
"@c ===beg===\n"
"@c load(\"diag\")$\n"
"@c A: matrix([2,0,0,0,0,0,0,0],\n"
"@c                 [1,2,0,0,0,0,0,0],\n"
"@c                 [-4,1,2,0,0,0,0,0],\n"
"@c                 [2,0,0,2,0,0,0,0],\n"
"@c                 [-7,2,0,0,2,0,0,0],\n"
"@c                 [9,0,-2,0,1,2,0,0],\n"
"@c                 [-34,7,1,-2,-1,1,2,0],\n"
"@c                 [145,-17,-16,3,9,-2,0,3])$\n"
"@c jordan (A);\n"
"@c dispJordan (%);\n"
"@c ===end===\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
"@group\n"
"(%i2) A: matrix([2,0,0,0,0,0,0,0],\n"
"                [1,2,0,0,0,0,0,0],\n"
"                [-4,1,2,0,0,0,0,0],\n"
"                [2,0,0,2,0,0,0,0],\n"
"                [-7,2,0,0,2,0,0,0],\n"
"                [9,0,-2,0,1,2,0,0],\n"
"                [-34,7,1,-2,-1,1,2,0],\n"
"                [145,-17,-16,3,9,-2,0,3])$\n"
"@end group\n"
"@group\n"
"(%i3) jordan (A);\n"
"(%o3)                [[2, 3, 3, 1], [3, 1]]\n"
"@end group\n"
"(%i4) dispJordan (%);\n"
"                   [ 2  1  0  0  0  0  0  0 ]\n"
"                   [                        ]\n"
"                   [ 0  2  1  0  0  0  0  0 ]\n"
"                   [                        ]\n"
"                   [ 0  0  2  0  0  0  0  0 ]\n"
"                   [                        ]\n"
"                   [ 0  0  0  2  1  0  0  0 ]\n"
"(%o4)              [                        ]\n"
"                   [ 0  0  0  0  2  1  0  0 ]\n"
"                   [                        ]\n"
"                   [ 0  0  0  0  0  2  0  0 ]\n"
"                   [                        ]\n"
"                   [ 0  0  0  0  0  0  2  0 ]\n"
"                   [                        ]\n"
"                   [ 0  0  0  0  0  0  0  3 ]\n"
"@end example\n"
msgstr ""

#: diag.texi:154
msgid ""
"To use this function write first @code{load(\"diag\")}. See also @mref{dispJordan} and @mrefdot{minimalPoly}\n"
msgstr ""

#: diag.texi:158
msgid ""
"@opencatbox\n"
"@category{Package diag}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: diag.texi:160
msgid ""
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: diag.texi:168
msgid ""
"@anchor{dispJordan}\n"
"@deffn {Function} dispJordan (@var{l})\n"
"Returns a matrix in Jordan canonical form (JCF) corresponding to the\n"
"list of eigenvalues and multiplicities given by @var{l}. This list\n"
"should be in the format given by the @mref{jordan} function. See\n"
"@mref{jordan} for details of this format.\n"
msgstr ""

#: diag.texi:172
msgid ""
"Example:\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: diag.texi:178
msgid ""
"(%i2) b1:matrix([0,0,1,1,1],\n"
"                [0,0,0,1,1],\n"
"                [0,0,0,0,1],\n"
"                [0,0,0,0,0],\n"
"                [0,0,0,0,0])$\n"
msgstr ""

#: diag.texi:192
msgid ""
"(%i3) jordan(b1);\n"
"(%o3)                  [[0, 3, 2]]\n"
"(%i4) dispJordan(%);\n"
"                    [ 0  1  0  0  0 ]\n"
"                    [               ]\n"
"                    [ 0  0  1  0  0 ]\n"
"                    [               ]\n"
"(%o4)               [ 0  0  0  0  0 ]\n"
"                    [               ]\n"
"                    [ 0  0  0  0  1 ]\n"
"                    [               ]\n"
"                    [ 0  0  0  0  0 ]\n"
"@end example\n"
msgstr ""

#: diag.texi:194
msgid ""
"To use this function write first @code{load(\"diag\")}. See also @mref{jordan} and @mrefdot{minimalPoly}\n"
msgstr ""

#: diag.texi:198
msgid ""
"@opencatbox\n"
"@category{Package diag}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: diag.texi:200
msgid ""
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 3
msgstr ""

#: diag.texi:208
msgid ""
"@anchor{minimalPoly}\n"
"@deffn {Function} minimalPoly (@var{l})\n"
"Returns the minimal polynomial of the matrix whose Jordan form is\n"
"described by the list @var{l}. This list should be in the format given\n"
"by the @mref{jordan} function. See @mref{jordan} for details of this\n"
"format.\n"
msgstr ""

#: diag.texi:212
msgid ""
"Example:\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
@c Occurrences of paragraphs with this contents up to now: 3
msgstr ""

#: diag.texi:217
msgid ""
"(%i2) a:matrix([2,1,2,0],\n"
"               [-2,2,1,2],\n"
"               [-2,-1,-1,1],\n"
"               [3,1,2,-1])$\n"
msgstr ""

#: diag.texi:224
msgid ""
"(%i3) jordan(a);\n"
"(%o3)               [[- 1, 1], [1, 3]]\n"
"(%i4) minimalPoly(%);\n"
"                            3\n"
"(%o4)                (x - 1)  (x + 1)\n"
"@end example\n"
msgstr ""

#: diag.texi:226
msgid ""
"To use this function write first @code{load(\"diag\")}. See also @mref{jordan} and @mrefdot{dispJordan}\n"
msgstr ""

#: diag.texi:230
msgid ""
"@opencatbox\n"
"@category{Package diag}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 3
msgstr ""

#: diag.texi:232
msgid ""
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 4
msgstr ""

#: diag.texi:237
msgid ""
"@anchor{ModeMatrix}\n"
"@deffn {Function} ModeMatrix (@var{A}, [@var{jordan_info}])\n"
"Returns an invertible matrix @var{M} such that @math{(M^^-1).A.M} is\n"
"the Jordan form of @var{A}.\n"
msgstr ""

#: diag.texi:243
msgid ""
"To calculate this, Maxima must find the Jordan form of @var{A}, which\n"
"might be quite computationally expensive. If that has already been\n"
"calculated by a previous call to @mref{jordan}, pass it as a second\n"
"argument, @var{jordan_info}. See @mref{jordan} for details of the\n"
"required format.\n"
msgstr ""

#: diag.texi:273
msgid ""
"Example:\n"
"@c ===beg===\n"
"@c load(\"diag\")$\n"
"@c A: matrix([2,1,2,0], [-2,2,1,2], [-2,-1,-1,1], [3,1,2,-1])$\n"
"@c M: ModeMatrix (A);\n"
"@c is ((M^^-1) . A . M = dispJordan (jordan (A)));\n"
"@c ===end===\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
"(%i2) A: matrix([2,1,2,0], [-2,2,1,2], [-2,-1,-1,1], [3,1,2,-1])$\n"
"(%i3) M: ModeMatrix (A);\n"
"                      [  1    - 1   1   1 ]\n"
"                      [                   ]\n"
"                      [   1               ]\n"
"                      [ - -   - 1   0   0 ]\n"
"                      [   9               ]\n"
"                      [                   ]\n"
"(%o3)                 [   13              ]\n"
"                      [ - --   1   - 1  0 ]\n"
"                      [   9               ]\n"
"                      [                   ]\n"
"                      [  17               ]\n"
"                      [  --   - 1   1   1 ]\n"
"                      [  9                ]\n"
"@group\n"
"(%i4) is ((M^^-1) . A . M = dispJordan (jordan (A)));\n"
"(%o4)                         true\n"
"@end group\n"
"@end example\n"
msgstr ""

#: diag.texi:278
msgid ""
"Note that, in this example, the Jordan form of @code{A} is computed\n"
"twice. To avoid this, we could have stored the output of\n"
"@code{jordan(A)} in a variable and passed that to both\n"
"@code{ModeMatrix} and @code{dispJordan}.\n"
msgstr ""

#: diag.texi:281
msgid ""
"To use this function write first @code{load(\"diag\")}. See also\n"
"@mref{jordan} and @mrefdot{dispJordan}\n"
msgstr ""

#: diag.texi:285
msgid ""
"@opencatbox\n"
"@category{Package diag}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 4
msgstr ""

#: diag.texi:287
msgid ""
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 5
msgstr ""

#: diag.texi:295
msgid ""
"@anchor{mat_function}\n"
"@deffn {Function} mat_function (@var{f},@var{A})\n"
"Returns @math{f(A)}, where @var{f} is an analytic function and @var{A}\n"
"a matrix. This computation is based on the Taylor expansion of\n"
"@var{f}. It is not efficient for numerical evaluation, but can give\n"
"symbolic answers for small matrices.\n"
msgstr ""

#: diag.texi:298
msgid ""
"@c What other methods do we have in Maxima at the moment? We should\n"
"@c probably give links here...\n"
msgstr ""

#: diag.texi:300
msgid ""
"Example 1:\n"
msgstr ""

#: diag.texi:319
msgid ""
"The exponential of a matrix. We only give the first row of the answer,\n"
"since the output is rather large.\n"
"@c ===beg===\n"
"@c load(\"diag\")$\n"
"@c A: matrix ([0,1,0], [0,0,1], [-1,-3,-3])$\n"
"@c ratsimp (mat_function (exp, t*A)[1]);\n"
"@c ===end===\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
"(%i2) A: matrix ([0,1,0], [0,0,1], [-1,-3,-3])$\n"
"@group\n"
"(%i3) ratsimp (mat_function (exp, t*A)[1]);\n"
"           2              - t                   2   - t\n"
"         (t  + 2 t + 2) %e       2        - t  t  %e\n"
"(%o3)   [--------------------, (t  + t) %e   , --------]\n"
"                  2                               2\n"
"@end group\n"
"@end example\n"
msgstr ""

#: diag.texi:321
msgid ""
"Example 2:\n"
msgstr ""

#: diag.texi:394
msgid ""
"Comparison with the Taylor series for the exponential and also\n"
"comparing @code{exp(%i*A)} with sine and cosine.\n"
"@c ===beg===\n"
"@c load(\"diag\")$\n"
"@c A: matrix ([0,1,1,1],\n"
"@c                  [0,0,0,1],\n"
"@c                  [0,0,0,1],\n"
"@c                  [0,0,0,0])$\n"
"@c ratsimp (mat_function (exp, t*A));\n"
"@c minimalPoly (jordan (A));\n"
"@c ratsimp (ident(4) + t*A + 1/2*(t^2)*A^^2);\n"
"@c ratsimp (mat_function (exp, %i*t*A));\n"
"@c ratsimp (mat_function (cos, t*A) + %i*mat_function (sin, t*A));\n"
"@c ===end===\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
"@group\n"
"(%i2) A: matrix ([0,1,1,1],\n"
"                 [0,0,0,1],\n"
"                 [0,0,0,1],\n"
"                 [0,0,0,0])$\n"
"@end group\n"
"@group\n"
"(%i3) ratsimp (mat_function (exp, t*A));\n"
"                       [           2     ]\n"
"                       [ 1  t  t  t  + t ]\n"
"                       [                 ]\n"
"(%o3)                  [ 0  1  0    t    ]\n"
"                       [                 ]\n"
"                       [ 0  0  1    t    ]\n"
"                       [                 ]\n"
"                       [ 0  0  0    1    ]\n"
"@end group\n"
"@group\n"
"(%i4) minimalPoly (jordan (A));\n"
"                                3\n"
"(%o4)                          x\n"
"@end group\n"
"@group\n"
"(%i5) ratsimp (ident(4) + t*A + 1/2*(t^2)*A^^2);\n"
"                       [           2     ]\n"
"                       [ 1  t  t  t  + t ]\n"
"                       [                 ]\n"
"(%o5)                  [ 0  1  0    t    ]\n"
"                       [                 ]\n"
"                       [ 0  0  1    t    ]\n"
"                       [                 ]\n"
"                       [ 0  0  0    1    ]\n"
"@end group\n"
"@group\n"
"(%i6) ratsimp (mat_function (exp, %i*t*A));\n"
"                  [                        2 ]\n"
"                  [ 1  %i t  %i t  %i t - t  ]\n"
"                  [                          ]\n"
"(%o6)             [ 0   1     0      %i t    ]\n"
"                  [                          ]\n"
"                  [ 0   0     1      %i t    ]\n"
"                  [                          ]\n"
"                  [ 0   0     0        1     ]\n"
"@end group\n"
"@group\n"
"(%i7) ratsimp (mat_function (cos, t*A) + %i*mat_function (sin, t*A));\n"
"                  [                        2 ]\n"
"                  [ 1  %i t  %i t  %i t - t  ]\n"
"                  [                          ]\n"
"(%o7)             [ 0   1     0      %i t    ]\n"
"                  [                          ]\n"
"                  [ 0   0     1      %i t    ]\n"
"                  [                          ]\n"
"                  [ 0   0     0        1     ]\n"
"@end group\n"
"@end example\n"
msgstr ""

#: diag.texi:396
msgid ""
"Example 3:\n"
msgstr ""

#: diag.texi:426
msgid ""
"Power operations.\n"
"@c ===beg===\n"
"@c load(\"diag\")$\n"
"@c A: matrix([1,2,0], [0,1,0], [1,0,1])$\n"
"@c integer_pow(x) := block ([k], declare (k, integer), x^k)$\n"
"@c mat_function (integer_pow, A);\n"
"@c A^^20;\n"
"@c ===end===\n"
"@example\n"
"(%i1) load(\"diag\")$\n"
"(%i2) A: matrix([1,2,0], [0,1,0], [1,0,1])$\n"
"(%i3) integer_pow(x) := block ([k], declare (k, integer), x^k)$\n"
"@group\n"
"(%i4) mat_function (integer_pow, A);\n"
"                       [ 1     2 k     0 ]\n"
"                       [                 ]\n"
"(%o4)                  [ 0      1      0 ]\n"
"                       [                 ]\n"
"                       [ k  (k - 1) k  1 ]\n"
"@end group\n"
"@group\n"
"(%i5) A^^20;\n"
"                         [ 1   40   0 ]\n"
"                         [            ]\n"
"(%o5)                    [ 0    1   0 ]\n"
"                         [            ]\n"
"                         [ 20  380  1 ]\n"
"@end group\n"
"@end example\n"
msgstr ""

#: diag.texi:428
msgid ""
"To use this function write first @code{load(\"diag\")}.\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: diag.texi:432
msgid ""
"@opencatbox\n"
"@category{Package diag}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 5
msgstr ""

#: diag.texi:434
msgid ""
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 6
msgstr ""

