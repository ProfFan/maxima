# This file contains all translatable strings from a .texi file.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL>, YEAR.
#
#, fuzzy
msgid ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-06 22:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL>\n"
"Language-Team: LANGUAGE <LL.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
msgstr ""

#: Debugging.texi:6
msgid ""
"@menu\n"
"* Source Level Debugging::\n"
"* Keyword Commands::\n"
"* Functions and Variables for Debugging::   \n"
"@end menu\n"
msgstr ""

#: Debugging.texi:11
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Source Level Debugging, Keyword Commands, , Debugging\n"
"@section Source Level Debugging\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

#: Debugging.texi:16
msgid ""
"Maxima has a built-in source level debugger.  \n"
"The user can set a breakpoint at a function,\n"
"and then step line by line from there.  The call\n"
"stack may be examined, together with the variables bound at that level.\n"
msgstr ""

#: Debugging.texi:23
msgid ""
"The command @code{:help} or @code{:h} shows the list of debugger commands.\n"
"(In general,\n"
"commands may be abbreviated if the abbreviation is unique.  If not\n"
"unique, the alternatives will be listed.)\n"
"Within the debugger, the user can also use any ordinary Maxima\n"
"functions to examine, define, and manipulate variables and expressions.\n"
msgstr ""

#: Debugging.texi:30
msgid ""
"A breakpoint is set by the @code{:br} command at the Maxima prompt.\n"
"Within the debugger,\n"
"the user can advance one line at a time using the @code{:n} (``next'') command.\n"
"The @code{:bt} (``backtrace'') command shows a list of stack frames.\n"
"The @code{:r} (``resume'') command exits the debugger and continues with \n"
"execution.  These commands are demonstrated in the example below.\n"
msgstr ""

#: Debugging.texi:33
msgid ""
"@example\n"
"(%i1) load (\"/tmp/foobar.mac\");\n"
msgstr ""

#: Debugging.texi:35
msgid ""
"(%o1)                           /tmp/foobar.mac\n"
msgstr ""

#: Debugging.texi:39
msgid ""
"(%i2) :br foo\n"
"Turning on debugging debugmode(true)\n"
"Bkpt 0 for foo (in /tmp/foobar.mac line 1) \n"
msgstr ""

#: Debugging.texi:43
msgid ""
"(%i2) bar (2,3);\n"
"Bkpt 0:(foobar.mac 1)\n"
"/tmp/foobar.mac:1::\n"
msgstr ""

#: Debugging.texi:47
msgid ""
"(dbm:1) :bt                        <-- :bt typed here gives a backtrace\n"
"#0: foo(y=5)(foobar.mac line 1)\n"
"#1: bar(x=2,y=3)(foobar.mac line 9)\n"
msgstr ""

#: Debugging.texi:51
msgid ""
"(dbm:1) :n                         <-- Here type :n to advance line\n"
"(foobar.mac 2)\n"
"/tmp/foobar.mac:2::\n"
msgstr ""

#: Debugging.texi:55
msgid ""
"(dbm:1) :n                         <-- Here type :n to advance line\n"
"(foobar.mac 3)\n"
"/tmp/foobar.mac:3::\n"
msgstr ""

#: Debugging.texi:58
msgid ""
"(dbm:1) u;                         <-- Investigate value of u\n"
"28\n"
msgstr ""

#: Debugging.texi:61
msgid ""
"(dbm:1) u: 33;                     <-- Change u to be 33\n"
"33\n"
msgstr ""

#: Debugging.texi:63
msgid ""
"(dbm:1) :r                         <-- Type :r to resume the computation\n"
msgstr ""

#: Debugging.texi:66
msgid ""
"(%o2)                                1094\n"
"@end example\n"
msgstr ""

#: Debugging.texi:68
msgid ""
"The file @code{/tmp/foobar.mac} is the following:\n"
msgstr ""

#: Debugging.texi:81
msgid ""
"@example\n"
"foo(y) := block ([u:y^2],\n"
"  u: u+3,\n"
"  u: u^2,\n"
"  u);\n"
" \n"
"bar(x,y) := (\n"
"  x: x+2,\n"
"  y: y+2,\n"
"  x: foo(y),\n"
"  x+y);\n"
"@end example\n"
msgstr ""

#: Debugging.texi:83
msgid ""
"USE OF THE DEBUGGER THROUGH EMACS\n"
msgstr ""

#: Debugging.texi:91
msgid ""
"If the user is running the code under GNU emacs in a shell\n"
"window (dbl shell), or is running the graphical interface version,\n"
"Xmaxima, then if he stops at a break point, he will see his\n"
"current position in the source file which will be displayed in the\n"
"other half of the window, either highlighted in red, or with a little\n"
"arrow pointing at the right line.  He can advance single lines at a\n"
"time by typing M-n (Alt-n).\n"
msgstr ""

#: Debugging.texi:97
msgid ""
"Under Emacs you should run in a @code{dbl} shell, which requires the\n"
"@code{dbl.el} file in the elisp directory.\n"
"Make sure you install the elisp files or add the Maxima elisp directory to\n"
"your path:\n"
"e.g., add the following to your @file{.emacs} file or the @file{site-init.el}\n"
msgstr ""

#: Debugging.texi:102
msgid ""
"@example\n"
"(setq load-path (cons \"/usr/share/maxima/5.9.1/emacs\" load-path))\n"
"(autoload 'dbl \"dbl\")\n"
"@end example\n"
msgstr ""

#: Debugging.texi:104
msgid ""
"then in emacs \n"
msgstr ""

#: Debugging.texi:108
msgid ""
"@example\n"
"M-x dbl\n"
"@end example\n"
msgstr ""

#: Debugging.texi:112
msgid ""
"should start a shell window in which you can run programs, for example\n"
"Maxima, gcl, gdb etc.   This shell window also knows about source level\n"
"debugging, and display of source code in the other window.\n"
msgstr ""

#: Debugging.texi:122
msgid ""
"The user may set a break point at a certain line of the\n"
"file by typing @code{C-x space}.  This figures out which function\n"
"the cursor is in, and then it sees which line of that function\n"
"the cursor is on.   If the cursor is on, say, line 2 of @code{foo}, then it will\n"
"insert in the other window the command, ``@code{:br foo 2}'', to\n"
"break @code{foo} at its second line.   To have this enabled, the user must have\n"
"maxima-mode.el turned on in the window in which the file @code{foobar.mac} is\n"
"visiting.  There are additional commands available in that file window, such as\n"
"evaluating the function into the Maxima, by typing @code{Alt-Control-x}.\n"
msgstr ""

#: Debugging.texi:126
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
msgstr ""

#: Debugging.texi:131
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Keyword Commands, Functions and Variables for Debugging, Source Level Debugging, Debugging\n"
"@section Keyword Commands\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

#: Debugging.texi:138
msgid ""
"Keyword commands are special keywords which are not interpreted as Maxima\n"
"expressions.  A keyword command can be entered at the Maxima prompt or the\n"
"debugger prompt, although not at the break prompt.\n"
"Keyword commands start with a colon, '@code{:}'.\n"
"For example, to evaluate a Lisp form you\n"
"may type @code{:lisp} followed by the form to be evaluated.\n"
msgstr ""

#: Debugging.texi:143
msgid ""
"@example\n"
"(%i1) :lisp (+ 2 3) \n"
"5\n"
"@end example\n"
msgstr ""

#: Debugging.texi:147
msgid ""
"The number of arguments taken depends on the particular command.  Also,\n"
"you need not type the whole command, just enough to be unique among\n"
"the break keywords.   Thus @code{:br} would suffice for @code{:break}.\n"
msgstr ""

#: Debugging.texi:149
msgid ""
"The keyword commands are listed below.\n"
msgstr ""

#: Debugging.texi:195
msgid ""
"@table @code\n"
"@item :break F n\n"
"Set a breakpoint in function @code{F} at line offset @code{n}\n"
"from the beginning of the function.\n"
"If @code{F} is given as a string, then it is assumed to be\n"
"a file, and @code{n} is the offset from the beginning of the file.\n"
"The offset is optional. If not given, it is assumed to be zero\n"
"(first line of the function or file).\n"
"@item :bt\n"
"Print a backtrace of the stack frames\n"
"@item :continue\n"
"Continue the computation\n"
"@c CAN'T SEEM TO GET :delete TO WORK !!!\n"
"@item :delete\n"
"Delete the specified breakpoints, or all if none are specified\n"
"@c CAN'T SEEM TO GET :disable TO WORK !!!\n"
"@item :disable\n"
"Disable the specified breakpoints, or all if none are specified\n"
"@c CAN'T SEEM TO GET :enable TO WORK !!!\n"
"@item :enable\n"
"Enable the specified breakpoints, or all if none are specified\n"
"@item :frame n\n"
"Print stack frame @code{n}, or the current frame if none is specified\n"
"@c CAN'T SEEM TO GET :help TO WORK !!!\n"
"@item :help\n"
"Print help on a debugger command, or all commands if none is specified\n"
"@c CAN'T SEEM TO GET :info TO WORK !!!\n"
"@item :info\n"
"Print information about item\n"
"@item :lisp some-form\n"
"Evaluate @code{some-form} as a Lisp form\n"
"@item :lisp-quiet some-form\n"
"Evaluate Lisp form @code{some-form} without any output\n"
"@item :next\n"
"Like @code{:step}, except @code{:next} steps over function calls\n"
"@item :quit\n"
"Quit the current debugger level without completing the computation\n"
"@item :resume\n"
"Continue the computation\n"
"@item :step\n"
"Continue the computation until it reaches a new source line\n"
"@item :top\n"
"Return to the Maxima prompt (from any debugger level) without \n"
"completing the computation\n"
"@end table \n"
msgstr ""

#: Debugging.texi:199
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Debugging.texi:204
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Functions and Variables for Debugging, , Keyword Commands, Debugging\n"
"@section Functions and Variables for Debugging\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

#: Debugging.texi:209
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{debugmode}\n"
"@defvr {Option variable} debugmode\n"
"Default value: @code{false}\n"
msgstr ""

#: Debugging.texi:214
msgid ""
"When a Maxima error occurs, Maxima will start the debugger if @code{debugmode}\n"
"is @code{true}.  The user may enter commands to examine the call stack, set\n"
"breakpoints, step through Maxima code, and so on.  See @code{debugging} for a\n"
"list of debugger commands.\n"
msgstr ""

#: Debugging.texi:218
msgid ""
"Enabling @code{debugmode} will not catch Lisp errors.\n"
"@c DO WE WANT TO SAY MORE ABOUT DEBUGGING LISP ERRORS ???\n"
"@c I'M NOT CONVINCED WE WANT TO OPEN THAT CAN OF WORMS !!!\n"
msgstr ""

#: Debugging.texi:223
msgid ""
"@opencatbox\n"
"@category{Debugging} @category{Global flags}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

#: Debugging.texi:228
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{refcheck}\n"
"@defvr {Option variable} refcheck\n"
"Default value: @code{false}\n"
msgstr ""

#: Debugging.texi:232
msgid ""
"When @code{refcheck} is @code{true}, Maxima prints a message\n"
"each time a bound variable is used for the first time in a\n"
"computation.\n"
msgstr ""

#: Debugging.texi:237
msgid ""
"@opencatbox\n"
"@category{Evaluation} @category{Console interaction} @category{Global flags}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

#: Debugging.texi:242
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{setcheck}\n"
"@defvr {Option variable} setcheck\n"
"Default value: @code{false}\n"
msgstr ""

#: Debugging.texi:253
msgid ""
"If @code{setcheck} is set to a list of variables (which can\n"
"be subscripted), \n"
"Maxima prints a message whenever the variables, or\n"
"subscripted occurrences of them, are bound with the\n"
"ordinary assignment operator @code{:}, the @code{::} assignment\n"
"operator, or function argument binding,\n"
"but not the function assignment @code{:=} nor the macro assignment\n"
"@code{::=} operators.\n"
"The message comprises the name of the variable and the\n"
"value it is bound to.\n"
msgstr ""

#: Debugging.texi:256
msgid ""
"@code{setcheck} may be set to @code{all} or @code{true} thereby\n"
"including all variables.\n"
msgstr ""

#: Debugging.texi:259
msgid ""
"Each new assignment of @code{setcheck} establishes a new list of variables to\n"
"check, and any variables previously assigned to @code{setcheck} are forgotten.\n"
msgstr ""

#: Debugging.texi:263
msgid ""
"The names assigned to @code{setcheck} must be quoted if they would otherwise\n"
"evaluate to something other than themselves.\n"
"For example, if @code{x}, @code{y}, and @code{z} are already bound, then enter\n"
msgstr ""

#: Debugging.texi:267
msgid ""
"@example\n"
"setcheck: ['x, 'y, 'z]$\n"
"@end example\n"
msgstr ""

#: Debugging.texi:269
msgid ""
"to put them on the list of variables to check.\n"
msgstr ""

#: Debugging.texi:272
msgid ""
"No printout is generated when a\n"
"variable on the @code{setcheck} list is assigned to itself, e.g., @code{X: 'X}.\n"
msgstr ""

#: Debugging.texi:277
msgid ""
"@opencatbox\n"
"@category{Console interaction} @category{Global flags}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

#: Debugging.texi:282
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{setcheckbreak}\n"
"@defvr {Option variable} setcheckbreak\n"
"Default value: @code{false}\n"
msgstr ""

#: Debugging.texi:290
msgid ""
"When @code{setcheckbreak} is @code{true},\n"
"Maxima will present a break prompt \n"
"whenever a variable on the @code{setcheck} list is assigned a new value.\n"
"The break occurs before the assignment is carried out.\n"
"At this point, @code{setval} holds the value to which the variable is \n"
"about to be assigned.\n"
"Hence, one may assign a different value by assigning to @code{setval}.\n"
msgstr ""

#: Debugging.texi:292
msgid ""
"See also @mref{setcheck} and @mrefdot{setval}\n"
msgstr ""

#: Debugging.texi:297
msgid ""
"@opencatbox\n"
"@category{Console interaction} @category{Global flags}\n"
"@closecatbox\n"
"@end defvr\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Debugging.texi:301
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{setval}\n"
"@defvr {System variable} setval\n"
msgstr ""

#: Debugging.texi:305
msgid ""
"Holds the value to which a variable is about to be set when\n"
"a @mref{setcheckbreak} occurs.\n"
"Hence, one may assign a different value by assigning to @mref{setval}.\n"
msgstr ""

#: Debugging.texi:307
msgid ""
"See also @mref{setcheck} and @mrefdot{setcheckbreak}\n"
msgstr ""

#: Debugging.texi:312
msgid ""
"@opencatbox\n"
"@category{Console interaction} @category{Global variables}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

#: Debugging.texi:318
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{timer}\n"
"@deffn  {Function} timer (@var{f_1}, @dots{}, @var{f_n}) @\n"
"@fname{timer} (all) @\n"
"@fname{timer} ()\n"
msgstr ""

#: Debugging.texi:323
msgid ""
"Given functions @var{f_1}, @dots{}, @var{f_n}, @code{timer} puts each one on the\n"
"list of functions for which timing statistics are collected.\n"
"@code{timer(f)$ timer(g)$} puts @code{f} and then @code{g} onto the list;\n"
"the list accumulates from one call to the next.\n"
msgstr ""

#: Debugging.texi:326
msgid ""
"@code{timer(all)} puts all user-defined functions (as named by the global\n"
"variable @code{functions}) on the list of timed functions.\n"
msgstr ""

#: Debugging.texi:328
msgid ""
"With no arguments,  @code{timer} returns the list of timed functions.\n"
msgstr ""

#: Debugging.texi:335
msgid ""
"Maxima records how much time is spent executing each function\n"
"on the list of timed functions.\n"
"@code{timer_info} returns the timing statistics, including the\n"
"average time elapsed per function call, the number of calls, and the\n"
"total time elapsed.\n"
"@code{untimer} removes functions from the list of timed functions.\n"
msgstr ""

#: Debugging.texi:338
msgid ""
"@code{timer} quotes its arguments.\n"
"@code{f(x) := x^2$ g:f$ timer(g)$} does not put @code{f} on the timer list.\n"
msgstr ""

#: Debugging.texi:341
msgid ""
"If @code{trace(f)} is in effect, then @code{timer(f)} has no effect;\n"
"@code{trace} and @code{timer} cannot both be in effect at the same time.\n"
msgstr ""

#: Debugging.texi:343
msgid ""
"See also @mrefdot{timer_devalue}\n"
msgstr ""

#: Debugging.texi:348
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

#: Debugging.texi:353
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{untimer}\n"
"@deffn  {Function} untimer (@var{f_1}, @dots{}, @var{f_n}) @\n"
"@fname{untimer} ()\n"
msgstr ""

#: Debugging.texi:356
msgid ""
"Given functions @var{f_1}, @dots{}, @var{f_n},\n"
"@code{untimer} removes each function from the timer list.\n"
msgstr ""

#: Debugging.texi:359
msgid ""
"With no arguments, @code{untimer} removes all functions currently on the timer\n"
"list.\n"
msgstr ""

#: Debugging.texi:366
msgid ""
"After @code{untimer (f)} is executed, @code{timer_info (f)} still returns\n"
"previously collected timing statistics,\n"
"although @code{timer_info()} (with no arguments) does not\n"
"return information about any function not currently on the timer list.\n"
"@code{timer (f)} resets all timing statistics to zero\n"
"and puts @code{f} on the timer list again.\n"
msgstr ""

#: Debugging.texi:371
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Debugging.texi:376
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{timer_devalue}\n"
"@defvr {Option variable} timer_devalue\n"
"Default value: @code{false}\n"
msgstr ""

#: Debugging.texi:382
msgid ""
"When @code{timer_devalue} is @code{true}, Maxima subtracts from each timed\n"
"function the time spent in other timed functions.  Otherwise, the time reported\n"
"for each function includes the time spent in other functions.\n"
"Note that time spent in untimed functions is not subtracted from the\n"
"total time.\n"
msgstr ""

#: Debugging.texi:384
msgid ""
"See also @mref{timer} and @mrefdot{timer_info}\n"
msgstr ""

#: Debugging.texi:389
msgid ""
"@opencatbox\n"
"@category{Debugging} @category{Global flags}\n"
"@closecatbox\n"
"@end defvr\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Debugging.texi:394
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{timer_info}\n"
"@deffn {Function} timer_info (@var{f_1}, ..., @var{f_n}) @\n"
"@fname{timer_info} ()\n"
msgstr ""

#: Debugging.texi:399
msgid ""
"Given functions @var{f_1}, ..., @var{f_n}, @code{timer_info} returns a matrix\n"
"containing timing information for each function.\n"
"With no arguments, @code{timer_info} returns timing information for\n"
"all functions currently on the timer list.\n"
msgstr ""

#: Debugging.texi:404
msgid ""
"The matrix returned by @code{timer_info} contains the function name,\n"
"time per function call, number of function calls, total time,\n"
"and @code{gctime}, which meant \"garbage collection time\" in the original Macsyma\n"
"but is now always zero.\n"
msgstr ""

#: Debugging.texi:407
msgid ""
"The data from which @code{timer_info} constructs its return value\n"
"can also be obtained by the @code{get} function:\n"
msgstr ""

#: Debugging.texi:411
msgid ""
"@example\n"
"get(f, 'calls);  get(f, 'runtime);  get(f, 'gctime);\n"
"@end example\n"
msgstr ""

#: Debugging.texi:413
msgid ""
"See also @mrefdot{timer}\n"
msgstr ""

#: Debugging.texi:418
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: Debugging.texi:424
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{trace}\n"
"@deffn  {Function} trace (@var{f_1}, @dots{}, @var{f_n}) @\n"
"@fname{trace} (all) @\n"
"@fname{trace} ()\n"
msgstr ""

#: Debugging.texi:429
msgid ""
"Given functions @var{f_1}, @dots{}, @var{f_n}, @code{trace} instructs Maxima to\n"
"print out debugging information whenever those functions are called.\n"
"@code{trace(f)$ trace(g)$} puts @code{f} and then @code{g} onto the list of\n"
"functions to be traced; the list accumulates from one call to the next.\n"
msgstr ""

#: Debugging.texi:432
msgid ""
"@code{trace(all)} puts all user-defined functions (as named by the global\n"
"variable @code{functions}) on the list of functions to be traced.\n"
msgstr ""

#: Debugging.texi:435
msgid ""
"With no arguments,\n"
"@code{trace} returns a list of all the functions currently being traced.\n"
msgstr ""

#: Debugging.texi:438
msgid ""
"The @code{untrace} function disables tracing.\n"
"See also @mrefdot{trace_options}\n"
msgstr ""

#: Debugging.texi:441
msgid ""
"@code{trace} quotes its arguments.  Thus,\n"
"@code{f(x) := x^2$ g:f$ trace(g)$} does not put @code{f} on the trace list.\n"
msgstr ""

#: Debugging.texi:445
msgid ""
"When a function is redefined, it is removed from the timer list.\n"
"Thus after @code{timer(f)$ f(x) := x^2$},\n"
"function @code{f} is no longer on the timer list.\n"
msgstr ""

#: Debugging.texi:448
msgid ""
"If @code{timer (f)} is in effect, then @code{trace (f)} has no effect;\n"
"@code{trace} and @code{timer} can't both be in effect for the same function.\n"
msgstr ""

#: Debugging.texi:453
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 3
msgstr ""

#: Debugging.texi:458
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{trace_options}\n"
"@deffn  {Function} trace_options (@var{f}, @var{option_1}, @dots{}, @var{option_n}) @\n"
"@fname{trace_options} (@var{f})\n"
msgstr ""

#: Debugging.texi:463
msgid ""
"Sets the trace options for function @var{f}.\n"
"Any previous options are superseded.\n"
"@code{trace_options (@var{f}, ...)} has no effect unless @code{trace (@var{f})}\n"
"is also called (either before or after @code{trace_options}).\n"
msgstr ""

#: Debugging.texi:465
msgid ""
"@code{trace_options (@var{f})} resets all options to their default values.\n"
msgstr ""

#: Debugging.texi:467
msgid ""
"The option keywords are:\n"
msgstr ""

#: Debugging.texi:487
msgid ""
"@itemize @bullet\n"
"@item\n"
"@code{noprint}\n"
"Do not print a message at function entry and exit.\n"
"@item\n"
"@code{break}\n"
"Put a breakpoint before the function is entered,\n"
"and after the function is exited.  See @code{break}.\n"
"@item\n"
"@code{lisp_print}\n"
"Display arguments and return values as Lisp objects.\n"
"@item\n"
"@code{info}\n"
"Print @code{-> true} at function entry and exit.\n"
"@item\n"
"@code{errorcatch}\n"
"Catch errors, giving the option to signal an error,\n"
"retry the function call, or specify a return value.\n"
"@end itemize\n"
msgstr ""

#: Debugging.texi:494
msgid ""
"Trace options are specified in two forms.  The presence of the option \n"
"keyword alone puts the option into effect unconditionally.\n"
"(Note that option @var{foo} is not put into effect by specifying \n"
"@code{@var{foo}: true} or a similar form; note also that keywords need not\n"
"be quoted.) Specifying the option keyword with a predicate\n"
"function makes the option conditional on the predicate.\n"
msgstr ""

#: Debugging.texi:500
msgid ""
"The argument list to the predicate function is always \n"
"@code{[level, direction, function, item]} where @code{level} is the recursion\n"
"level for the function,  @code{direction} is either @code{enter} or @code{exit},\n"
"@code{function} is the name of the function, and @code{item} is the argument\n"
"list (on entering) or the return value (on exiting).\n"
msgstr ""

#: Debugging.texi:502
msgid ""
"Here is an example of unconditional trace options:\n"
msgstr ""

#: Debugging.texi:505
msgid ""
"@example\n"
"(%i1) ff(n) := if equal(n, 0) then 1 else n * ff(n - 1)$\n"
msgstr ""

#: Debugging.texi:507
msgid ""
"(%i2) trace (ff)$\n"
msgstr ""

#: Debugging.texi:509
msgid ""
"(%i3) trace_options (ff, lisp_print, break)$\n"
msgstr ""

#: Debugging.texi:512
msgid ""
"(%i4) ff(3);\n"
"@end example\n"
msgstr ""

#: Debugging.texi:515
msgid ""
"Here is the same function, with the @code{break} option conditional\n"
"on a predicate:\n"
msgstr ""

#: Debugging.texi:518
msgid ""
"@example\n"
"(%i5) trace_options (ff, break(pp))$\n"
msgstr ""

#: Debugging.texi:521
msgid ""
"(%i6) pp (level, direction, function, item) := block (print (item),\n"
"    return (function = 'ff and level = 3 and direction = exit))$\n"
msgstr ""

#: Debugging.texi:524
msgid ""
"(%i7) ff(6);\n"
"@end example\n"
msgstr ""

#: Debugging.texi:529
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 4
msgstr ""

#: Debugging.texi:535
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{untrace}\n"
"@deffn {Function} untrace @\n"
"@fname{untrace} (@var{f_1}, @dots{}, @var{f_n}) @\n"
"@fname{untrace} ()\n"
msgstr ""

#: Debugging.texi:539
msgid ""
"Given functions @var{f_1}, @dots{}, @var{f_n},\n"
"@code{untrace} disables tracing enabled by the @code{trace} function.\n"
"With no arguments, @code{untrace} disables tracing for all functions.\n"
msgstr ""

#: Debugging.texi:542
msgid ""
"@code{untrace} returns a list of the functions for which \n"
"it disabled tracing.\n"
msgstr ""

#: Debugging.texi:547
msgid ""
"@opencatbox\n"
"@category{Debugging}\n"
"@closecatbox\n"
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 5
msgstr ""

