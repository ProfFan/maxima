# SOME DESCRIPTIVE TITLE.">
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-06 22:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
msgstr ""
 
# defstruct.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@page\n"
"@node Structures, , Arrays, Data Types and Structures\n"
"@section Structures\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# defstruct.texi
msgid ""
"@menu\n"
"* Introduction to Structures::       \n"
"* Functions and Variables for Structures::       \n"
"@end menu\n"
msgstr ""

# defstruct.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Introduction to Structures, Functions and Variables for Structures, Structures, Structures\n"
"@subsection Introduction to Structures\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# defstruct.texi
msgid ""
"Maxima provides a simple data aggregate called a structure.\n"
"A structure is an expression in which arguments are identified by name (the field name)\n"
"and the expression as a whole is identified by its operator (the structure name).\n"
"A field value can be any expression.\n"
msgstr ""

# defstruct.texi
msgid ""
"A structure is defined by the @code{defstruct} function;\n"
"the global variable @code{structures} is the list of user-defined structures.\n"
"The function @code{new} creates instances of structures.\n"
"The @code{@@} operator refers to fields.\n"
"@code{kill(@var{S})} removes the structure definition @var{S},\n"
"and @code{kill(@var{x}@@ @var{a})} unbinds the field @var{a} of the structure instance @var{x}.\n"
msgstr ""

# defstruct.texi
msgid ""
"In the pretty-printing console display (with @code{display2d} equal to @code{true}),\n"
"structure instances are displayed with the value of each field\n"
"represented as an equation, with the field name on the left-hand side\n"
"and the value on the right-hand side.\n"
"(The equation is only a display construct; only the value is actually stored.)\n"
"In 1-dimensional display (via @code{grind} or with @code{display2d} equal to @code{false}),\n"
"structure instances are displayed without the field names.\n"
msgstr ""

# defstruct.texi
msgid ""
"There is no way to use a field name as a function name,\n"
"although a field value can be a lambda expression.\n"
"Nor can the values of fields be restricted to certain types; any field can be assigned any kind of expression.\n"
"There is no way to make some fields accessible or inaccessible in different contexts;\n"
"all fields are always visible.\n"
msgstr ""

# defstruct.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Functions and Variables for Structures,  , Introduction to Structures, Structures\n"
"@subsection Functions and Variables for Structures\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

# defstruct.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{structures}\n"
"@defvr {Global variable} structures\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{structures} is the list of user-defined structures defined by @code{defstruct}.\n"
msgstr ""

# defstruct.texi
msgid ""
"@opencatbox\n"
"@category{Structures} @category{Global variables}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# defstruct.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{defstruct}\n"
"@deffn  {Function} defstruct @\n"
"@fname{defstruct} (@var{S}(@var{a_1}, @dots{}, @var{a_n})) @\n"
"@fname{defstruct} (@var{S}(@var{a_1} = @var{v_1}, @dots{}, @var{a_n} = @var{v_n}))\n"
msgstr ""

# defstruct.texi
msgid ""
"Define a structure, which is a list of named fields @var{a_1}, @dots{},\n"
"@var{a_n} associated with a symbol @var{S}.\n"
"An instance of a structure is just an expression which has operator @var{S}\n"
"and exactly @code{n} arguments.\n"
"@code{new(@var{S})} creates a new instance of structure @var{S}.\n"
msgstr ""

# defstruct.texi
msgid ""
"An argument which is just a symbol @var{a} specifies the name of a field.\n"
"An argument which is an equation @code{@var{a} = @var{v}} specifies the field name @var{a}\n"
"and its default value @var{v}.\n"
"The default value can be any expression.\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{defstruct} puts @var{S} on the list of user-defined structures, @code{structures}.\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{kill(@var{S})} removes @var{S} from the list of user-defined structures,\n"
"and removes the structure definition.\n"
msgstr ""

# defstruct.texi
msgid ""
"Examples:\n"
msgstr ""

# defstruct.texi
msgid ""
"@c ===beg===\n"
"@c defstruct (foo (a, b, c));\n"
"@c structures;\n"
"@c new (foo);\n"
"@c defstruct (bar (v, w, x = 123, y = %pi));\n"
"@c structures;\n"
"@c new (bar);\n"
"@c kill (foo);\n"
"@c structures;\n"
"@c ===end===\n"
"@example\n"
"(%i1) defstruct (foo (a, b, c));\n"
"(%o1)                    [foo(a, b, c)]\n"
"(%i2) structures;\n"
"(%o2)                    [foo(a, b, c)]\n"
"(%i3) new (foo);\n"
"(%o3)                     foo(a, b, c)\n"
"(%i4) defstruct (bar (v, w, x = 123, y = %pi));\n"
"(%o4)             [bar(v, w, x = 123, y = %pi)]\n"
"(%i5) structures;\n"
"(%o5)      [foo(a, b, c), bar(v, w, x = 123, y = %pi)]\n"
"(%i6) new (bar);\n"
"(%o6)              bar(v, w, x = 123, y = %pi)\n"
"(%i7) kill (foo);\n"
"(%o7)                         done\n"
"(%i8) structures;\n"
"(%o8)             [bar(v, w, x = 123, y = %pi)]\n"
"@end example\n"
msgstr ""

# defstruct.texi
msgid ""
"@opencatbox\n"
"@category{Structures}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# defstruct.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{new}\n"
"@deffn {Function} new @\n"
"@fname{new} (@var{S}) @\n"
"@fname{new} (@var{S} (@var{v_1}, @dots{}, @var{v_n}))\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{new} creates new instances of structures.\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{new(@var{S})} creates a new instance of structure @var{S}\n"
"in which each field is assigned its default value, if any,\n"
"or no value at all if no default was specified in the structure definition.\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{new(@var{S}(@var{v_1}, ..., @var{v_n}))} creates a new instance of @var{S}\n"
"in which fields are assigned the values @var{v_1}, @dots{}, @var{v_n}.\n"
msgstr ""

# defstruct.texi
msgid ""
"Examples:\n"
msgstr ""

# defstruct.texi
msgid ""
"@c ===beg===\n"
"@c defstruct (foo (w, x = %e, y = 42, z));\n"
"@c new (foo);\n"
"@c new (foo (1, 2, 4, 8));\n"
"@c ===end===\n"
"@example\n"
"(%i1) defstruct (foo (w, x = %e, y = 42, z));\n"
"(%o1)              [foo(w, x = %e, y = 42, z)]\n"
"(%i2) new (foo);\n"
"(%o2)               foo(w, x = %e, y = 42, z)\n"
"(%i3) new (foo (1, 2, 4, 8));\n"
"(%o3)            foo(w = 1, x = 2, y = 4, z = 8)\n"
"@end example\n"
msgstr ""

# defstruct.texi
msgid ""
"@opencatbox\n"
"@category{Structures}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# defstruct.texi
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@deffn {Operator} @@\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{@@} is the structure field access operator.\n"
"The expression @code{@var{x}@@ @var{a}} refers to the value of field @var{a} of the structure instance @var{x}.\n"
"The field name is not evaluated.\n"
msgstr ""

# defstruct.texi
msgid ""
"If the field @var{a} in @var{x} has not been assigned a value,\n"
"@code{@var{x}@@ @var{a}} evaluates to itself.\n"
msgstr ""

# defstruct.texi
msgid ""
"@code{kill(@var{x}@@ @var{a})} removes the value of field @var{a} in @var{x}.\n"
msgstr ""

# defstruct.texi
msgid ""
"Examples:\n"
msgstr ""

# defstruct.texi
msgid ""
"@c ===beg===\n"
"@c defstruct (foo (x, y, z));\n"
"@c u : new (foo (123, a - b, %pi));\n"
"@c u@z;\n"
"@c u@z : %e;\n"
"@c u;\n"
"@c kill (u@z);\n"
"@c u;\n"
"@c u@z;\n"
"@c ===end===\n"
"@example\n"
"(%i1) defstruct (foo (x, y, z));\n"
"(%o1)                    [foo(x, y, z)]\n"
"(%i2) u : new (foo (123, a - b, %pi));\n"
"(%o2)           foo(x = 123, y = a - b, z = %pi)\n"
"(%i3) u@@z;\n"
"(%o3)                          %pi\n"
"(%i4) u@@z : %e;\n"
"(%o4)                          %e\n"
"(%i5) u;\n"
"(%o5)            foo(x = 123, y = a - b, z = %e)\n"
"(%i6) kill (u@@z);\n"
"(%o6)                         done\n"
"(%i7) u;\n"
"(%o7)              foo(x = 123, y = a - b, z)\n"
"(%i8) u@@z;\n"
"(%o8)                          u@@z\n"
"@end example\n"
msgstr ""

# defstruct.texi
msgid ""
"The field name is not evaluated.\n"
msgstr ""

# defstruct.texi
msgid ""
"@c ===beg===\n"
"@c defstruct (bar (g, h));\n"
"@c x : new (bar);\n"
"@c x@h : 42;\n"
"@c h : 123;\n"
"@c x@h;\n"
"@c x@h : 19;\n"
"@c x;\n"
"@c h;\n"
"@c ===end===\n"
"@example\n"
"(%i1) defstruct (bar (g, h));\n"
"(%o1)                      [bar(g, h)]\n"
"(%i2) x : new (bar);\n"
"(%o2)                       bar(g, h)\n"
"(%i3) x@@h : 42;\n"
"(%o3)                          42\n"
"(%i4) h : 123;\n"
"(%o4)                          123\n"
"(%i5) x@@h;\n"
"(%o5)                          42\n"
"(%i6) x@@h : 19;\n"
"(%o6)                          19\n"
"(%i7) x;\n"
"(%o7)                    bar(g, h = 19)\n"
"(%i8) h;\n"
"(%o8)                          123\n"
"@end example\n"
msgstr ""

# defstruct.texi
msgid ""
"@opencatbox\n"
"@category{Structures} @category{Operators}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# defstruct.texi
msgid ""
msgstr ""
