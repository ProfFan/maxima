# This file contains all translatable strings from a .texi file.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL>, YEAR.
#
#, fuzzy
msgid ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-06 22:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL>\n"
"Language-Team: LANGUAGE <LL.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
msgstr ""

#: Evaluation.texi:4
msgid ""
"@menu\n"
"* Functions and Variables for Evaluation::\n"
"@end menu\n"
msgstr ""

#: Evaluation.texi:9
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@node Functions and Variables for Evaluation,  , Evaluation, Evaluation\n"
"@section Functions and Variables for Evaluation\n"
"@c -----------------------------------------------------------------------------\n"
msgstr ""

#: Evaluation.texi:12
msgid ""
"@c NEEDS EXAMPLES\n"
"@c THIS ITEM IS VERY IMPORTANT !!\n"
msgstr ""

#: Evaluation.texi:19
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{quote}\n"
"@deffn {Operator} '\n"
"@ifinfo\n"
"@fnindex Quote operator\n"
"@end ifinfo\n"
msgstr ""

#: Evaluation.texi:21
msgid ""
"The single quote operator @code{'} prevents evaluation.\n"
msgstr ""

#: Evaluation.texi:23
msgid ""
"Applied to a symbol, the single quote prevents evaluation of the symbol.\n"
msgstr ""

#: Evaluation.texi:27
msgid ""
"Applied to a function call, the single quote prevents evaluation of the function\n"
"call, although the arguments of the function are still evaluated (if evaluation\n"
"is not otherwise prevented).  The result is the noun form of the function call.\n"
msgstr ""

#: Evaluation.texi:34
msgid ""
"Applied to a parenthesized expression, the single quote prevents evaluation of\n"
"all symbols and function calls in the expression.\n"
"@c DUNNO IF THESE EXAMPLES ARE STILL NEEDED -- COVERED BY ITEMS UNDER \"Examples\"\n"
"E.g., @code{'(f(x))} means do not evaluate the expression @code{f(x)}.\n"
"@code{'f(x)} (with the single quote applied to @code{f} instead of @code{f(x)})\n"
"means return the noun form of @code{f} applied to @code{[x]}.\n"
msgstr ""

#: Evaluation.texi:36
msgid ""
"The single quote does not prevent simplification.\n"
msgstr ""

#: Evaluation.texi:39
msgid ""
"When the global flag @mref{noundisp} is @code{true}, nouns display with a single\n"
"quote.  This switch is always @code{true} when displaying function definitions.\n"
msgstr ""

#: Evaluation.texi:41
msgid ""
"See also the quote-quote operator @mxref{quote-quote, ''} and @mrefdot{nouns}\n"
msgstr ""

#: Evaluation.texi:43
msgid ""
"Examples:\n"
msgstr ""

#: Evaluation.texi:46
msgid ""
"Applied to a symbol,\n"
"the single quote prevents evaluation of the symbol.\n"
msgstr ""

#: Evaluation.texi:64
msgid ""
"@c ===beg===\n"
"@c aa: 1024;\n"
"@c aa^2;\n"
"@c 'aa^2;\n"
"@c ''%;\n"
"@c ===end===\n"
"@example\n"
"(%i1) aa: 1024;\n"
"(%o1)                         1024\n"
"(%i2) aa^2;\n"
"(%o2)                        1048576\n"
"(%i3) 'aa^2;\n"
"                                 2\n"
"(%o3)                          aa\n"
"(%i4) ''%;\n"
"(%o4)                        1048576\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:67
msgid ""
"Applied to a function call, the single quote prevents evaluation of the function\n"
"call.  The result is the noun form of the function call.\n"
msgstr ""

#: Evaluation.texi:99
msgid ""
"@c ===beg===\n"
"@c x0: 5;\n"
"@c x1: 7;\n"
"@c integrate (x^2, x, x0, x1);\n"
"@c 'integrate (x^2, x, x0, x1);\n"
"@c %, nouns;\n"
"@c ===end===\n"
"@example\n"
"(%i1) x0: 5;\n"
"(%o1)                           5\n"
"(%i2) x1: 7;\n"
"(%o2)                           7\n"
"(%i3) integrate (x^2, x, x0, x1);\n"
"                               218\n"
"(%o3)                          ---\n"
"                                3\n"
"(%i4) 'integrate (x^2, x, x0, x1);\n"
"@group\n"
"                             7\n"
"                            /\n"
"                            [   2\n"
"(%o4)                       I  x  dx\n"
"                            ]\n"
"                            /\n"
"                             5\n"
"@end group\n"
"(%i5) %, nouns;\n"
"                               218\n"
"(%o5)                          ---\n"
"                                3\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:102
msgid ""
"Applied to a parenthesized expression, the single quote prevents evaluation of\n"
"all symbols and function calls in the expression.\n"
msgstr ""

#: Evaluation.texi:122
msgid ""
"@c ===beg===\n"
"@c aa: 1024;\n"
"@c bb: 19;\n"
"@c sqrt(aa) + bb;\n"
"@c '(sqrt(aa) + bb);\n"
"@c ''%;\n"
"@c ===end===\n"
"@example\n"
"(%i1) aa: 1024;\n"
"(%o1)                         1024\n"
"(%i2) bb: 19;\n"
"(%o2)                          19\n"
"(%i3) sqrt(aa) + bb;\n"
"(%o3)                          51\n"
"(%i4) '(sqrt(aa) + bb);\n"
"(%o4)                     bb + sqrt(aa)\n"
"(%i5) ''%;\n"
"(%o5)                          51\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:124
msgid ""
"The single quote does not prevent simplification.\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Evaluation.texi:135
msgid ""
"@c ===beg===\n"
"@c sin (17 * %pi) + cos (17 * %pi);\n"
"@c '(sin (17 * %pi) + cos (17 * %pi));\n"
"@c ===end===\n"
"@example\n"
"(%i1) sin (17 * %pi) + cos (17 * %pi);\n"
"(%o1)                          - 1\n"
"(%i2) '(sin (17 * %pi) + cos (17 * %pi));\n"
"(%o2)                          - 1\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:138
msgid ""
"Maxima considers floating point operations by its in-built mathematical\n"
"functions to be a simplification.\n"
msgstr ""

#: Evaluation.texi:149
msgid ""
"@c ===beg===\n"
"@c sin(1.0);\n"
"@c '(sin(1.0));\n"
"@c ===end===\n"
"@example\n"
"(%i1) sin(1.0);\n"
"(%o1)                          .8414709848078965\n"
"(%i2) '(sin(1.0));\n"
"(%o2)                          .8414709848078965\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:152
msgid ""
"When the global flag @mref{noundisp} is @code{true}, nouns display with a single\n"
"quote.\n"
msgstr ""

#: Evaluation.texi:197
msgid ""
"@c ===beg===\n"
"@c x:%pi;\n"
"@c bfloat(x);\n"
"@c sin(x);\n"
"@c noundisp;\n"
"@c 'bfloat(x);\n"
"@c bfloat('x);\n"
"@c sin(x);\n"
"@c sin('x);\n"
"@c noundisp : not noundisp;\n"
"@c 'bfloat(x);\n"
"@c bfloat('x);\n"
"@c sin(x);\n"
"@c sin('x);\n"
"@c ===end===\n"
"@example\n"
"(%i1) x:%pi;\n"
"(%o1)                                 %pi\n"
"(%i2) bfloat(x);\n"
"(%o2)                         3.141592653589793b0\n"
"(%i3) sin(x);\n"
"(%o3)                                  0\n"
"(%i4) noundisp;\n"
"(%o4)                                false\n"
"(%i5) 'bfloat(x);\n"
"(%o5)                             bfloat(%pi)\n"
"(%i6) bfloat('x);\n"
"(%o6)                                  x\n"
"(%i7) 'sin(x);\n"
"(%o7)                                  0\n"
"(%i8) sin('x);\n"
"(%o8)                               sin(x)\n"
"(%i9) noundisp : not noundisp;\n"
"(%o9)                                true\n"
"(%i10) 'bfloat(x);\n"
"(%o10)                           'bfloat(%pi)\n"
"(%i11) bfloat('x);\n"
"(%o11)                                 x\n"
"(%i12) 'sin(x);\n"
"(%o12)                                 0\n"
"(%i13) sin('x);\n"
"(%o13)                              sin(x)\n"
"(%i14)\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:202
msgid ""
"@opencatbox\n"
"@category{Evaluation} @category{Operators}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

#: Evaluation.texi:209
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{quote-quote}\n"
"@deffn {Operator} ''\n"
"@ifinfo\n"
"@fnindex Quote-quote operator\n"
"@end ifinfo\n"
msgstr ""

#: Evaluation.texi:212
msgid ""
"The quote-quote operator @code{'@w{}'} (two single quote marks) modifies\n"
"evaluation in input expressions.\n"
msgstr ""

#: Evaluation.texi:215
msgid ""
"Applied to a general expression @var{expr}, quote-quote causes the value of\n"
"@var{expr} to be substituted for @var{expr} in the input expression.\n"
msgstr ""

#: Evaluation.texi:218
msgid ""
"Applied to the operator of an expression, quote-quote changes the operator from\n"
"a noun to a verb (if it is not already a verb).\n"
msgstr ""

#: Evaluation.texi:225
msgid ""
"The quote-quote operator is applied by the input parser; it is not stored as\n"
"part of a parsed input expression.  The quote-quote operator is always applied\n"
"as soon as it is parsed, and cannot be quoted.  Thus quote-quote causes\n"
"evaluation when evaluation is otherwise suppressed, such as in function\n"
"definitions, lambda expressions, and expressions quoted by single quote\n"
"@code{'}.\n"
msgstr ""

#: Evaluation.texi:227
msgid ""
"Quote-quote is recognized by @mref{batch} and @mrefdot{load}\n"
msgstr ""

#: Evaluation.texi:229
msgid ""
"See also @mrefcomma{ev} the single-quote operator @mxref{quote, '} and @mrefdot{nouns}\n"
msgstr ""

#: Evaluation.texi:231
msgid ""
"Examples:\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Evaluation.texi:234
msgid ""
"Applied to a general expression @var{expr}, quote-quote causes the value of\n"
"@var{expr} to be substituted for @var{expr} in the input expression.\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Evaluation.texi:284
msgid ""
"@c ===beg===\n"
"@c expand ((a + b)^3);\n"
"@c [_, ''_];\n"
"@c [%i1, ''%i1];\n"
"@c [aa : cc, bb : dd, cc : 17, dd : 29];\n"
"@c foo_1 (x) := aa - bb * x;\n"
"@c foo_1 (10);\n"
"@c ''%;\n"
"@c ''(foo_1 (10));\n"
"@c foo_2 (x) := ''aa - ''bb * x;\n"
"@c foo_2 (10);\n"
"@c [x0 : x1, x1 : x2, x2 : x3];\n"
"@c x0;\n"
"@c ''x0;\n"
"@c '' ''x0;\n"
"@c ===end===\n"
"@example\n"
"(%i1) expand ((a + b)^3);\n"
"                     3        2      2      3\n"
"(%o1)               b  + 3 a b  + 3 a  b + a\n"
"(%i2) [_, ''_];\n"
"                         3    3        2      2      3\n"
"(%o2)     [expand((b + a) ), b  + 3 a b  + 3 a  b + a ]\n"
"(%i3) [%i1, ''%i1];\n"
"                         3    3        2      2      3\n"
"(%o3)     [expand((b + a) ), b  + 3 a b  + 3 a  b + a ]\n"
"(%i4) [aa : cc, bb : dd, cc : 17, dd : 29];\n"
"(%o4)                   [cc, dd, 17, 29]\n"
"(%i5) foo_1 (x) := aa - bb * x;\n"
"(%o5)                 foo_1(x) := aa - bb x\n"
"(%i6) foo_1 (10);\n"
"(%o6)                      cc - 10 dd\n"
"(%i7) ''%;\n"
"(%o7)                         - 273\n"
"(%i8) ''(foo_1 (10));\n"
"(%o8)                         - 273\n"
"(%i9) foo_2 (x) := ''aa - ''bb * x;\n"
"(%o9)                 foo_2(x) := cc - dd x\n"
"(%i10) foo_2 (10);\n"
"(%o10)                        - 273\n"
"(%i11) [x0 : x1, x1 : x2, x2 : x3];\n"
"(%o11)                    [x1, x2, x3]\n"
"(%i12) x0;\n"
"(%o12)                         x1\n"
"(%i13) ''x0;\n"
"(%o13)                         x2\n"
"(%i14) '' ''x0;\n"
"(%o14)                         x3\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:287
msgid ""
"Applied to the operator of an expression, quote-quote changes the operator from\n"
"a noun to a verb (if it is not already a verb).\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Evaluation.texi:304
msgid ""
"@c ===beg==\n"
"@c declare (foo, noun);\n"
"@c foo (x) := x - 1729;\n"
"@c foo (100);\n"
"@c ''foo (100);\n"
"@c ===end==\n"
"@example\n"
"(%i1) declare (foo, noun);\n"
"(%o1)                         done\n"
"(%i2) foo (x) := x - 1729;\n"
"(%o2)                 ''foo(x) := x - 1729\n"
"(%i3) foo (100);\n"
"(%o3)                       foo(100)\n"
"(%i4) ''foo (100);\n"
"(%o4)                        - 1629\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:307
msgid ""
"The quote-quote operator is applied by the input parser; it is not stored as\n"
"part of a parsed input expression.\n"
msgstr ""

#: Evaluation.texi:322
msgid ""
"@c ===beg===\n"
"@c [aa : bb, cc : dd, bb : 1234, dd : 5678];\n"
"@c aa + cc;\n"
"@c display (_, op (_), args (_));\n"
"@c ''(aa + cc);\n"
"@c display (_, op (_), args (_));\n"
"@c ===end===\n"
"@example\n"
"(%i1) [aa : bb, cc : dd, bb : 1234, dd : 5678];\n"
"(%o1)                 [bb, dd, 1234, 5678]\n"
"(%i2) aa + cc;\n"
"(%o2)                        dd + bb\n"
"(%i3) display (_, op (_), args (_));\n"
"                           _ = cc + aa\n"
msgstr ""

#: Evaluation.texi:324
msgid ""
"                         op(cc + aa) = +\n"
msgstr ""

#: Evaluation.texi:326
msgid ""
"                    args(cc + aa) = [cc, aa]\n"
msgstr ""

#: Evaluation.texi:332
msgid ""
"(%o3)                         done\n"
"(%i4) ''(aa + cc);\n"
"(%o4)                         6912\n"
"(%i5) display (_, op (_), args (_));\n"
"                           _ = dd + bb\n"
msgstr ""

#: Evaluation.texi:334
msgid ""
"                         op(dd + bb) = +\n"
msgstr ""

#: Evaluation.texi:336
msgid ""
"                    args(dd + bb) = [dd, bb]\n"
msgstr ""

#: Evaluation.texi:339
msgid ""
"(%o5)                         done\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:343
msgid ""
"Quote-quote causes evaluation when evaluation is otherwise suppressed, such as\n"
"in function definitions, lambda expressions, and expressions quoted by single\n"
"quote @code{'}.\n"
msgstr ""

#: Evaluation.texi:364
msgid ""
"@c ===beg===\n"
"@c foo_1a (x) := ''(integrate (log (x), x));\n"
"@c foo_1b (x) := integrate (log (x), x);\n"
"@c dispfun (foo_1a, foo_1b);\n"
"@c integrate (log (x), x);\n"
"@c foo_2a (x) := ''%;\n"
"@c foo_2b (x) := %;\n"
"@c dispfun (foo_2a, foo_2b);\n"
"@c F : lambda ([u], diff (sin (u), u));\n"
"@c G : lambda ([u], ''(diff (sin (u), u)));\n"
"@c '(sum (a[k], k, 1, 3) + sum (b[k], k, 1, 3));\n"
"@c '(''(sum (a[k], k, 1, 3)) + ''(sum (b[k], k, 1, 3)));\n"
"@c ===end===\n"
"@example\n"
"(%i1) foo_1a (x) := ''(integrate (log (x), x));\n"
"(%o1)               foo_1a(x) := x log(x) - x\n"
"(%i2) foo_1b (x) := integrate (log (x), x);\n"
"(%o2)           foo_1b(x) := integrate(log(x), x)\n"
"(%i3) dispfun (foo_1a, foo_1b);\n"
"(%t3)               foo_1a(x) := x log(x) - x\n"
msgstr ""

#: Evaluation.texi:366
msgid ""
"(%t4)           foo_1b(x) := integrate(log(x), x)\n"
msgstr ""

#: Evaluation.texi:376
msgid ""
"(%o4)                      [%t3, %t4]\n"
"(%i5) integrate (log (x), x);\n"
"(%o5)                     x log(x) - x\n"
"(%i6) foo_2a (x) := ''%;\n"
"(%o6)               foo_2a(x) := x log(x) - x\n"
"(%i7) foo_2b (x) := %;\n"
"(%o7)                    foo_2b(x) := %\n"
"(%i8) dispfun (foo_2a, foo_2b);\n"
"(%t8)               foo_2a(x) := x log(x) - x\n"
msgstr ""

#: Evaluation.texi:378
msgid ""
"(%t9)                    foo_2b(x) := %\n"
msgstr ""

#: Evaluation.texi:391
msgid ""
"(%o9)                      [%t7, %t8]\n"
"(%i10) F : lambda ([u], diff (sin (u), u));\n"
"(%o10)             lambda([u], diff(sin(u), u))\n"
"(%i11) G : lambda ([u], ''(diff (sin (u), u)));\n"
"(%o11)                  lambda([u], cos(u))\n"
"(%i12) '(sum (a[k], k, 1, 3) + sum (b[k], k, 1, 3));\n"
"(%o12)         sum(b , k, 1, 3) + sum(a , k, 1, 3)\n"
"                    k                  k\n"
"(%i13) '(''(sum (a[k], k, 1, 3)) + ''(sum (b[k], k, 1, 3)));\n"
"(%o13)             b  + a  + b  + a  + b  + a\n"
"                    3    3    2    2    1    1\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:396
msgid ""
"@opencatbox\n"
"@category{Evaluation} @category{Operators}\n"
"@closecatbox\n"
"@end deffn\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Evaluation.texi:399
msgid ""
"@c NEEDS CLARIFICATION\n"
"@c VERY IMPORTANT !!\n"
msgstr ""

#: Evaluation.texi:403
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{ev}\n"
"@deffn {Function} ev (@var{expr}, @var{arg_1}, @dots{}, @var{arg_n})\n"
msgstr ""

#: Evaluation.texi:408
msgid ""
"Evaluates the expression @var{expr} in the environment specified by the\n"
"arguments @var{arg_1}, @dots{}, @var{arg_n}.  The arguments are switches\n"
"(Boolean flags), assignments, equations, and functions.  @code{ev} returns the\n"
"result (another expression) of the evaluation.\n"
msgstr ""

#: Evaluation.texi:410
msgid ""
"The evaluation is carried out in steps, as follows.\n"
msgstr ""

#: Evaluation.texi:415
msgid ""
"@enumerate\n"
"@item\n"
"First the environment is set up by scanning the arguments which may\n"
"be any or all of the following.\n"
msgstr ""

#: Evaluation.texi:492
msgid ""
"@itemize @bullet\n"
"@item\n"
"@mref{simp} causes @var{expr} to be simplified regardless of the setting of the\n"
"switch @code{simp} which inhibits simplification if @code{false}.\n"
"@item\n"
"@mref{noeval} suppresses the evaluation phase of @code{ev} (see step (4) below).\n"
"This is useful in conjunction with the other switches and in causing\n"
"@var{expr} to be resimplified without being reevaluated.\n"
"@item\n"
"@mref{nouns} causes the evaluation of noun forms (typically unevaluated\n"
"functions such as @code{'integrate} or @code{'diff}) in @var{expr}.\n"
"@item\n"
"@mref{expand} causes expansion.\n"
"@item\n"
"@code{expand (@var{m}, @var{n})} causes expansion, setting the values of\n"
"@mref{maxposex} and @mref{maxnegex} to @var{m} and @var{n} respectively.\n"
"@item\n"
"@mref{detout} causes any matrix inverses computed in @var{expr} to have their\n"
"determinant kept outside of the inverse rather than dividing through\n"
"each element.\n"
"@item\n"
"@mref{diff} causes all differentiations indicated in @var{expr} to be performed.\n"
"@item\n"
"@code{derivlist (@var{x}, @var{y}, @var{z}, ...)} causes only differentiations\n"
"with respect to the indicated variables.  See also @mrefdot{derivlist}\n"
"@item\n"
"@code{risch} causes integrals in @var{expr} to be evaluated using the Risch\n"
"algorithm.  See @mrefdot{risch}  The standard integration routine is invoked\n"
"when using the special symbol @mrefdot{nouns}\n"
"@item\n"
"@mref{float} causes non-integral rational numbers to be converted to floating\n"
"point.\n"
"@item\n"
"@mref{numer} causes some mathematical functions (including exponentiation)\n"
"with numerical arguments to be evaluated in floating point.  It causes\n"
"variables in @var{expr} which have been given numervals to be replaced by\n"
"their values.  It also sets the @mref{float} switch on.\n"
"@item\n"
"@mref{pred} causes predicates (expressions which evaluate to @code{true} or\n"
"@code{false}) to be evaluated.\n"
"@item\n"
"@mref{eval} causes an extra post-evaluation of @var{expr} to occur.\n"
"(See step (5) below.)\n"
"@code{eval} may occur multiple times.  For each instance of @code{eval}, the\n"
"expression is evaluated again.\n"
"@item\n"
"@code{A} where @code{A} is an atom declared to be an evaluation flag\n"
"@mref{evflag} causes @code{A} to be bound to @code{true} during the evaluation\n"
"of @var{expr}.\n"
"@item\n"
"@code{V: expression} (or alternately @code{V=expression}) causes @code{V} to be\n"
"bound to the value of @code{expression} during the evaluation of @var{expr}.\n"
"Note that if @code{V} is a Maxima option, then @code{expression} is used for\n"
"its value during the evaluation of @var{expr}.  If more than one argument to\n"
"@code{ev} is of this type then the binding is done in parallel.  If @code{V} is\n"
"a non-atomic expression then a substitution rather than a binding is performed.\n"
"@item\n"
"@code{F} where @code{F}, a function name, has been declared to be an evaluation\n"
"function @mref{evfun} causes @code{F} to be applied to @var{expr}.\n"
"@item\n"
"Any other function names, e.g. @mrefcomma{sum} cause evaluation of occurrences\n"
"of those names in @var{expr} as though they were verbs.\n"
"@item\n"
"In addition a function occurring in @var{expr} (say @code{F(x)}) may be defined\n"
"locally for the purpose of this evaluation of @var{expr} by giving\n"
"@code{F(x) := expression} as an argument to @code{ev}.\n"
"@item\n"
"If an atom not mentioned above or a subscripted variable or subscripted\n"
"expression was given as an argument, it is evaluated and if the result is an\n"
"equation or assignment then the indicated binding or substitution is performed.\n"
"If the result is a list then the members of the list are treated as if they were\n"
"additional arguments given to @code{ev}.  This permits a list of equations to be\n"
"given (e.g. @code{[X=1, Y=A**2]}) or a list of names of equations (e.g.,\n"
"@code{[%t1, %t2]} where @code{%t1} and @code{%t2} are equations) such as that\n"
"returned by @mrefdot{solve}\n"
"@end itemize\n"
msgstr ""

#: Evaluation.texi:497
msgid ""
"The arguments of @code{ev} may be given in any order with the exception of\n"
"substitution equations which are handled in sequence, left to right, and\n"
"evaluation functions which are composed, e.g., @code{ev (@var{expr}, ratsimp,\n"
"realpart)} is handled as @code{realpart (ratsimp (@var{expr}))}.\n"
msgstr ""

#: Evaluation.texi:501
msgid ""
"The @mrefcomma{simp} @mrefcomma{numer} and @mref{float} switches may also be set\n"
"locally in a block, or globally in Maxima so that they will remain in effect\n"
"until being reset.\n"
msgstr ""

#: Evaluation.texi:505
msgid ""
"If @var{expr} is a canonical rational expression (CRE), then the expression\n"
"returned by @code{ev} is also a CRE, provided the @code{numer} and @code{float}\n"
"switches are not both @code{true}.\n"
msgstr ""

#: Evaluation.texi:515
msgid ""
"@item\n"
"During step (1), a list is made of the non-subscripted variables appearing on\n"
"the left side of equations in the arguments or in the value of some arguments\n"
"if the value is an equation.  The variables (subscripted variables which do not\n"
"have associated array functions as well as non-subscripted variables) in the\n"
"expression @var{expr} are replaced by their global values, except for those\n"
"appearing in this list.  Usually, @var{expr} is just a label or @code{%} (as in\n"
"@code{%i2} in the example below), so this step simply retrieves the expression\n"
"named by the label, so that @code{ev} may work on it.\n"
msgstr ""

#: Evaluation.texi:518
msgid ""
"@item\n"
"If any substitutions are indicated by the arguments, they are carried out now.\n"
msgstr ""

#: Evaluation.texi:524
msgid ""
"@item\n"
"The resulting expression is then re-evaluated (unless one of the arguments was\n"
"@mref{noeval}) and simplified according to the arguments.  Note that any\n"
"function calls in @var{expr} will be carried out after the variables in it are\n"
"evaluated and that @code{ev(F(x))} thus may behave like @code{F(ev(x))}.\n"
msgstr ""

#: Evaluation.texi:529
msgid ""
"@item\n"
"For each instance of @mref{eval} in the arguments, steps (3) and (4) are\n"
"repeated.\n"
"@end enumerate\n"
msgstr ""

#: Evaluation.texi:531
msgid ""
"See also @mxrefcomma{quote-quote, ''} @mref{at} and @mrefdot{subst}\n"
msgstr ""

#: Evaluation.texi:533
msgid ""
"Examples:\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: Evaluation.texi:547
msgid ""
"@c ===beg===\n"
"@c sin(x) + cos(y) + (w+1)^2 + 'diff (sin(w), w);\n"
"@c ev (%, numer, expand, diff, x=2, y=1);\n"
"@c ===end===\n"
"@example\n"
"(%i1) sin(x) + cos(y) + (w+1)^2 + 'diff (sin(w), w);\n"
"                                     d                    2\n"
"(%o1)              cos(y) + sin(x) + -- (sin(w)) + (w + 1)\n"
"                                     dw\n"
"(%i2) ev (%, numer, expand, diff, x=2, y=1);\n"
"                               2\n"
"(%o2)                cos(w) + w  + 2 w + 2.449599732693821\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:551
msgid ""
"An alternate top level syntax has been provided for @code{ev}, whereby one\n"
"may just type in its arguments, without the @code{ev()}.  That is, one may\n"
"write simply\n"
msgstr ""

#: Evaluation.texi:555
msgid ""
"@example\n"
"@var{expr}, @var{arg_1}, ..., @var{arg_n}\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:558
msgid ""
"This is not permitted as part of another expression, e.g., in functions,\n"
"blocks, etc.\n"
msgstr ""

#: Evaluation.texi:560
msgid ""
"Notice the parallel binding process in the following example.\n"
msgstr ""

#: Evaluation.texi:570
msgid ""
"@example\n"
"(%i3) programmode: false;\n"
"(%o3)                                false\n"
"(%i4) x+y, x: a+y, y: 2;\n"
"(%o4)                              y + a + 2\n"
"(%i5) 2*x - 3*y = 3$\n"
"(%i6) -3*x + 2*y = -4$\n"
"(%i7) solve ([%o5, %o6]);\n"
"Solution\n"
msgstr ""

#: Evaluation.texi:574
msgid ""
"                                          1\n"
"(%t7)                               y = - -\n"
"                                          5\n"
msgstr ""

#: Evaluation.texi:590
msgid ""
"                                         6\n"
"(%t8)                                x = -\n"
"                                         5\n"
"(%o8)                            [[%t7, %t8]]\n"
"(%i8) %o6, %o8;\n"
"(%o8)                              - 4 = - 4\n"
"(%i9) x + 1/x > gamma (1/2);\n"
"                                   1\n"
"(%o9)                          x + - > sqrt(%pi)\n"
"                                   x\n"
"(%i10) %, numer, x=1/2;\n"
"(%o10)                      2.5 > 1.772453850905516\n"
"(%i11) %, pred;\n"
"(%o11)                               true\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:595
msgid ""
"@opencatbox\n"
"@category{Evaluation}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

#: Evaluation.texi:599
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{eval}\n"
"@defvr {Special symbol} eval\n"
msgstr ""

#: Evaluation.texi:602
msgid ""
"As an argument in a call to @code{ev (@var{expr})}, @code{eval} causes an extra\n"
"evaluation of @var{expr}.  See @mrefdot{ev}\n"
msgstr ""

#: Evaluation.texi:604
msgid ""
"Example:\n"
msgstr ""

#: Evaluation.texi:624
msgid ""
"@c ===beg===\n"
"@c [a:b,b:c,c:d,d:e];\n"
"@c a;\n"
"@c ev(a);\n"
"@c ev(a),eval;\n"
"@c a,eval,eval;\n"
"@c ===end===\n"
"@example\n"
"(%i1) [a:b,b:c,c:d,d:e];\n"
"(%o1)                            [b, c, d, e]\n"
"(%i2) a;\n"
"(%o2)                                  b\n"
"(%i3) ev(a);\n"
"(%o3)                                  c\n"
"(%i4) ev(a),eval;\n"
"(%o4)                                  e\n"
"(%i5) a,eval,eval;\n"
"(%o5)                                  e\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:629
msgid ""
"@opencatbox\n"
"@category{Evaluation flags}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

#: Evaluation.texi:633
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{evflag}\n"
"@defvr {Property} evflag\n"
msgstr ""

#: Evaluation.texi:638
msgid ""
"When a symbol @var{x} has the @code{evflag} property, the expressions\n"
"@code{ev(@var{expr}, @var{x})} and @code{@var{expr}, @var{x}} (at the\n"
"interactive prompt) are equivalent to @code{ev(@var{expr}, @var{x} = true)}.\n"
"That is, @var{x} is bound to @code{true} while @var{expr} is evaluated.\n"
msgstr ""

#: Evaluation.texi:641
msgid ""
"The expression @code{declare(@var{x}, evflag)} gives the @code{evflag} property\n"
"to the variable @var{x}.\n"
msgstr ""

#: Evaluation.texi:645
msgid ""
"The flags which have the @code{evflag} property by default are the following:\n"
"@c FOLLOWING LIST CONSTRUCTED FROM LIST UNDER (prog1 '(evflag properties) ...)\n"
"@c NEAR LINE 2649 OF mlisp.lisp AT PRESENT (2004/11).\n"
msgstr ""

#: Evaluation.texi:660
msgid ""
"@verbatim\n"
"   algebraic          cauchysum       demoivre\n"
"   dotscrules         %emode          %enumer\n"
"   exponentialize     exptisolate     factorflag\n"
"   float              halfangles      infeval\n"
"   isolate_wrt_times  keepfloat       letrat\n"
"   listarith          logabs          logarc \n"
"   logexpand          lognegint       \n"
"   m1pbranch          numer_pbranch   programmode \n"
"   radexpand          ratalgdenom     ratfac \n"
"   ratmx              ratsimpexpons   simp \n"
"   simpproduct        simpsum         sumexpand\n"
"   trigexpand\n"
"@end verbatim\n"
msgstr ""

#: Evaluation.texi:662
msgid ""
"Examples:\n"
@c Occurrences of paragraphs with this contents up to now: 3
msgstr ""

#: Evaluation.texi:714
msgid ""
"@c ===beg===\n"
"@c sin (1/2);\n"
"@c sin (1/2), float;\n"
"@c sin (1/2), float=true;\n"
"@c simp : false;\n"
"@c 1 + 1;\n"
"@c 1 + 1, simp;\n"
"@c simp : true;\n"
"@c sum (1/k^2, k, 1, inf);\n"
"@c sum (1/k^2, k, 1, inf), simpsum;\n"
"@c declare (aa, evflag);\n"
"@c if aa = true then YES else NO;\n"
"@c if aa = true then YES else NO, aa;\n"
"@c ===end===\n"
"@example\n"
"(%i1) sin (1/2);\n"
"                                 1\n"
"(%o1)                        sin(-)\n"
"                                 2\n"
"(%i2) sin (1/2), float;\n"
"(%o2)                   0.479425538604203\n"
"(%i3) sin (1/2), float=true;\n"
"(%o3)                   0.479425538604203\n"
"(%i4) simp : false;\n"
"(%o4)                         false\n"
"(%i5) 1 + 1;\n"
"(%o5)                         1 + 1\n"
"(%i6) 1 + 1, simp;\n"
"(%o6)                           2\n"
"(%i7) simp : true;\n"
"(%o7)                         true\n"
"(%i8) sum (1/k^2, k, 1, inf);\n"
"                            inf\n"
"                            ====\n"
"                            \     1\n"
"(%o8)                        >    --\n"
"                            /      2\n"
"                            ====  k\n"
"                            k = 1\n"
"(%i9) sum (1/k^2, k, 1, inf), simpsum;\n"
"                                 2\n"
"                              %pi\n"
"(%o9)                         ----\n"
"                               6\n"
"(%i10) declare (aa, evflag);\n"
"(%o10)                        done\n"
"(%i11) if aa = true then YES else NO;\n"
"(%o11)                         NO\n"
"(%i12) if aa = true then YES else NO, aa;\n"
"(%o12)                         YES\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:719
msgid ""
"@opencatbox\n"
"@category{Evaluation flags} @category{Simplification flags and variables}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

#: Evaluation.texi:723
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{evfun}\n"
"@defvr {Property} evfun\n"
msgstr ""

#: Evaluation.texi:727
msgid ""
"When a function @var{F} has the @code{evfun} property, the expressions\n"
"@code{ev(@var{expr}, @var{F})} and @code{@var{expr}, @var{F}} (at the\n"
"interactive prompt) are equivalent to @code{@var{F}(ev(@var{expr}))}.\n"
msgstr ""

#: Evaluation.texi:730
msgid ""
"If two or more @code{evfun} functions @var{F}, @var{G}, etc., are specified,\n"
"the functions are applied in the order that they are specified.\n"
msgstr ""

#: Evaluation.texi:736
msgid ""
"The expression @code{declare(@var{F}, evfun)} gives the @code{evfun} property\n"
"to the function @var{F}.  The functions which have the @code{evfun} property by\n"
"default are the following:\n"
"@c FOLLOWING LIST CONSTRUCTED FROM LIST UNDER (prog1 '(evfun properties) ...)\n"
"@c NEAR LINE 2643 IN mlisp.lisp AT PRESENT (2004/11).\n"
msgstr ""

#: Evaluation.texi:743
msgid ""
"@verbatim\n"
"   bfloat          factor       fullratsimp\n"
"   logcontract     polarform    radcan\n"
"   ratexpand       ratsimp      rectform\n"
"   rootscontract   trigexpand   trigreduce\n"
"@end verbatim\n"
msgstr ""

#: Evaluation.texi:745
msgid ""
"Examples:\n"
@c Occurrences of paragraphs with this contents up to now: 4
msgstr ""

#: Evaluation.texi:815
msgid ""
"@c ===beg===\n"
"@c x^3 - 1;\n"
"@c x^3 - 1, factor;\n"
"@c factor (x^3 - 1);\n"
"@c cos(4 * x) / sin(x)^4;\n"
"@c cos(4 * x) / sin(x)^4, trigexpand;\n"
"@c cos(4 * x) / sin(x)^4, trigexpand, ratexpand;\n"
"@c ratexpand (trigexpand (cos(4 * x) / sin(x)^4));\n"
"@c declare ([F, G], evfun);\n"
"@c (aa : bb, bb : cc, cc : dd);\n"
"@c aa;\n"
"@c aa, F;\n"
"@c F (aa);\n"
"@c F (ev (aa));\n"
"@c aa, F, G;\n"
"@c G (F (ev (aa)));\n"
"@c ===end===\n"
"@example\n"
"(%i1) x^3 - 1;\n"
"                              3\n"
"(%o1)                        x  - 1\n"
"(%i2) x^3 - 1, factor;\n"
"                                2\n"
"(%o2)                 (x - 1) (x  + x + 1)\n"
"(%i3) factor (x^3 - 1);\n"
"                                2\n"
"(%o3)                 (x - 1) (x  + x + 1)\n"
"(%i4) cos(4 * x) / sin(x)^4;\n"
"@group\n"
"                            cos(4 x)\n"
"(%o4)                       --------\n"
"                               4\n"
"                            sin (x)\n"
"@end group\n"
"(%i5) cos(4 * x) / sin(x)^4, trigexpand;\n"
"                 4           2       2         4\n"
"              sin (x) - 6 cos (x) sin (x) + cos (x)\n"
"(%o5)         -------------------------------------\n"
"                                4\n"
"                             sin (x)\n"
"(%i6) cos(4 * x) / sin(x)^4, trigexpand, ratexpand;\n"
"                           2         4\n"
"                      6 cos (x)   cos (x)\n"
"(%o6)               - --------- + ------- + 1\n"
"                          2          4\n"
"                       sin (x)    sin (x)\n"
"(%i7) ratexpand (trigexpand (cos(4 * x) / sin(x)^4));\n"
"                           2         4\n"
"                      6 cos (x)   cos (x)\n"
"(%o7)               - --------- + ------- + 1\n"
"                          2          4\n"
"                       sin (x)    sin (x)\n"
"(%i8) declare ([F, G], evfun);\n"
"(%o8)                         done\n"
"(%i9) (aa : bb, bb : cc, cc : dd);\n"
"(%o9)                          dd\n"
"(%i10) aa;\n"
"(%o10)                         bb\n"
"(%i11) aa, F;\n"
"(%o11)                        F(cc)\n"
"(%i12) F (aa);\n"
"(%o12)                        F(bb)\n"
"(%i13) F (ev (aa));\n"
"(%o13)                        F(cc)\n"
"(%i14) aa, F, G;\n"
"(%o14)                      G(F(cc))\n"
"(%i15) G (F (ev (aa)));\n"
"(%o15)                      G(F(cc))\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:820
msgid ""
"@opencatbox\n"
"@category{Evaluation flags}\n"
"@closecatbox\n"
"@end defvr\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Evaluation.texi:822
msgid ""
"@c NEEDS WORK\n"
msgstr ""

#: Evaluation.texi:826
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{infeval}\n"
"@defvr {Option variable} infeval\n"
msgstr ""

#: Evaluation.texi:832
msgid ""
"Enables \"infinite evaluation\" mode.  @mref{ev} repeatedly evaluates an\n"
"expression until it stops changing.  To prevent a variable, say @code{X}, from\n"
"being evaluated away in this mode, simply include @code{X='X} as an argument to\n"
"@code{ev}.  Of course expressions such as @code{ev (X, X=X+1, infeval)} will\n"
"generate an infinite loop.\n"
msgstr ""

#: Evaluation.texi:837
msgid ""
"@opencatbox\n"
"@category{Evaluation flags}\n"
"@closecatbox\n"
"@end defvr\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: Evaluation.texi:840
msgid ""
"@c NEEDS CLARIFICATION, EXAMPLES\n"
"@c NEED TO MENTION THIS IS AN evflag\n"
msgstr ""

#: Evaluation.texi:844
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{noeval}\n"
"@defvr {Special symbol} noeval\n"
msgstr ""

#: Evaluation.texi:848
msgid ""
"@code{noeval} suppresses the evaluation phase of @mrefdot{ev}  This is useful in\n"
"conjunction with other switches and in causing expressions      \n"
"to be resimplified without being reevaluated.\n"
msgstr ""

#: Evaluation.texi:853
msgid ""
"@opencatbox\n"
"@category{Evaluation flags}\n"
"@closecatbox\n"
"@end defvr\n"
@c Occurrences of paragraphs with this contents up to now: 3
msgstr ""

#: Evaluation.texi:855
msgid ""
"@c NEEDS CLARIFICATION, EXAMPLES\n"
msgstr ""

#: Evaluation.texi:859
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{nouns}\n"
"@defvr {Special symbol} nouns\n"
msgstr ""

#: Evaluation.texi:864
msgid ""
"@code{nouns} is an @mrefdot{evflag}  When used as an option to the @mref{ev}@w{}\n"
"command, @code{nouns} converts all \"noun\" forms occurring in the expression\n"
"being @code{ev}'d to \"verbs\", i.e., evaluates them.  See also\n"
"@mrefcomma{noun} @mrefcomma{nounify} @code{verb}, and @mrefdot{verbify}\n"
msgstr ""

#: Evaluation.texi:869
msgid ""
"@opencatbox\n"
"@category{Evaluation flags} @category{Nouns and verbs}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

#: Evaluation.texi:873
msgid ""
"@c -----------------------------------------------------------------------------\n"
"@anchor{pred}\n"
"@defvr {Special symbol} pred\n"
msgstr ""

#: Evaluation.texi:877
msgid ""
"As an argument in a call to @code{ev (@var{expr})}, @code{pred} causes \n"
"predicates (expressions which evaluate to @code{true} or @code{false}) to be \n"
"evaluated.  See @mrefdot{ev}\n"
msgstr ""

#: Evaluation.texi:879
msgid ""
"Example:\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: Evaluation.texi:890
msgid ""
"@c ===beg===\n"
"@c 1<2;\n"
"@c 1<2,pred;\n"
"@c ===end===\n"
"@example\n"
"(%i1) 1<2;\n"
"(%o1)                                1 < 2\n"
"(%i2) 1<2,pred;\n"
"(%o2)                                true\n"
"@end example\n"
msgstr ""

#: Evaluation.texi:895
msgid ""
"@opencatbox\n"
"@category{Evaluation flags}\n"
"@closecatbox\n"
"@end defvr\n"
@c Occurrences of paragraphs with this contents up to now: 4
msgstr ""

