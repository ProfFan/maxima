# This file contains all translatable strings from a .texi file.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL>, YEAR.
#
#, fuzzy
msgid ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-06 22:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL>\n"
"Language-Team: LANGUAGE <LL.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
msgstr ""

#: errormessages.texi:5
msgid ""
"@menu\n"
"* Error messages::\n"
"* Warning messages::\n"
"@end menu\n"
msgstr ""

#: errormessages.texi:26
msgid ""
"This chapter provides detailed information about the meaning of some error messages\n"
"or on how to recover from errors.\n"
"@node Error messages, Warning messages,,Error and warning messages\n"
"@section Error messages\n"
"@menu\n"
"* No such list element::\n"
"* argument must be a non-atomic expression::\n"
"* cannot assign to function::\n"
"* 0 to a negative exponent::\n"
"* Comma is not a prefix operator::\n"
"* Illegal use of delimiter::\n"
"* loadfile failed to load::\n"
"* makelist second argument must evaluate to a number::\n"
"* Only symbols can be bound::\n"
"* Operators of arguments must all be the same::\n"
"* out of memory::\n"
"* part fell off the end::\n"
"* undefined variable during plotting::\n"
"* VTK is not installed::\n"
"@end menu\n"
msgstr ""

#: errormessages.texi:36
msgid ""
"@node No such list element, argument must be a non-atomic expression, Error messages, Error messages\n"
"@subsection apply: no such \\"list\\" element\n"
"One common cause for this error message is that square brackets operator\n"
"(@code{[ ]}) was used trying to access a list element that whose element\n"
"number was @code{< 1} or @code{> length(list)}.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:74
msgid ""
"@node argument must be a non-atomic expression, cannot assign to function, No such list element, Error messages\n"
"@subsection argument must be a non-atomic expression\n"
"This normally means that a list, a set or something else that consists of more than one\n"
"element was expected. One possible cause for this error message is a construct of the \n"
"following type:\n"
"@c ===beg===\n"
"@c l:[1,2,3];\n"
"@c append(l,4);\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) l:[1,2,3];\n"
"(%o1)                       [1, 2, 3]\n"
"@end group\n"
"@group\n"
"(%i2) append(l,4);\n"
"append: argument must be a non-atomic expression; found 4\n"
" -- an error. To debug this try: debugmode(true);\n"
"@end group\n"
"@end example\n"
"The correct way to append variables or numbers to a list is to wrap them in a\n"
"single-element list first:\n"
"@c ===beg===\n"
"@c l:[1,2,3];\n"
"@c append(l,[4]);\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) l:[1,2,3];\n"
"(%o1)                       [1, 2, 3]\n"
"@end group\n"
"@group\n"
"(%i2) append(l,[4]);\n"
"(%o2)                     [1, 2, 3, 4]\n"
"@end group\n"
"@end example\n"
msgstr ""

#: errormessages.texi:78
msgid ""
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:87
msgid ""
"@node cannot assign to function, 0 to a negative exponent, argument must be a non-atomic expression, Error messages\n"
"@subsection assignment: cannot assign to <function name>\n"
"Maxima supports several assignment operators. When trying to define a function\n"
"@code{:=} has to be used.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:95
msgid ""
"@node 0 to a negative exponent, Comma is not a prefix operator, cannot assign to function, Error messages\n"
"@subsection expt: undefined:  0 to a negative exponent.\n"
"This message notifies about a classical division by zero error.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:104
msgid ""
"@node Comma is not a prefix operator, Illegal use of delimiter, 0 to a negative exponent, Error messages\n"
"@subsection incorrect syntax: , is not a prefix operator\n"
"This might be caused by a command starting with a comma (@code{,}) or by one comma\n"
"being directly followed by another one..\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:113
msgid ""
"@node Illegal use of delimiter, loadfile failed to load, Comma is not a prefix operator, Error messages\n"
"@subsection incorrect syntax: Illegal use of delimiter )\n"
"Common reasons for this error appearing are a closing parenthesis without an\n"
"opening one or a closing parenthesis directly preceded by a comma.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:139
msgid ""
"@node loadfile failed to load, makelist second argument must evaluate to a number, Illegal use of delimiter, Error messages\n"
"@subsection loadfile: failed to load <filename>\n"
"This error message normally indicates that the file exists, but can not be read.\n"
"If the file is present and readable there is another possible for this error\n"
"message: Maxima can compile packages to native binary files in order to make them\n"
"run faster. If after compiling the file something in the system has changed in a\n"
"way that makes it incompatible with the binary the binary the file cannot be\n"
"loaded any more. Maxima normally puts binary files it creates from its own packages\n"
"in a folder named @code{binary} within the folder whose name it is printed after\n"
"typing:\n"
"@c ===beg===\n"
"@c maxima_userdir;\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) maxima_userdir;\n"
"(%o1)                 /home/gunter/.maxima\n"
"@end group\n"
"@end example\n"
"If this directory is missing maxima will recreate it again as soon as it has to\n"
"compile a package.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:146
msgid ""
"@node makelist second argument must evaluate to a number, Only symbols can be bound, loadfile failed to load, Error messages\n"
"@subsection makelist: second argument must evaluate to a number\n"
"@code{makelist} expects the second argument to be the name of the variable whose value is to\n"
"be stepped. This time instead of the name of a still-undefined variable maxima has found\n"
"something else, possibly a list or the name of a list.\n"
msgstr ""

#: errormessages.texi:150
msgid ""
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 1
msgstr ""

#: errormessages.texi:160
msgid ""
"@node Only symbols can be bound, Operators of arguments must all be the same, makelist second argument must evaluate to a number, Error messages\n"
"@subsection Only symbols can be bound\n"
"The most probable cause for this error is that there was an attempt to either\n"
"use a number or a variable whose numerical value is known as a loop\n"
"counter.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:197
msgid ""
"@node Operators of arguments must all be the same, out of memory, Only symbols can be bound, Error messages\n"
"@subsection operators of arguments must all be the same\n"
"One possible reason for this error message to appear is a try to use @mref{append} in order\n"
"to add an equation to a list:\n"
"@c ===beg===\n"
"@c l:[a=1,b=2,c=3];\n"
"@c append(l,d=5);\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) l:[a=1,b=2,c=3];\n"
"(%o1)                 [a = 1, b = 2, c = 3]\n"
"@end group\n"
"@group\n"
"(%i2) append(l,d=5);\n"
"append: operators of arguments must all be the same.\n"
" -- an error. To debug this try: debugmode(true);\n"
"@end group\n"
"@end example\n"
"In order to add an equation to a list it has to be wrapped in a\n"
"single-element list first:\n"
"@c ===beg===\n"
"@c l:[a=1,b=2,c=3];\n"
"@c append(l,[d=5]);\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) l:[a=1,b=2,c=3];\n"
"(%o1)                 [a = 1, b = 2, c = 3]\n"
"@end group\n"
"@group\n"
"(%i2) append(l,[d=5]);\n"
"(%o2)             [a = 1, b = 2, c = 3, d = 5]\n"
"@end group\n"
"@end example\n"
msgstr ""

#: errormessages.texi:202
msgid ""
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 2
msgstr ""

#: errormessages.texi:227
msgid ""
"@node out of memory, part fell off the end, Operators of arguments must all be the same, Error messages\n"
"@subsection Out of memory\n"
"Lisp typically handles several types of memory containing at least one stack\n"
"and a heap that contains user objects. To avoid running out of memory several\n"
"approaches might be useful:\n"
"@itemize @bullet\n"
"@item If possible, the best solution normally is to use an algorithm that is\n"
"      more memory-efficient.\n"
"@item Compiling a function might drastically reduce the amount of memory it\n"
"      needs.\n"
"@item Arrays of a fixed type might be more memory-efficient than lists.\n"
"@item If maxima is run by sbcl sbcl's memory limit might be set to a value\n"
"      that is too low to solve the current problem. In this case the\n"
"      command-line option @code{--dynamic-space-size <n>} allows to tell\n"
"      sbcl to reserve @code{n} megabytes for the heap. It is to note, though,\n"
"      that sbcl has to handle several distinct types of memory and therefore\n"
"      might be able to only reserve about half of the available physical\n"
"      memory. Also note that 32-bit processes might only be able to access\n"
"      2GB of physical memory.\n"
"@end itemize\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:236
msgid ""
"@node part fell off the end, undefined variable during plotting, out of memory, Error messages\n"
"@subsection part: fell off the end\n"
"@code{part()} was used to access the @code{n}th item in something that has less than\n"
"@code{n} items.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

#: errormessages.texi:242
msgid ""
"@node undefined variable during plotting, VTK is not installed, part fell off the end, Error messages\n"
"@subsection undefined variable (draw or plot)\n"
"A function could not be plotted since it still contained a variable maxima\n"
"doesn't know the value of.\n"
msgstr ""

#: errormessages.texi:248
msgid ""
"In order to find out which variable this could be it is sometimes helpful to\n"
"temporarily replace the name of the drawing command (@code{draw2d}, @code{plot2d}\n"
"or similar) by a random name (for example @code{ddraw2d}) that doesn't coincide\n"
"with the name of an existing function to make maxima print out what parameters\n"
"the drawing command sees.\n"
msgstr ""

#: errormessages.texi:269
msgid ""
"@example\n"
"(%i1) load(\\"draw\\")$\n"
"(%i2) f(x):=sin(omega*t);\n"
"(%o2) f(x) := sin(omega t)\n"
"(%i3) draw2d(\n"
"        explicit(\n"
"          f(x),\n"
"          x,1,10\n"
"        )\n"
"      );\n"
"draw2d (explicit): non defined variable\n"
" -- an error. To debug this try: debugmode(true);\n"
"(%i4) ddraw2d(\n"
"        explicit(\n"
"          f(x),\n"
"          x,1,10\n"
"        )\n"
"      );\n"
"(%o4) ddraw2d(explicit(sin(omega t), x, 1, 10))\n"
"@end example\n"
msgstr ""

#: errormessages.texi:273
msgid ""
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 3
msgstr ""

#: errormessages.texi:277
msgid ""
"@node VTK is not installed,  , undefined variable during plotting, Error messages\n"
"@subsection VTK is not installed, which is required for Scene\n"
msgstr ""

#: errormessages.texi:290
msgid ""
"This might either mean that VTK is actually not installed - or cannot be found by\n"
"maxima - or that maxima has no write access to the directory whose name is output\n"
"if the following maxima command is entered:\n"
"@c ===beg===\n"
"@c maxima_tempdir;\n"
"@c ===end===\n"
"@example\n"
"@group\n"
"(%i1) maxima_tempdir;\n"
"(%o1)                         /tmp\n"
"@end group\n"
"@end example\n"
msgstr ""

#: errormessages.texi:294
msgid ""
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
@c Occurrences of paragraphs with this contents up to now: 4
msgstr ""

#: errormessages.texi:302
msgid ""
"@node Warning messages, ,Error messages,Error and warning messages\n"
"@section Warning messages\n"
"@menu\n"
"* undefined variable during translation::\n"
"* replaced x by y::\n"
"@end menu\n"
msgstr ""

#: errormessages.texi:314
msgid ""
"@node undefined variable during translation, replaced x by y, Warning messages, Warning messages\n"
"@subsection Encountered undefined variable <x> in translation\n"
"A function was compiled but the type of the variable @code{x} was not known.\n"
"This means that the compiled command contains additional code that makes it\n"
"retain all the flexibility maxima provides in respect to this variable.\n"
"If @code{x} isn't meant as a variable name but just a named option to a\n"
"command prepending the named option by a single quote (@code{'}) should\n"
"resolve this issue.\n"
"@opencatbox\n"
"@category{Error messages}\n"
"@closecatbox\n"
msgstr ""

