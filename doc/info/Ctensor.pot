# SOME DESCRIPTIVE TITLE.">
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-06 22:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
msgstr ""
 
# Ctensor.texi
msgid ""
"@menu\n"
"* Introduction to ctensor::\n"
"* Functions and Variables for ctensor::\n"
"@end menu\n"
msgstr ""

# Ctensor.texi
msgid ""
"@node Introduction to ctensor, Functions and Variables for ctensor, ctensor, ctensor\n"
"@section Introduction to ctensor\n"
msgstr ""

# Ctensor.texi
msgid ""
"@code{ctensor} is a component tensor manipulation package.  To use the @code{ctensor}\n"
"package, type @code{load(ctensor)}.\n"
"To begin an interactive session with @code{ctensor}, type @code{csetup()}.  You are\n"
"first asked to specify the dimension of the manifold. If the dimension\n"
"is 2, 3 or 4 then the list of coordinates defaults to @code{[x,y]}, @code{[x,y,z]}\n"
"or @code{[x,y,z,t]} respectively.\n"
"These names may be changed by assigning a new list of coordinates to\n"
"the variable @code{ct_coords} (described below) and the user is queried about\n"
"this. Care must be taken to avoid the coordinate names conflicting\n"
"with other object definitions.\n"
msgstr ""

# Ctensor.texi
msgid ""
"Next, the user enters the metric either directly or from a file by\n"
"specifying its ordinal position.\n"
"@c NO SUCH FILE !\n"
"@c As an example of a file of common metrics, see @code{share/tensor/metrics.mac}.\n"
"The metric is stored in the matrix\n"
"@code{lg}. Finally, the metric inverse is computed and stored in the matrix\n"
"@code{ug}. One has the option of carrying out all calculations in a power\n"
"series.\n"
msgstr ""

# Ctensor.texi
msgid ""
"A sample protocol is begun below for the static, spherically symmetric\n"
"metric (standard coordinates) which will be applied to the problem of\n"
"deriving Einstein's vacuum equations (which lead to the Schwarzschild\n"
"solution) as an example. Many of the functions in @code{ctensor} will be\n"
"displayed for the standard metric as examples.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"(%i1) load(ctensor);\n"
"(%o1)      /share/tensor/ctensor.mac\n"
"(%i2) csetup();\n"
"Enter the dimension of the coordinate system:\n"
"4;\n"
"Do you wish to change the coordinate names?\n"
"n;\n"
"Do you want to\n"
"1. Enter a new metric?\n"
msgstr ""

# Ctensor.texi
msgid ""
"2. Enter a metric from a file?\n"
msgstr ""

# Ctensor.texi
msgid ""
"3. Approximate a metric with a Taylor series?\n"
"1;\n"
msgstr ""

# Ctensor.texi
msgid ""
"Is the matrix  1. Diagonal  2. Symmetric  3. Antisymmetric  4. General\n"
"Answer 1, 2, 3 or 4\n"
"1;\n"
"Row 1 Column 1:\n"
"a;\n"
"Row 2 Column 2:\n"
"x^2;\n"
"Row 3 Column 3:\n"
"x^2*sin(y)^2;\n"
"Row 4 Column 4:\n"
"-d;\n"
msgstr ""

# Ctensor.texi
msgid ""
"Matrix entered.\n"
"Enter functional dependencies with the DEPENDS function or 'N' if none\n"
"depends([a,d],x);\n"
"Do you wish to see the metric?\n"
"y;\n"
"                          [ a  0       0        0  ]\n"
"                          [                        ]\n"
"                          [     2                  ]\n"
"                          [ 0  x       0        0  ]\n"
"                          [                        ]\n"
"                          [         2    2         ]\n"
"                          [ 0  0   x  sin (y)   0  ]\n"
"                          [                        ]\n"
"                          [ 0  0       0       - d ]\n"
"(%o2)                                done\n"
"(%i3) christof(mcs);\n"
"                                            a\n"
"                                             x\n"
"(%t3)                          mcs        = ---\n"
"                                  1, 1, 1   2 a\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                             1\n"
"(%t4)                           mcs        = -\n"
"                                   1, 2, 2   x\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                             1\n"
"(%t5)                           mcs        = -\n"
"                                   1, 3, 3   x\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                            d\n"
"                                             x\n"
"(%t6)                          mcs        = ---\n"
"                                  1, 4, 4   2 d\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                              x\n"
"(%t7)                          mcs        = - -\n"
"                                  2, 2, 1     a\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                           cos(y)\n"
"(%t8)                         mcs        = ------\n"
"                                 2, 3, 3   sin(y)\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                               2\n"
"                                          x sin (y)\n"
"(%t9)                      mcs        = - ---------\n"
"                              3, 3, 1         a\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%t10)                   mcs        = - cos(y) sin(y)\n"
"                            3, 3, 2\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                            d\n"
"                                             x\n"
"(%t11)                         mcs        = ---\n"
"                                  4, 4, 1   2 a\n"
"(%o11)                               done\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Tensors} @category{Share packages} @category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@c end concepts ctensor\n"
"@node Functions and Variables for ctensor,  , Introduction to ctensor, ctensor\n"
msgstr ""

# Ctensor.texi
msgid ""
"@section Functions and Variables for ctensor\n"
msgstr ""

# Ctensor.texi
msgid ""
"@subsection Initialization and setup\n"
"@anchor{csetup}\n"
"@deffn {Function} csetup ()\n"
"A function in the @code{ctensor} (component tensor) package\n"
"which initializes the package and allows the user to enter a metric\n"
"interactively. See @code{ctensor} for more details.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{cmetric}\n"
"@deffn {Function} cmetric @\n"
"@fname{cmetric} (@var{dis}) @\n"
"@fname{cmetric} ()\n"
msgstr ""

# Ctensor.texi
msgid ""
"A function in the @code{ctensor} (component tensor) package\n"
"that computes the metric inverse and sets up the package for\n"
"further calculations.\n"
msgstr ""

# Ctensor.texi
msgid ""
"If @code{cframe_flag} is @code{false}, the function computes the inverse metric\n"
"@code{ug} from the (user-defined) matrix @code{lg}. The metric determinant is\n"
"also computed and stored in the variable @code{gdet}. Furthermore, the\n"
"package determines if the metric is diagonal and sets the value\n"
"of @code{diagmetric} accordingly. If the optional argument @var{dis}\n"
"is present and not equal to @code{false}, the user is prompted to see\n"
"the metric inverse.\n"
msgstr ""

# Ctensor.texi
msgid ""
"If @code{cframe_flag} is @code{true}, the function expects that the values of\n"
"@code{fri} (the inverse frame matrix) and @code{lfg} (the frame metric) are\n"
"defined. From these, the frame matrix @code{fr} and the inverse frame\n"
"metric @code{ufg} are computed.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{ct}\n"
"@deffn {Function} ct_coordsys @\n"
"@fname{ct_coordsys} (@var{coordinate_system}, @var{extra_arg}) @\n"
"@fname{ct_coordsys} (@var{coordinate_system})\n"
msgstr ""

# Ctensor.texi
msgid ""
"Sets up a predefined coordinate system and metric. The argument\n"
"@var{coordinate_system} can be one of the following symbols:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
" SYMBOL             Dim Coordinates     Description/comments\n"
" ------------------------------------------------------------------\n"
" cartesian2d           2  [x,y]             Cartesian 2D coordinate\n"
"                                            system\n"
" polar                 2  [r,phi]           Polar coordinate system\n"
" elliptic              2  [u,v]             Elliptic coord. system\n"
" confocalelliptic      2  [u,v]             Confocal elliptic\n"
"                                            coordinates\n"
" bipolar               2  [u,v]             Bipolar coord. system\n"
" parabolic             2  [u,v]             Parabolic coord. system\n"
" cartesian3d           3  [x,y,z]           Cartesian 3D coordinate\n"
"                                            system\n"
" polarcylindrical      3  [r,theta,z]       Polar 2D with\n"
"                                            cylindrical z\n"
" ellipticcylindrical   3  [u,v,z]           Elliptic 2D with\n"
"                                            cylindrical z\n"
" confocalellipsoidal   3  [u,v,w]           Confocal ellipsoidal\n"
" bipolarcylindrical    3  [u,v,z]           Bipolar 2D with\n"
"                                            cylindrical z\n"
" paraboliccylindrical  3  [u,v,z]           Parabolic 2D with\n"
"                                            cylindrical z\n"
" paraboloidal          3  [u,v,phi]         Paraboloidal coords.\n"
" conical               3  [u,v,w]           Conical coordinates\n"
" toroidal              3  [phi,u,v]         Toroidal coordinates\n"
" spherical             3  [r,theta,phi]     Spherical coord. system\n"
" oblatespheroidal      3  [u,v,phi]         Oblate spheroidal\n"
"                                            coordinates\n"
" oblatespheroidalsqrt  3  [u,v,phi]\n"
" prolatespheroidal     3  [u,v,phi]         Prolate spheroidal\n"
"                                            coordinates\n"
" prolatespheroidalsqrt 3  [u,v,phi]\n"
" ellipsoidal           3  [r,theta,phi]     Ellipsoidal coordinates\n"
" cartesian4d           4  [x,y,z,t]         Cartesian 4D coordinate\n"
"                                            system\n"
" spherical4d           4  [r,theta,eta,phi] Spherical 4D coordinate\n"
"                                            system\n"
" exteriorschwarzschild 4  [t,r,theta,phi]   Schwarzschild metric\n"
" interiorschwarzschild 4  [t,z,u,v]         Interior Schwarzschild\n"
"                                            metric\n"
" kerr_newman           4  [t,r,theta,phi]   Charged axially\n"
"                                            symmetric metric\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@code{coordinate_system} can also be a list of transformation functions,\n"
"followed by a list containing the coordinate variables. For instance,\n"
"you can specify a spherical metric as follows:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) ct_coordsys([r*cos(theta)*cos(phi),r*cos(theta)*sin(phi),\n"
"      r*sin(theta),[r,theta,phi]]);\n"
"(%o2)                                done\n"
"(%i3) lg:trigsimp(lg);\n"
"                           [ 1  0         0        ]\n"
"                           [                       ]\n"
"                           [     2                 ]\n"
"(%o3)                      [ 0  r         0        ]\n"
"                           [                       ]\n"
"                           [         2    2        ]\n"
"                           [ 0  0   r  cos (theta) ]\n"
"(%i4) ct_coords;\n"
"(%o4)                           [r, theta, phi]\n"
"(%i5) dim;\n"
"(%o5)                                  3\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"Transformation functions can also be used when @code{cframe_flag} is @code{true}:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) cframe_flag:true;\n"
"(%o2)                                true\n"
"(%i3) ct_coordsys([r*cos(theta)*cos(phi),r*cos(theta)*sin(phi),\n"
"      r*sin(theta),[r,theta,phi]]);\n"
"(%o3)                                done\n"
"(%i4) fri;\n"
"(%o4)\n"
" [cos(phi)cos(theta) -cos(phi) r sin(theta) -sin(phi) r cos(theta)]\n"
" [                                                                ]\n"
" [sin(phi)cos(theta) -sin(phi) r sin(theta)  cos(phi) r cos(theta)]\n"
" [                                                                ]\n"
" [    sin(theta)           r cos(theta)                0          ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%i5) cmetric();\n"
"(%o5)                                false\n"
"(%i6) lg:trigsimp(lg);\n"
"                           [ 1  0         0        ]\n"
"                           [                       ]\n"
"                           [     2                 ]\n"
"(%o6)                      [ 0  r         0        ]\n"
"                           [                       ]\n"
"                           [         2    2        ]\n"
"                           [ 0  0   r  cos (theta) ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"The optional argument @var{extra_arg} can be any one of the following:\n"
"@c LOOKING AT share/tensor/ctensor.mac CIRCA LINE 837, misner IS RECOGNIZED ALSO; WHAT EFFECT DOES IT HAVE ??\n"
msgstr ""

# Ctensor.texi
msgid ""
"@code{cylindrical} tells @code{ct_coordsys} to attach an additional cylindrical coordinate.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@code{minkowski} tells @code{ct_coordsys} to attach an additional coordinate with negative metric signature.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@code{all} tells @code{ct_coordsys} to call @code{cmetric} and @code{christof(false)} after setting up the metric.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@c GLOBAL VARIABLE verbose IS USED IN ctensor.mac IN JUST THIS ONE CONTEXT\n"
"If the global variable @code{verbose} is set to @code{true}, @code{ct_coordsys} displays the values of @code{dim}, @code{ct_coords}, and either @code{lg} or @code{lfg} and @code{fri}, depending on the value of @code{cframe_flag}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{init}\n"
"@deffn {Function} init_ctensor ()\n"
"Initializes the @code{ctensor} package.\n"
msgstr ""

# Ctensor.texi
msgid ""
"The @code{init_ctensor} function reinitializes the @code{ctensor} package. It removes all arrays and matrices used by @code{ctensor}, resets all flags, resets @code{dim} to 4, and resets the frame metric to the Lorentz-frame.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@subsection The tensors of curved space\n"
msgstr ""

# Ctensor.texi
msgid ""
"The main purpose of the @code{ctensor} package is to compute the tensors\n"
"of curved space(time), most notably the tensors used in general\n"
"relativity.\n"
msgstr ""

# Ctensor.texi
msgid ""
"When a metric base is used, @code{ctensor} can compute the following tensors:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
" lg  -- ug\n"
"   \      \\n"
"    lcs -- mcs -- ric -- uric\n"
"              \      \       \\n"
"               \      tracer - ein -- lein\n"
"                \\n"
"                 riem -- lriem -- weyl\n"
"                     \\n"
"                      uriem\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@code{ctensor} can also work using moving frames. When @code{cframe_flag} is\n"
"set to @code{true}, the following tensors can be calculated:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
" lfg -- ufg\n"
"     \\n"
" fri -- fr -- lcs -- mcs -- lriem -- ric -- uric\n"
"      \                       |  \      \       \\n"
"       lg -- ug               |   weyl   tracer - ein -- lein\n"
"                              |\\n"
"                              | riem\n"
"                              |\n"
"                              \uriem\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
"@anchor{christof}\n"
"@deffn {Function} christof (@var{dis})\n"
"A function in the @code{ctensor} (component tensor)\n"
"package.  It computes the Christoffel symbols of both\n"
"kinds.  The argument @var{dis} determines which results are to be immediately\n"
"displayed.  The Christoffel symbols of the first and second kinds are\n"
"stored in the arrays @code{lcs[i,j,k]} and @code{mcs[i,j,k]} respectively and\n"
"defined to be symmetric in the first two indices. If the argument to\n"
"@code{christof} is @code{lcs} or @code{mcs} then the unique non-zero values of @code{lcs[i,j,k]}\n"
"or @code{mcs[i,j,k]}, respectively, will be displayed. If the argument is @code{all}\n"
"then the unique non-zero values of @code{lcs[i,j,k]} and @code{mcs[i,j,k]} will be\n"
"displayed.  If the argument is @code{false} then the display of the elements\n"
"will not occur. The array elements @code{mcs[i,j,k]} are defined in such a\n"
"manner that the final index is contravariant.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{ricci}\n"
"@deffn {Function} ricci (@var{dis})\n"
"A function in the @code{ctensor} (component tensor)\n"
"package. @code{ricci} computes the covariant (symmetric)\n"
"components @code{ric[i,j]} of the Ricci tensor.  If the argument @var{dis} is @code{true},\n"
"then the non-zero components are displayed.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{uricci}\n"
"@deffn {Function} uricci (@var{dis})\n"
"This function first computes the\n"
"covariant components @code{ric[i,j]} of the Ricci tensor.\n"
"Then the mixed Ricci tensor is computed using the\n"
"contravariant metric tensor.  If the value of the argument @var{dis}\n"
"is @code{true}, then these mixed components, @code{uric[i,j]} (the\n"
"index @code{i} is covariant and the index @code{j} is contravariant), will be displayed\n"
"directly.  Otherwise, @code{ricci(false)} will simply compute the entries\n"
"of the array @code{uric[i,j]} without displaying the results.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{scurvature}\n"
"@deffn {Function} scurvature ()\n"
"Returns the scalar curvature (obtained by contracting\n"
"the Ricci tensor) of the Riemannian manifold with the given metric.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{einstein}\n"
"@deffn {Function} einstein (@var{dis})\n"
"A function in the @code{ctensor} (component tensor)\n"
"package.  @code{einstein} computes the mixed Einstein tensor\n"
"after the Christoffel symbols and Ricci tensor have been obtained\n"
"(with the functions @code{christof} and @code{ricci}).  If the argument @var{dis} is\n"
"@code{true}, then the non-zero values of the mixed Einstein tensor @code{ein[i,j]}\n"
"will be displayed where @code{j} is the contravariant index.\n"
"The variable @code{rateinstein} will cause the rational simplification on\n"
"these components. If @code{ratfac} is @code{true} then the components will\n"
"also be factored.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{leinstein}\n"
"@deffn {Function} leinstein (@var{dis})\n"
"Covariant Einstein-tensor. @code{leinstein} stores the values of the covariant Einstein tensor in the array @code{lein}. The covariant Einstein-tensor is computed from the mixed Einstein tensor @code{ein} by multiplying it with the metric tensor. If the argument @var{dis} is @code{true}, then the non-zero values of the covariant Einstein tensor are displayed.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{riemann}\n"
"@deffn {Function} riemann (@var{dis})\n"
"A function in the @code{ctensor} (component tensor)\n"
"package.  @code{riemann} computes the Riemann curvature tensor\n"
"from the given metric and the corresponding Christoffel symbols. The following\n"
"index conventions are used:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"                l      _l       _l       _l   _m    _l   _m\n"
" R[i,j,k,l] =  R    = |      - |      + |    |   - |    |\n"
"                ijk     ij,k     ik,j     mk   ij    mj   ik\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"This notation is consistent with the notation used by the @code{itensor}\n"
"package and its @code{icurvature} function.\n"
"If the optional argument @var{dis} is @code{true},\n"
"the unique non-zero components @code{riem[i,j,k,l]} will be displayed.\n"
"As with the Einstein tensor, various switches set by the user\n"
"control the simplification of the components of the Riemann tensor.\n"
"If @code{ratriemann} is @code{true}, then\n"
"rational simplification will be done. If @code{ratfac}\n"
"is @code{true} then\n"
"each of the components will also be factored.\n"
msgstr ""

# Ctensor.texi
msgid ""
"If the variable @code{cframe_flag} is @code{false}, the Riemann tensor is\n"
"computed directly from the Christoffel-symbols. If @code{cframe_flag} is\n"
"@code{true}, the covariant Riemann-tensor is computed first from the\n"
"frame field coefficients.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{lriemann}\n"
"@deffn {Function} lriemann (@var{dis})\n"
"Covariant Riemann-tensor (@code{lriem[]}).\n"
msgstr ""

# Ctensor.texi
msgid ""
"Computes the covariant Riemann-tensor as the array @code{lriem}. If the\n"
"argument @var{dis} is @code{true}, unique non-zero values are displayed.\n"
msgstr ""

# Ctensor.texi
msgid ""
"If the variable @code{cframe_flag} is @code{true}, the covariant Riemann\n"
"tensor is computed directly from the frame field coefficients. Otherwise,\n"
"the (3,1) Riemann tensor is computed first.\n"
msgstr ""

# Ctensor.texi
msgid ""
"For information on index ordering, see @code{riemann}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{uriemann}\n"
"@deffn {Function} uriemann (@var{dis})\n"
"Computes the contravariant components of the Riemann\n"
"curvature tensor as array elements @code{uriem[i,j,k,l]}.  These are displayed\n"
"if @var{dis} is @code{true}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{rinvariant}\n"
"@deffn {Function} rinvariant ()\n"
"Forms the Kretchmann-invariant (@code{kinvariant}) obtained by\n"
"contracting the tensors\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"lriem[i,j,k,l]*uriem[i,j,k,l].\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"This object is not automatically simplified since it can be very large.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{weyl}\n"
"@deffn {Function} weyl (@var{dis})\n"
"Computes the Weyl conformal tensor.  If the argument @var{dis} is\n"
"@code{true}, the non-zero components @code{weyl[i,j,k,l]} will be displayed to the\n"
"user.  Otherwise, these components will simply be computed and stored.\n"
"If the switch @code{ratweyl} is set to @code{true}, then the components will be\n"
"rationally simplified; if @code{ratfac} is @code{true} then the results will be\n"
"factored as well.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Ctensor.texi
msgid ""
"@subsection Taylor series expansion\n"
msgstr ""

# Ctensor.texi
msgid ""
"The @code{ctensor} package has the ability to truncate results by assuming\n"
"that they are Taylor-series approximations. This behavior is controlled by\n"
"the @code{ctayswitch} variable; when set to true, @code{ctensor} makes use\n"
"internally of the function @code{ctaylor} when simplifying results.\n"
msgstr ""

# Ctensor.texi
msgid ""
"The @code{ctaylor} function is invoked by the following @code{ctensor} functions:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"    Function     Comments\n"
"    ---------------------------------\n"
"    christof()   For mcs only\n"
"    ricci()\n"
"    uricci()\n"
"    einstein()\n"
"    riemann()\n"
"    weyl()\n"
"    checkdiv()\n"
"@end example\n"
"@anchor{ctaylor}\n"
"@deffn {Function} ctaylor ()\n"
msgstr ""

# Ctensor.texi
msgid ""
"The @code{ctaylor} function truncates its argument by converting\n"
"it to a Taylor-series using @code{taylor}, and then calling\n"
"@code{ratdisrep}. This has the combined effect of dropping terms\n"
"higher order in the expansion variable @code{ctayvar}. The order\n"
"of terms that should be dropped is defined by @code{ctaypov}; the\n"
"point around which the series expansion is carried out is specified\n"
"in @code{ctaypt}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"As an example, consider a simple metric that is a perturbation of\n"
"the Minkowski metric. Without further restrictions, even a diagonal\n"
"metric produces expressions for the Einstein tensor that are far too\n"
"complex:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) ratfac:true;\n"
"(%o2)                                true\n"
"(%i3) derivabbrev:true;\n"
"(%o3)                                true\n"
"(%i4) ct_coords:[t,r,theta,phi];\n"
"(%o4)                         [t, r, theta, phi]\n"
"(%i5) lg:matrix([-1,0,0,0],[0,1,0,0],[0,0,r^2,0],\n"
"                [0,0,0,r^2*sin(theta)^2]);\n"
"                        [ - 1  0  0         0        ]\n"
"                        [                            ]\n"
"                        [  0   1  0         0        ]\n"
"                        [                            ]\n"
"(%o5)                   [          2                 ]\n"
"                        [  0   0  r         0        ]\n"
"                        [                            ]\n"
"                        [              2    2        ]\n"
"                        [  0   0  0   r  sin (theta) ]\n"
"(%i6) h:matrix([h11,0,0,0],[0,h22,0,0],[0,0,h33,0],[0,0,0,h44]);\n"
"                            [ h11   0    0    0  ]\n"
"                            [                    ]\n"
"                            [  0   h22   0    0  ]\n"
"(%o6)                       [                    ]\n"
"                            [  0    0   h33   0  ]\n"
"                            [                    ]\n"
"                            [  0    0    0   h44 ]\n"
"(%i7) depends(l,r);\n"
"(%o7)                               [l(r)]\n"
"(%i8) lg:lg+l*h;\n"
"      [ h11 l - 1      0          0                 0            ]\n"
"      [                                                          ]\n"
"      [     0      h22 l + 1      0                 0            ]\n"
"      [                                                          ]\n"
"(%o8) [                        2                                 ]\n"
"      [     0          0      r  + h33 l            0            ]\n"
"      [                                                          ]\n"
"      [                                    2    2                ]\n"
"      [     0          0          0       r  sin (theta) + h44 l ]\n"
"(%i9) cmetric(false);\n"
"(%o9)                                done\n"
"(%i10) einstein(false);\n"
"(%o10)                               done\n"
"(%i11) ntermst(ein);\n"
"[[1, 1], 62]\n"
"[[1, 2], 0]\n"
"[[1, 3], 0]\n"
"[[1, 4], 0]\n"
"[[2, 1], 0]\n"
"[[2, 2], 24]\n"
"[[2, 3], 0]\n"
"[[2, 4], 0]\n"
"[[3, 1], 0]\n"
"[[3, 2], 0]\n"
"[[3, 3], 46]\n"
"[[3, 4], 0]\n"
"[[4, 1], 0]\n"
"[[4, 2], 0]\n"
"[[4, 3], 0]\n"
"[[4, 4], 46]\n"
"(%o12)                               done\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"However, if we recompute this example as an approximation that is\n"
"linear in the variable @code{l}, we get much simpler expressions:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%i14) ctayswitch:true;\n"
"(%o14)                               true\n"
"(%i15) ctayvar:l;\n"
"(%o15)                                 l\n"
"(%i16) ctaypov:1;\n"
"(%o16)                                 1\n"
"(%i17) ctaypt:0;\n"
"(%o17)                                 0\n"
"(%i18) christof(false);\n"
"(%o18)                               done\n"
"(%i19) ricci(false);\n"
"(%o19)                               done\n"
"(%i20) einstein(false);\n"
"(%o20)                               done\n"
"(%i21) ntermst(ein);\n"
"[[1, 1], 6]\n"
"[[1, 2], 0]\n"
"[[1, 3], 0]\n"
"[[1, 4], 0]\n"
"[[2, 1], 0]\n"
"[[2, 2], 13]\n"
"[[2, 3], 2]\n"
"[[2, 4], 0]\n"
"[[3, 1], 0]\n"
"[[3, 2], 2]\n"
"[[3, 3], 9]\n"
"[[3, 4], 0]\n"
"[[4, 1], 0]\n"
"[[4, 2], 0]\n"
"[[4, 3], 0]\n"
"[[4, 4], 9]\n"
"(%o21)                               done\n"
"(%i22) ratsimp(ein[1,1]);\n"
"                         2      2  4               2     2\n"
"(%o22) - (((h11 h22 - h11 ) (l )  r  - 2 h33 l    r ) sin (theta)\n"
"                              r               r r\n"
msgstr ""

# Ctensor.texi
msgid ""
"                            2               2      4    2\n"
"              - 2 h44 l    r  - h33 h44 (l ) )/(4 r  sin (theta))\n"
"                       r r                r\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"This capability can be useful, for instance, when working in the weak\n"
"field limit far from a gravitational source.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@subsection Frame fields\n"
msgstr ""

# Ctensor.texi
msgid ""
"When the variable @code{cframe_flag} is set to true, the @code{ctensor} package\n"
"performs its calculations using a moving frame.\n"
"@anchor{frame}\n"
"@deffn {Function} frame_bracket (@var{fr}, @var{fri}, @var{diagframe})\n"
"The frame bracket (@code{fb[]}).\n"
msgstr ""

# Ctensor.texi
msgid ""
"Computes the frame bracket according to the following definition:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"   c          c         c        d     e\n"
"ifb   = ( ifri    - ifri    ) ifr   ifr\n"
"   ab         d,e       e,d      a     b\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Ctensor.texi
msgid ""
"@subsection Algebraic classification\n"
msgstr ""

# Ctensor.texi
msgid ""
"A new feature (as of November, 2004) of @code{ctensor} is its ability to\n"
"compute the Petrov classification of a 4-dimensional spacetime metric.\n"
"For a demonstration of this capability, see the file\n"
"@code{share/tensor/petrov.dem}.\n"
"@anchor{nptetrad}\n"
"@deffn {Function} nptetrad ()\n"
"Computes a Newman-Penrose null tetrad (@code{np}) and its raised-index\n"
"counterpart (@code{npi}). See @code{petrov} for an example.\n"
msgstr ""

# Ctensor.texi
msgid ""
"The null tetrad is constructed on the assumption that a four-dimensional\n"
"orthonormal frame metric with metric signature (-,+,+,+) is being used.\n"
"The components of the null tetrad are related to the inverse frame matrix\n"
"as follows:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"np  = (fri  + fri ) / sqrt(2)\n"
"  1       1      2\n"
msgstr ""

# Ctensor.texi
msgid ""
"np  = (fri  - fri ) / sqrt(2)\n"
"  2       1      2\n"
msgstr ""

# Ctensor.texi
msgid ""
"np  = (fri  + %i fri ) / sqrt(2)\n"
"  3       3         4\n"
msgstr ""

# Ctensor.texi
msgid ""
"np  = (fri  - %i fri ) / sqrt(2)\n"
"  4       3         4\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{psi}\n"
"@deffn {Function} psi (@var{dis})\n"
"Computes the five Newman-Penrose coefficients @code{psi[0]}...@code{psi[4]}.\n"
"If @code{dis} is set to @code{true}, the coefficients are displayed.\n"
"See @code{petrov} for an example.\n"
msgstr ""

# Ctensor.texi
msgid ""
"These coefficients are computed from the Weyl-tensor in a coordinate base.\n"
"If a frame base is used, the Weyl-tensor is first converted to a coordinate\n"
"base, which can be a computationally expensive procedure. For this reason,\n"
"in some cases it may be more advantageous to use a coordinate base in the\n"
"first place before the Weyl tensor is computed. Note however, that\n"
"constructing a Newman-Penrose null tetrad requires a frame base. Therefore,\n"
"a meaningful computation sequence may begin with a frame base, which\n"
"is then used to compute @code{lg} (computed automatically by @code{cmetric})\n"
"and then @code{ug}. See @code{petrov} for an example. At this point, you can switch back to a coordinate base\n"
"by setting @code{cframe_flag} to false before beginning to compute the\n"
"Christoffel symbols. Changing to a frame base at a later stage could yield\n"
"inconsistent results, as you may end up with a mixed bag of tensors, some\n"
"computed in a frame base, some in a coordinate base, with no means to\n"
"distinguish between the two.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{petrov}\n"
"@deffn {Function} petrov ()\n"
"Computes the Petrov classification of the metric characterized by @code{psi[0]}...@code{psi[4]}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"For example, the following demonstrates how to obtain the Petrov-classification\n"
"of the Kerr metric:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) (cframe_flag:true,gcd:spmod,ctrgsimp:true,ratfac:true);\n"
"(%o2)                                true\n"
"(%i3) ct_coordsys(exteriorschwarzschild,all);\n"
"(%o3)                                done\n"
"(%i4) ug:invert(lg)$\n"
"(%i5) weyl(false);\n"
"(%o5)                                done\n"
"(%i6) nptetrad(true);\n"
"(%t6) np =\n"
msgstr ""

# Ctensor.texi
msgid ""
"[ sqrt(r - 2 m)           sqrt(r)                                 ]\n"
"[---------------   ---------------------    0            0        ]\n"
"[sqrt(2) sqrt(r)   sqrt(2) sqrt(r - 2 m)                          ]\n"
"[                                                                 ]\n"
"[ sqrt(r - 2 m)            sqrt(r)                                ]\n"
"[---------------  - ---------------------   0            0        ]\n"
"[sqrt(2) sqrt(r)    sqrt(2) sqrt(r - 2 m)                         ]\n"
"[                                                                 ]\n"
"[                                          r      %i r sin(theta) ]\n"
"[       0                    0          -------   --------------- ]\n"
"[                                       sqrt(2)       sqrt(2)     ]\n"
"[                                                                 ]\n"
"[                                          r       %i r sin(theta)]\n"
"[       0                    0          -------  - ---------------]\n"
"[                                       sqrt(2)        sqrt(2)    ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                             sqrt(r)         sqrt(r - 2 m)\n"
"(%t7) npi = matrix([- ---------------------,---------------, 0, 0],\n"
"                      sqrt(2) sqrt(r - 2 m) sqrt(2) sqrt(r)\n"
msgstr ""

# Ctensor.texi
msgid ""
"          sqrt(r)            sqrt(r - 2 m)\n"
"[- ---------------------, - ---------------, 0, 0],\n"
"   sqrt(2) sqrt(r - 2 m)    sqrt(2) sqrt(r)\n"
msgstr ""

# Ctensor.texi
msgid ""
"           1               %i\n"
"[0, 0, ---------, --------------------],\n"
"       sqrt(2) r  sqrt(2) r sin(theta)\n"
msgstr ""

# Ctensor.texi
msgid ""
"           1                 %i\n"
"[0, 0, ---------, - --------------------])\n"
"       sqrt(2) r    sqrt(2) r sin(theta)\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%o7)                                done\n"
"(%i7) psi(true);\n"
"(%t8)                              psi  = 0\n"
"                                      0\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%t9)                              psi  = 0\n"
"                                      1\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                          m\n"
"(%t10)                             psi  = --\n"
"                                      2    3\n"
"                                          r\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%t11)                             psi  = 0\n"
"                                      3\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%t12)                             psi  = 0\n"
"                                      4\n"
"(%o12)                               done\n"
"(%i12) petrov();\n"
"(%o12)                                 D\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"The Petrov classification function is based on the algorithm published in\n"
"\"Classifying geometries in general relativity: III Classification in practice\"\n"
"by Pollney, Skea, and d'Inverno, Class. Quant. Grav. 17 2885-2902 (2000).\n"
"Except for some simple test cases, the implementation is untested as of\n"
"December 19, 2004, and is likely to contain errors.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@subsection Torsion and nonmetricity\n"
msgstr ""

# Ctensor.texi
msgid ""
"@code{ctensor} has the ability to compute and include torsion and nonmetricity\n"
"coefficients in the connection coefficients.\n"
msgstr ""

# Ctensor.texi
msgid ""
"The torsion coefficients are calculated from a user-supplied tensor\n"
"@code{tr}, which should be a rank (2,1) tensor. From this, the torsion\n"
"coefficients @code{kt} are computed according to the following formulae:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"              m          m      m\n"
"       - g  tr   - g   tr   - tr   g\n"
"          im  kj    jm   ki     ij  km\n"
"kt   = -------------------------------\n"
"  ijk                 2\n"
"  k     km\n"
"kt   = g   kt\n"
"  ij         ijm\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"Note that only the mixed-index tensor is calculated and stored in the\n"
"array @code{kt}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"The nonmetricity coefficients are calculated from the user-supplied\n"
"nonmetricity vector @code{nm}. From this, the nonmetricity coefficients\n"
"@code{nmc} are computed as follows:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
msgstr ""

# Ctensor.texi
msgid ""
"             k    k        km\n"
"       -nm  D  - D  nm  + g   nm  g\n"
"   k      i  j    i   j         m  ij\n"
"nmc  = ------------------------------\n"
"   ij                2\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"where D stands for the Kronecker-delta.\n"
msgstr ""

# Ctensor.texi
msgid ""
"When @code{ctorsion_flag} is set to @code{true}, the values of @code{kt}\n"
"are subtracted from the mixed-indexed connection coefficients computed by\n"
"@code{christof} and stored in @code{mcs}. Similarly, if @code{cnonmet_flag}\n"
"is set to @code{true}, the values of @code{nmc} are subtracted from the\n"
"mixed-indexed connection coefficients.\n"
msgstr ""

# Ctensor.texi
msgid ""
"If necessary, @code{christof} calls the functions @code{contortion} and\n"
"@code{nonmetricity} in order to compute @code{kt} and @code{nm}.\n"
"@anchor{contortion}\n"
"@deffn {Function} contortion (@var{tr})\n"
msgstr ""

# Ctensor.texi
msgid ""
"Computes the (2,1) contortion coefficients from the torsion tensor @var{tr}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{nonmetricity}\n"
"@deffn {Function} nonmetricity (@var{nm})\n"
msgstr ""

# Ctensor.texi
msgid ""
"Computes the (2,1) nonmetricity coefficients from the nonmetricity\n"
"vector @var{nm}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Ctensor.texi
msgid ""
"@subsection Miscellaneous features\n"
"@anchor{ctransform}\n"
"@deffn {Function} ctransform (@var{M})\n"
"A function in the @code{ctensor} (component tensor)\n"
"package which will perform a coordinate transformation\n"
"upon an arbitrary square symmetric matrix @var{M}. The user must input the\n"
"functions which define the transformation.  (Formerly called @code{transform}.)\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{findde}\n"
"@deffn {Function} findde (@var{A}, @var{n})\n"
msgstr ""

# Ctensor.texi
msgid ""
"returns a list of the unique differential equations (expressions)\n"
"corresponding to the elements of the @var{n} dimensional square\n"
"array @var{A}. Presently, @var{n} may be 2 or 3. @code{deindex} is a global list\n"
"containing the indices of @var{A} corresponding to these unique\n"
"differential equations. For the Einstein tensor (@code{ein}), which\n"
"is a two dimensional array, if computed for the metric in the example\n"
"below, @code{findde} gives the following independent differential equations:\n"
"@example\n"
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) derivabbrev:true;\n"
"(%o2)                                true\n"
"(%i3) dim:4;\n"
"(%o3)                                  4\n"
"(%i4) lg:matrix([a, 0, 0, 0], [ 0, x^2, 0, 0],\n"
"                              [0, 0, x^2*sin(y)^2, 0], [0,0,0,-d]);\n"
"                          [ a  0       0        0  ]\n"
"                          [                        ]\n"
"                          [     2                  ]\n"
"                          [ 0  x       0        0  ]\n"
"(%o4)                     [                        ]\n"
"                          [         2    2         ]\n"
"                          [ 0  0   x  sin (y)   0  ]\n"
"                          [                        ]\n"
"                          [ 0  0       0       - d ]\n"
"(%i5) depends([a,d],x);\n"
"(%o5)                            [a(x), d(x)]\n"
"(%i6) ct_coords:[x,y,z,t];\n"
"(%o6)                            [x, y, z, t]\n"
"(%i7) cmetric();\n"
"(%o7)                                done\n"
"(%i8) einstein(false);\n"
"(%o8)                                done\n"
"(%i9) findde(ein,2);\n"
"                                            2\n"
"(%o9) [d  x - a d + d, 2 a d d    x - a (d )  x - a  d d  x\n"
"        x                     x x         x        x    x\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                              2          2\n"
"                          + 2 a d d   - 2 a  d , a  x + a  - a]\n"
"                                   x       x      x\n"
"(%i10) deindex;\n"
"(%o10)                     [[1, 1], [2, 2], [4, 4]]\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{cograd}\n"
"@deffn {Function} cograd ()\n"
"Computes the covariant gradient of a scalar function allowing the\n"
"user to choose the corresponding vector name as the example under\n"
"@code{contragrad} illustrates.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{contragrad}\n"
"@deffn {Function} contragrad ()\n"
msgstr ""

# Ctensor.texi
msgid ""
"Computes the contravariant gradient of a scalar function allowing\n"
"@c \"vector^F2name^F*\" LOOKS LIKE IT NEEDS TO BE FIXED UP, NOT SURE HOW THOUGH\n"
"the user to choose the corresponding vector name as the example\n"
"below for the Schwarzschild metric illustrates:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) derivabbrev:true;\n"
"(%o2)                                true\n"
"(%i3) ct_coordsys(exteriorschwarzschild,all);\n"
"(%o3)                                done\n"
"(%i4) depends(f,r);\n"
"(%o4)                               [f(r)]\n"
"(%i5) cograd(f,g1);\n"
"(%o5)                                done\n"
"(%i6) listarray(g1);\n"
"(%o6)                            [0, f , 0, 0]\n"
"                                      r\n"
"(%i7) contragrad(f,g2);\n"
"(%o7)                                done\n"
"(%i8) listarray(g2);\n"
"                               f  r - 2 f  m\n"
"                                r        r\n"
"(%o8)                      [0, -------------, 0, 0]\n"
"                                     r\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{ctensor_dscalar}\n"
"@deffn {Function} dscalar ()\n"
"computes the tensor d'Alembertian of the scalar function once\n"
"dependencies have been declared upon the function. For example:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) derivabbrev:true;\n"
"(%o2)                                true\n"
"(%i3) ct_coordsys(exteriorschwarzschild,all);\n"
"(%o3)                                done\n"
"(%i4) depends(p,r);\n"
"(%o4)                               [p(r)]\n"
"(%i5) factor(dscalar(p));\n"
"@group\n"
"                          2\n"
"                    p    r  - 2 m p    r + 2 p  r - 2 m p\n"
"                     r r           r r        r          r\n"
"(%o5)               --------------------------------------\n"
"                                       2\n"
"                                      r\n"
"@end group\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{checkdiv}\n"
"@deffn {Function} checkdiv ()\n"
msgstr ""

# Ctensor.texi
msgid ""
"computes the covariant divergence of the mixed second rank tensor\n"
"(whose first index must be covariant) by printing the\n"
"corresponding n components of the vector field (the divergence) where\n"
"n = @code{dim}. If the argument to the function is @code{g} then the\n"
"divergence of the Einstein tensor will be formed and must be zero.\n"
"In addition, the divergence (vector) is given the array name @code{div}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{cgeodesic}\n"
"@deffn {Function} cgeodesic (@var{dis})\n"
"A function in the @code{ctensor} (component tensor)\n"
"package.  @code{cgeodesic} computes the geodesic equations of\n"
"motion for a given metric.  They are stored in the array @code{geod[i]}.  If\n"
"the argument @var{dis} is @code{true} then these equations are displayed.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{bdvac}\n"
"@deffn {Function} bdvac (@var{f})\n"
msgstr ""

# Ctensor.texi
msgid ""
"generates the covariant components of the vacuum field equations of\n"
"the Brans- Dicke gravitational theory. The scalar field is specified\n"
"by the argument @var{f}, which should be a (quoted) function name\n"
"with functional dependencies, e.g., @code{'p(x)}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"The components of the second rank covariant field tensor are\n"
"represented by the array @code{bd}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{invariant1}\n"
"@deffn {Function} invariant1 ()\n"
msgstr ""

# Ctensor.texi
msgid ""
"generates the mixed Euler- Lagrange tensor (field equations) for the\n"
"invariant density of R^2. The field equations are the components of an\n"
"array named @code{inv1}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{invariant2}\n"
"@deffn {Function} invariant2 ()\n"
msgstr ""

# Ctensor.texi
msgid ""
"*** NOT YET IMPLEMENTED ***\n"
msgstr ""

# Ctensor.texi
msgid ""
"generates the mixed Euler- Lagrange tensor (field equations) for the\n"
"invariant density of @code{ric[i,j]*uriem[i,j]}. The field equations are the\n"
"components of an array named @code{inv2}.\n"
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{bimetric}\n"
"@deffn {Function} bimetric ()\n"
msgstr ""

# Ctensor.texi
msgid ""
"*** NOT YET IMPLEMENTED ***\n"
msgstr ""

# Ctensor.texi
msgid ""
"generates the field equations of Rosen's bimetric theory. The field\n"
"equations are the components of an array named @code{rosen}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Ctensor.texi
msgid ""
"@subsection Utility functions\n"
"@anchor{diagmatrixp}\n"
"@deffn {Function} diagmatrixp (@var{M},@var{n})\n"
msgstr ""

# Ctensor.texi
msgid ""
"Returns @code{true} if the first @var{n} rows and @var{n} columns of @var{M}\n"
"form a diagonal matrix or (2D) array.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor} @category{Predicate functions}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end deffn\n"
"@anchor{symmetricp}\n"
"@deffn {Function} symmetricp (@var{M}, @var{n})\n"
msgstr ""

# Ctensor.texi
msgid ""
"Returns @code{true} if @var{M} is a @var{n} by @var{n} symmetric matrix or two-dimensional array,\n"
"otherwise @code{false}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"If @var{n} is less than the size of @var{M},\n"
"@code{symmetricp} considers only the @var{n} by @var{n} submatrix (respectively, subarray)\n"
"comprising rows 1 through @var{n} and columns 1 through @var{n}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor} @category{Predicate functions}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end deffn\n"
"@anchor{ntermst}\n"
"@deffn {Function} ntermst (@var{f})\n"
"gives the user a quick picture of the \"size\" of the doubly subscripted\n"
"tensor (array) @var{f}.  It prints two element lists where the second\n"
"element corresponds to NTERMS of the components specified by the first\n"
"elements.  In this way, it is possible to quickly find the non-zero\n"
"expressions and attempt simplification.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{cdisplay}\n"
"@deffn {Function} cdisplay (@var{ten})\n"
"displays all the elements of the tensor @var{ten}, as represented by\n"
"a multidimensional array. Tensors of rank 0 and 1, as well as other types\n"
"of variables, are displayed as with @code{ldisplay}. Tensors of rank 2 are\n"
"displayed as 2-dimensional matrices, while tensors of higher rank are displayed\n"
"as a list of 2-dimensional matrices. For instance, the Riemann-tensor of\n"
"the Schwarzschild metric can be viewed as:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"(%i1) load(ctensor);\n"
"(%o1)       /share/tensor/ctensor.mac\n"
"(%i2) ratfac:true;\n"
"(%o2)                                true\n"
"(%i3) ct_coordsys(exteriorschwarzschild,all);\n"
"(%o3)                                done\n"
"(%i4) riemann(false);\n"
"(%o4)                                done\n"
"(%i5) cdisplay(riem);\n"
"          [ 0               0                   0           0     ]\n"
"          [                                                       ]\n"
"          [                              2                        ]\n"
"          [      3 m (r - 2 m)   m    2 m                         ]\n"
"          [ 0  - ------------- + -- - ----      0           0     ]\n"
"          [            4          3     4                         ]\n"
"          [           r          r     r                          ]\n"
"          [                                                       ]\n"
"riem    = [                                m (r - 2 m)            ]\n"
"    1, 1  [ 0               0              -----------      0     ]\n"
"          [                                     4                 ]\n"
"          [                                    r                  ]\n"
"          [                                                       ]\n"
"          [                                           m (r - 2 m) ]\n"
"          [ 0               0                   0     ----------- ]\n"
"          [                                                4      ]\n"
"          [                                               r       ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                [    2 m (r - 2 m)       ]\n"
"                                [ 0  -------------  0  0 ]\n"
"                                [          4             ]\n"
"                                [         r              ]\n"
"                     riem     = [                        ]\n"
"                         1, 2   [ 0        0        0  0 ]\n"
"                                [                        ]\n"
"                                [ 0        0        0  0 ]\n"
"                                [                        ]\n"
"                                [ 0        0        0  0 ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                [         m (r - 2 m)    ]\n"
"                                [ 0  0  - -----------  0 ]\n"
"                                [              4         ]\n"
"                                [             r          ]\n"
"                     riem     = [                        ]\n"
"                         1, 3   [ 0  0        0        0 ]\n"
"                                [                        ]\n"
"                                [ 0  0        0        0 ]\n"
"                                [                        ]\n"
"                                [ 0  0        0        0 ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                [            m (r - 2 m) ]\n"
"                                [ 0  0  0  - ----------- ]\n"
"                                [                 4      ]\n"
"                                [                r       ]\n"
"                     riem     = [                        ]\n"
"                         1, 4   [ 0  0  0        0       ]\n"
"                                [                        ]\n"
"                                [ 0  0  0        0       ]\n"
"                                [                        ]\n"
"                                [ 0  0  0        0       ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                               [       0         0  0  0 ]\n"
"                               [                         ]\n"
"                               [       2 m               ]\n"
"                               [ - ------------  0  0  0 ]\n"
"                    riem     = [    2                    ]\n"
"                        2, 1   [   r  (r - 2 m)          ]\n"
"                               [                         ]\n"
"                               [       0         0  0  0 ]\n"
"                               [                         ]\n"
"                               [       0         0  0  0 ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"             [     2 m                                         ]\n"
"             [ ------------  0        0               0        ]\n"
"             [  2                                              ]\n"
"             [ r  (r - 2 m)                                    ]\n"
"             [                                                 ]\n"
"             [      0        0        0               0        ]\n"
"             [                                                 ]\n"
"  riem     = [                         m                       ]\n"
"      2, 2   [      0        0  - ------------        0        ]\n"
"             [                     2                           ]\n"
"             [                    r  (r - 2 m)                 ]\n"
"             [                                                 ]\n"
"             [                                         m       ]\n"
"             [      0        0        0         - ------------ ]\n"
"             [                                     2           ]\n"
"             [                                    r  (r - 2 m) ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                [ 0  0       0        0 ]\n"
"                                [                       ]\n"
"                                [            m          ]\n"
"                                [ 0  0  ------------  0 ]\n"
"                     riem     = [        2              ]\n"
"                         2, 3   [       r  (r - 2 m)    ]\n"
"                                [                       ]\n"
"                                [ 0  0       0        0 ]\n"
"                                [                       ]\n"
"                                [ 0  0       0        0 ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                [ 0  0  0       0       ]\n"
"                                [                       ]\n"
"                                [               m       ]\n"
"                                [ 0  0  0  ------------ ]\n"
"                     riem     = [           2           ]\n"
"                         2, 4   [          r  (r - 2 m) ]\n"
"                                [                       ]\n"
"                                [ 0  0  0       0       ]\n"
"                                [                       ]\n"
"                                [ 0  0  0       0       ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                      [ 0  0  0  0 ]\n"
"                                      [            ]\n"
"                                      [ 0  0  0  0 ]\n"
"                                      [            ]\n"
"                           riem     = [ m          ]\n"
"                               3, 1   [ -  0  0  0 ]\n"
"                                      [ r          ]\n"
"                                      [            ]\n"
"                                      [ 0  0  0  0 ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                      [ 0  0  0  0 ]\n"
"                                      [            ]\n"
"                                      [ 0  0  0  0 ]\n"
"                                      [            ]\n"
"                           riem     = [    m       ]\n"
"                               3, 2   [ 0  -  0  0 ]\n"
"                                      [    r       ]\n"
"                                      [            ]\n"
"                                      [ 0  0  0  0 ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                               [   m                      ]\n"
"                               [ - -   0   0       0      ]\n"
"                               [   r                      ]\n"
"                               [                          ]\n"
"                               [        m                 ]\n"
"                               [  0   - -  0       0      ]\n"
"                    riem     = [        r                 ]\n"
"                        3, 3   [                          ]\n"
"                               [  0    0   0       0      ]\n"
"                               [                          ]\n"
"                               [              2 m - r     ]\n"
"                               [  0    0   0  ------- + 1 ]\n"
"                               [                 r        ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                    [ 0  0  0    0   ]\n"
"                                    [                ]\n"
"                                    [ 0  0  0    0   ]\n"
"                                    [                ]\n"
"                         riem     = [            2 m ]\n"
"                             3, 4   [ 0  0  0  - --- ]\n"
"                                    [             r  ]\n"
"                                    [                ]\n"
"                                    [ 0  0  0    0   ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                [       0        0  0  0 ]\n"
"                                [                        ]\n"
"                                [       0        0  0  0 ]\n"
"                                [                        ]\n"
"                     riem     = [       0        0  0  0 ]\n"
"                         4, 1   [                        ]\n"
"                                [      2                 ]\n"
"                                [ m sin (theta)          ]\n"
"                                [ -------------  0  0  0 ]\n"
"                                [       r                ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                                [ 0        0        0  0 ]\n"
"                                [                        ]\n"
"                                [ 0        0        0  0 ]\n"
"                                [                        ]\n"
"                     riem     = [ 0        0        0  0 ]\n"
"                         4, 2   [                        ]\n"
"                                [         2              ]\n"
"                                [    m sin (theta)       ]\n"
"                                [ 0  -------------  0  0 ]\n"
"                                [          r             ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"                              [ 0  0          0          0 ]\n"
"                              [                            ]\n"
"                              [ 0  0          0          0 ]\n"
"                              [                            ]\n"
"                   riem     = [ 0  0          0          0 ]\n"
"                       4, 3   [                            ]\n"
"                              [                2           ]\n"
"                              [         2 m sin (theta)    ]\n"
"                              [ 0  0  - ---------------  0 ]\n"
"                              [                r           ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"           [        2                                             ]\n"
"           [   m sin (theta)                                      ]\n"
"           [ - -------------         0                0         0 ]\n"
"           [         r                                            ]\n"
"           [                                                      ]\n"
"           [                         2                            ]\n"
"           [                    m sin (theta)                     ]\n"
"riem     = [        0         - -------------         0         0 ]\n"
"    4, 4   [                          r                           ]\n"
"           [                                                      ]\n"
"           [                                          2           ]\n"
"           [                                   2 m sin (theta)    ]\n"
"           [        0                0         ---------------  0 ]\n"
"           [                                          r           ]\n"
"           [                                                      ]\n"
"           [        0                0                0         0 ]\n"
msgstr ""

# Ctensor.texi
msgid ""
"(%o5)                                done\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
"@anchor{deleten}\n"
"@deffn {Function} deleten (@var{L}, @var{n})\n"
"Returns a new list consisting of @var{L} with the @var{n}'th element\n"
"deleted.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end deffn\n"
msgstr ""

# Ctensor.texi
msgid ""
"@subsection Variables used by @code{ctensor}\n"
"@anchor{dim}\n"
"@defvr {Option variable} dim\n"
"Default value: 4\n"
msgstr ""

# Ctensor.texi
msgid ""
"An option in the @code{ctensor} (component tensor)\n"
"package.  @code{dim} is the dimension of the manifold with the\n"
"default 4. The command @code{dim: n} will reset the dimension to any other\n"
"value @code{n}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{diagmetric}\n"
"@defvr {Option variable} diagmetric\n"
"Default value: @code{false}\n"
msgstr ""

# Ctensor.texi
msgid ""
"An option in the @code{ctensor} (component tensor)\n"
"package.  If @code{diagmetric} is @code{true} special routines compute\n"
"all geometrical objects (which contain the metric tensor explicitly)\n"
"by taking into consideration the diagonality of the metric. Reduced\n"
"run times will, of course, result. Note: this option is set\n"
"automatically by @code{csetup} if a diagonal metric is specified.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ctrgsimp}\n"
"@defvr {Option variable} ctrgsimp\n"
msgstr ""

# Ctensor.texi
msgid ""
"Causes trigonometric simplifications to be used when tensors are computed. Presently,\n"
"@code{ctrgsimp} affects only computations involving a moving frame.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor} @category{Simplification flags and variables}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{cframe_flag}\n"
"@defvr {Option variable} cframe_flag\n"
msgstr ""

# Ctensor.texi
msgid ""
"Causes computations to be performed relative to a moving frame as opposed to\n"
"a holonomic metric. The frame is defined by the inverse frame array @code{fri}\n"
"and the frame metric @code{lfg}. For computations using a Cartesian frame,\n"
"@code{lfg} should be the unit matrix of the appropriate dimension; for\n"
"computations in a Lorentz frame, @code{lfg} should have the appropriate\n"
"signature.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ctorsion_flag}\n"
"@defvr {Option variable} ctorsion_flag\n"
msgstr ""

# Ctensor.texi
msgid ""
"Causes the contortion tensor to be included in the computation of the\n"
"connection coefficients. The contortion tensor itself is computed by\n"
"@code{contortion} from the user-supplied tensor @code{tr}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{cnonmet_flag}\n"
"@defvr {Option variable} cnonmet_flag\n"
msgstr ""

# Ctensor.texi
msgid ""
"Causes the nonmetricity coefficients to be included in the computation of\n"
"the connection coefficients. The nonmetricity coefficients are computed\n"
"from the user-supplied nonmetricity vector @code{nm} by the function\n"
"@code{nonmetricity}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ctayswitch}\n"
"@defvr {Option variable} ctayswitch\n"
msgstr ""

# Ctensor.texi
msgid ""
"If set to @code{true}, causes some @code{ctensor} computations to be carried out using\n"
"Taylor-series expansions. Presently, @code{christof}, @code{ricci},\n"
"@code{uricci}, @code{einstein}, and @code{weyl} take into account this\n"
"setting.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ctayvar}\n"
"@defvr {Option variable} ctayvar\n"
msgstr ""

# Ctensor.texi
msgid ""
"Variable used for Taylor-series expansion if @code{ctayswitch} is set to\n"
"@code{true}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ctaypov}\n"
"@defvr {Option variable} ctaypov\n"
msgstr ""

# Ctensor.texi
msgid ""
"Maximum power used in Taylor-series expansion when @code{ctayswitch} is\n"
"set to @code{true}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ctaypt}\n"
"@defvr {Option variable} ctaypt\n"
msgstr ""

# Ctensor.texi
msgid ""
"Point around which Taylor-series expansion is carried out when\n"
"@code{ctayswitch} is set to @code{true}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{gdet}\n"
"@defvr {System variable} gdet\n"
msgstr ""

# Ctensor.texi
msgid ""
"The determinant of the metric tensor @code{lg}. Computed by @code{cmetric} when\n"
"@code{cframe_flag} is set to @code{false}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ratchristof}\n"
"@defvr {Option variable} ratchristof\n"
msgstr ""

# Ctensor.texi
msgid ""
"Causes rational simplification to be applied by @code{christof}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{rateinstein}\n"
"@defvr {Option variable} rateinstein\n"
"Default value: @code{true}\n"
msgstr ""

# Ctensor.texi
msgid ""
"If @code{true} rational simplification will be\n"
"performed on the non-zero components of Einstein tensors; if\n"
"@code{ratfac} is @code{true} then the components will also be factored.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
"@anchor{ratriemann}\n"
"@defvr {Option variable} ratriemann\n"
"Default value: @code{true}\n"
msgstr ""

# Ctensor.texi
msgid ""
"One of the switches which controls\n"
"simplification of Riemann tensors; if @code{true}, then rational\n"
"simplification will be done; if @code{ratfac} is @code{true} then each of the\n"
"components will also be factored.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ratweyl}\n"
"@defvr {Option variable} ratweyl\n"
"Default value: @code{true}\n"
msgstr ""

# Ctensor.texi
msgid ""
"If @code{true}, this switch causes the @code{weyl} function\n"
"to apply rational simplification to the values of the Weyl tensor. If\n"
"@code{ratfac} is @code{true}, then the components will also be factored.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{lfg}\n"
"@defvr {Variable} lfg\n"
"The covariant frame metric. By default, it is initialized to the 4-dimensional Lorentz frame with signature (+,+,+,-). Used when @code{cframe_flag} is @code{true}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ufg}\n"
"@defvr {Variable} ufg\n"
"The inverse frame metric. Computed from @code{lfg} when @code{cmetric} is called while @code{cframe_flag} is set to @code{true}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{riem}\n"
"@defvr {Variable} riem\n"
"The (3,1) Riemann tensor. Computed when the function @code{riemann} is invoked. For information about index ordering, see the description of @code{riemann}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"If @code{cframe_flag} is @code{true}, @code{riem} is computed from the covariant Riemann-tensor @code{lriem}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{lriem}\n"
"@defvr {Variable} lriem\n"
msgstr ""

# Ctensor.texi
msgid ""
"The covariant Riemann tensor. Computed by @code{lriemann}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{uriem}\n"
"@defvr {Variable} uriem\n"
msgstr ""

# Ctensor.texi
msgid ""
"The contravariant Riemann tensor. Computed by @code{uriemann}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ric}\n"
"@defvr {Variable} ric\n"
msgstr ""

# Ctensor.texi
msgid ""
"The mixed Ricci-tensor. Computed by @code{ricci}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{uric}\n"
"@defvr {Variable} uric\n"
msgstr ""

# Ctensor.texi
msgid ""
"The contravariant Ricci-tensor. Computed by @code{uricci}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{lg}\n"
"@defvr {Variable} lg\n"
msgstr ""

# Ctensor.texi
msgid ""
"The metric tensor. This tensor must be specified (as a @code{dim} by @code{dim} matrix)\n"
"before other computations can be performed.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ug}\n"
"@defvr {Variable} ug\n"
msgstr ""

# Ctensor.texi
msgid ""
"The inverse of the metric tensor. Computed by @code{cmetric}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{weyl_variable}\n"
"@defvr {Variable} weyl\n"
msgstr ""

# Ctensor.texi
msgid ""
"The Weyl tensor. Computed by @code{weyl}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{fb}\n"
"@defvr {Variable} fb\n"
msgstr ""

# Ctensor.texi
msgid ""
"Frame bracket coefficients, as computed by @code{frame_bracket}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{kinvariant}\n"
"@defvr {Variable} kinvariant\n"
msgstr ""

# Ctensor.texi
msgid ""
"The Kretchmann invariant. Computed by @code{rinvariant}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{np}\n"
"@defvr {Variable} np\n"
msgstr ""

# Ctensor.texi
msgid ""
"A Newman-Penrose null tetrad. Computed by @code{nptetrad}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{npi}\n"
"@defvr {Variable} npi\n"
msgstr ""

# Ctensor.texi
msgid ""
"The raised-index Newman-Penrose null tetrad. Computed by @code{nptetrad}.\n"
"Defined as @code{ug.np}. The product @code{np.transpose(npi)} is constant:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"(%i39) trigsimp(np.transpose(npi));\n"
"                              [  0   - 1  0  0 ]\n"
"                              [                ]\n"
"                              [ - 1   0   0  0 ]\n"
"(%o39)                        [                ]\n"
"                              [  0    0   0  1 ]\n"
"                              [                ]\n"
"                              [  0    0   1  0 ]\n"
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{tr}\n"
"@defvr {Variable} tr\n"
msgstr ""

# Ctensor.texi
msgid ""
"User-supplied rank-3 tensor representing torsion. Used by @code{contortion}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{kt}\n"
"@defvr {Variable} kt\n"
msgstr ""

# Ctensor.texi
msgid ""
"The contortion tensor, computed from @code{tr} by @code{contortion}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{nm}\n"
"@defvr {Variable} nm\n"
msgstr ""

# Ctensor.texi
msgid ""
"User-supplied nonmetricity vector. Used by @code{nonmetricity}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{nmc}\n"
"@defvr {Variable} nmc\n"
msgstr ""

# Ctensor.texi
msgid ""
"The nonmetricity coefficients, computed from @code{nm} by @code{nonmetricity}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{tensorkill}\n"
"@defvr {System variable} tensorkill\n"
msgstr ""

# Ctensor.texi
msgid ""
"Variable indicating if the tensor package has been initialized. Set and used by\n"
"@code{csetup}, reset by @code{init_ctensor}.\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@anchor{ct_coords}\n"
"@defvr {Option variable} ct_coords\n"
"Default value: @code{[]}\n"
msgstr ""

# Ctensor.texi
msgid ""
"An option in the @code{ctensor} (component tensor)\n"
"package.  @code{ct_coords} contains a list of coordinates.\n"
"While normally defined when the function @code{csetup} is called,\n"
"one may redefine the coordinates with the assignment\n"
"@code{ct_coords: [j1, j2, ..., jn]} where the j's are the new coordinate names.\n"
"See also @mrefdot{csetup}\n"
msgstr ""

# Ctensor.texi
msgid ""
"@opencatbox\n"
"@category{Package ctensor}\n"
"@closecatbox\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end defvr\n"
msgstr ""

# Ctensor.texi
msgid ""
"@subsection Reserved names\n"
msgstr ""

# Ctensor.texi
msgid ""
"The following names are used internally by the @code{ctensor} package and\n"
"should not be redefined:\n"
msgstr ""

# Ctensor.texi
msgid ""
"@example\n"
"  Name         Description\n"
"  ---------------------------------------------------------------------\n"
"  _lg()        Evaluates to lfg if frame metric used, lg otherwise\n"
"  _ug()        Evaluates to ufg if frame metric used, ug otherwise\n"
"  cleanup()    Removes items drom the deindex list\n"
"  contract4()  Used by psi()\n"
"  filemet()    Used by csetup() when reading the metric from a file\n"
"  findde1()    Used by findde()\n"
"  findde2()    Used by findde()\n"
"  findde3()    Used by findde()\n"
"  kdelt()      Kronecker-delta (not generalized)\n"
"  newmet()     Used by csetup() for setting up a metric interactively\n"
"  setflags()   Used by init_ctensor()\n"
"  readvalue()\n"
"  resimp()\n"
"  sermet()     Used by csetup() for entering a metric as Taylor-series\n"
"  txyzsum()\n"
"  tmetric()    Frame metric, used by cmetric() when cframe_flag:true\n"
"  triemann()   Riemann-tensor in frame base, used when cframe_flag:true\n"
"  tricci()     Ricci-tensor in frame base, used when cframe_flag:true\n"
"  trrc()       Ricci rotation coefficients, used by christof()\n"
"  yesp()\n"
"@end example\n"
"@subsection Changes\n"
msgstr ""

# Ctensor.texi
msgid ""
"In November, 2004, the @code{ctensor} package was extensively rewritten.\n"
"Many functions and variables have been renamed in order to make the\n"
"package compatible with the commercial version of Macsyma.\n"
"@example\n"
"  New Name     Old Name        Description\n"
"  ---------------------------------------------------------------------\n"
"  ctaylor()    DLGTAYLOR()     Taylor-series expansion of an expression\n"
"  lgeod[]      EM              Geodesic equations\n"
"  ein[]        G[]             Mixed Einstein-tensor\n"
"  ric[]        LR[]            Mixed Ricci-tensor\n"
"  ricci()      LRICCICOM()     Compute the mixed Ricci-tensor\n"
"  ctaypov      MINP            Maximum power in Taylor-series expansion\n"
"  cgeodesic()  MOTION          Compute geodesic equations\n"
"  ct_coords    OMEGA           Metric coordinates\n"
"  ctayvar      PARAM           Taylor-series expansion variable\n"
"  lriem[]      R[]             Covariant Riemann-tensor\n"
"  uriemann()   RAISERIEMANN()  Compute the contravariant Riemann-tensor\n"
"  ratriemann   RATRIEMAN       Rational simplif. of the Riemann-tensor\n"
"  uric[]       RICCI[]         Contravariant Ricci-tensor\n"
"  uricci()     RICCICOM()      Compute the contravariant Ricci-tensor\n"
"  cmetric()    SETMETRIC()     Set up the metric\n"
"  ctaypt       TAYPT           Point for Taylor-series expansion\n"
"  ctayswitch   TAYSWITCH       Taylor-series setting switch\n"
"  csetup()     TSETUP()        Start interactive setup session\n"
"  ctransform() TTRANSFORM()    Interactive coordinate transformation\n"
"  uriem[]      UR[]            Contravariant Riemann-tensor\n"
"  weyl[]       W[]             (3,1) Weyl-tensor\n"
msgstr ""

# Ctensor.texi
msgid ""
"@end example\n"
msgstr ""

# Ctensor.texi
msgid ""
msgstr ""
